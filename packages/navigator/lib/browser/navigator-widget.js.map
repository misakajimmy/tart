{"version":3,"sources":["browser/navigator-widget.tsx"],"names":[],"mappings":"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","file":"../../src/browser/navigator-widget.js","sourcesContent":["import React from 'react';\r\nimport {inject, injectable, postConstruct} from 'inversify';\r\nimport {DirNode, FileNode, FileStatNode, FileTreeWidget} from '@tart/filesystem';\r\nimport {\r\n  ApplicationShell,\r\n  ContextMenuRenderer,\r\n  ExpandableTreeNode,\r\n  Key,\r\n  NodeProps,\r\n  OpenerService,\r\n  SelectableTreeNode,\r\n  TREE_NODE_SEGMENT_CLASS,\r\n  TREE_NODE_TAIL_CLASS,\r\n  TreeDecoration,\r\n  TreeModel,\r\n  TreeNode,\r\n  TreeProps\r\n} from '@tart/core';\r\nimport {FileNavigatorModel} from './navigator-model';\r\nimport {nls} from '@tart/core/lib/common/nls';\r\nimport {WorkspaceNode, WorkspaceRootNode} from './navigator-tree';\r\nimport {CommandService, isOSX, notEmpty} from '@tart/core/lib/common';\r\nimport {Message} from '@lumino/messaging';\r\nimport {NavigatorContextKeyService} from './navigator-context-key-service';\r\nimport URI from '@tart/core/lib/common/uri';\r\nimport {FileNavigatorCommands} from './navigator-contribution';\r\n\r\nexport const FILE_NAVIGATOR_ID = 'files';\r\nexport const LABEL = nls.localizeByDefault('No Folder Opened');\r\nexport const CLASS = 'wm-Files';\r\n\r\n@injectable()\r\nexport class FileNavigatorWidget extends FileTreeWidget {\r\n\r\n  @inject(NavigatorContextKeyService)\r\n  protected readonly contextKeyService: NavigatorContextKeyService;\r\n\r\n  @inject(OpenerService) protected readonly openerService: OpenerService;\r\n\r\n  constructor(\r\n      @inject(TreeProps) readonly props: TreeProps,\r\n      @inject(FileNavigatorModel) readonly model: FileNavigatorModel,\r\n      @inject(CommandService) protected readonly commandService: CommandService,\r\n      @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer,\r\n      @inject(ApplicationShell) protected readonly shell: ApplicationShell,\r\n  ) {\r\n    super(props, model, contextMenuRenderer);\r\n    console.log(model);\r\n    this.id = FILE_NAVIGATOR_ID;\r\n    this.addClass(CLASS);\r\n  }\r\n\r\n  @postConstruct()\r\n  protected init() {\r\n    super.init();\r\n    // This ensures that the context menu command to hide this widget receives the label 'Folders'\r\n    // regardless of the name of workspace. See ViewContainer.updateToolbarItems.\r\n    const dataset = {...this.title.dataset, visibilityCommandLabel: nls.localizeByDefault('Folders')};\r\n    this.title.dataset = dataset;\r\n    this.updateSelectionContextKeys();\r\n    this.toDispose.pushAll([\r\n      this.model.onSelectionChanged(() =>\r\n          this.updateSelectionContextKeys()\r\n      ),\r\n      this.model.onExpansionChanged(node => {\r\n        if (node.expanded && node.children.length === 1) {\r\n          const child = node.children[0];\r\n          if (ExpandableTreeNode.is(child) && !child.expanded) {\r\n            this.model.expandNode(child);\r\n          }\r\n        }\r\n      })\r\n    ]);\r\n  }\r\n\r\n  protected renderTree(model: TreeModel): React.ReactNode {\r\n    if (this.model.root && this.isEmptyMultiRootWorkspace(model)) {\r\n      return this.renderEmptyMultiRootWorkspace();\r\n    }\r\n    return super.renderTree(model);\r\n  }\r\n\r\n  /**\r\n   * When a multi-root workspace is opened, a user can remove all the folders from it.\r\n   * Instead of displaying an empty navigator tree, this will show a button to add more folders.\r\n   */\r\n  protected renderEmptyMultiRootWorkspace(): React.ReactNode {\r\n    // TODO: @msujew Implement a markdown renderer and use vscode/explorerViewlet/noFolderHelp\r\n    return <div className='wm-navigator-container'>\r\n      <div className='center'>You have not yet added a folder to the workspace.</div>\r\n      <div className='open-workspace-button-container'>\r\n        <button className='wm-button open-workspace-button' title='Add a folder to your workspace'\r\n                onClick={this.addFolder}\r\n                onKeyUp={this.keyUpHandler}>\r\n          Add Folder\r\n        </button>\r\n      </div>\r\n    </div>;\r\n  }\r\n\r\n  protected readonly addFolder = () => this.doAddFolder();\r\n\r\n  protected doAddFolder(): void {\r\n    // this.commandService.executeCommand(WorkspaceCommands.ADD_FOLDER.id);\r\n  }\r\n\r\n  protected readonly keyUpHandler = (e: React.KeyboardEvent) => {\r\n    if (Key.ENTER.keyCode === e.keyCode) {\r\n      (e.target as HTMLElement).click();\r\n    }\r\n  };\r\n\r\n  protected doUpdateRows(): void {\r\n    super.doUpdateRows();\r\n    this.title.label = LABEL;\r\n    if (WorkspaceNode.is(this.model.root)) {\r\n      if (this.model.root.name === WorkspaceNode.name) {\r\n        const rootNode = this.model.root.children[0];\r\n        if (WorkspaceRootNode.is(rootNode)) {\r\n          this.title.label = this.toNodeName(rootNode);\r\n          this.title.caption = this.labelProvider.getLongName(rootNode.uri);\r\n        }\r\n      } else {\r\n        this.title.label = this.toNodeName(this.model.root);\r\n        this.title.caption = this.title.label;\r\n      }\r\n    } else {\r\n      this.title.caption = this.title.label;\r\n    }\r\n  }\r\n\r\n  protected onAfterAttach(msg: Message) {\r\n    super.onAfterAttach(msg);\r\n    this.addClipboardListener(this.node, 'copy', e => this.handleCopy(e));\r\n    this.addClipboardListener(this.node, 'paste', e => this.handlePaste(e));\r\n    this.enableDndOnMainPanel();\r\n  }\r\n\r\n  protected handleCopy(event: ClipboardEvent): void {\r\n    const uris = this.model.selectedFileStatNodes.map(node => node.uri.toString());\r\n    if (uris.length > 0 && event.clipboardData) {\r\n      event.clipboardData.setData('text/plain', uris.join('\\n'));\r\n      event.preventDefault();\r\n    }\r\n  }\r\n\r\n  protected handlePaste(event: ClipboardEvent): void {\r\n    if (event.clipboardData) {\r\n      const raw = event.clipboardData.getData('text/plain');\r\n      if (!raw) {\r\n        return;\r\n      }\r\n      const target = this.model.selectedFileStatNodes[0];\r\n      if (!target) {\r\n        return;\r\n      }\r\n      for (const file of raw.split('\\n')) {\r\n        event.preventDefault();\r\n        const source = new URI(file);\r\n        this.model.copy(source, target);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected enableDndOnMainPanel(): void {\r\n    const mainPanelNode = this.shell.mainPanel.node;\r\n    this.addEventListener(mainPanelNode, 'drop', async ({dataTransfer}) => {\r\n      const treeNodes = dataTransfer && this.getSelectedTreeNodesFromData(dataTransfer) || [];\r\n      if (treeNodes.length > 0) {\r\n        treeNodes.filter(FileNode.is).forEach(treeNode => {\r\n          if (!SelectableTreeNode.isSelected(treeNode)) {\r\n            this.model.toggleNode(treeNode);\r\n          }\r\n        });\r\n        this.commandService.executeCommand(FileNavigatorCommands.OPEN.id);\r\n      } else if (dataTransfer && dataTransfer.files?.length > 0) {\r\n        // the files were dragged from the outside the workspace\r\n        // Array.from(dataTransfer.files).forEach(async file => {\r\n        //     const fileUri = new URI(file.path);\r\n        //     const opener = await this.openerService.getOpener(fileUri);\r\n        //     opener.open(fileUri);\r\n        // });\r\n      }\r\n    });\r\n    const handler = (e: DragEvent) => {\r\n      if (e.dataTransfer) {\r\n        e.dataTransfer.dropEffect = 'link';\r\n        e.preventDefault();\r\n      }\r\n    };\r\n    this.addEventListener(mainPanelNode, 'dragover', handler);\r\n    this.addEventListener(mainPanelNode, 'dragenter', handler);\r\n  }\r\n\r\n  protected getSelectedTreeNodesFromData(data: DataTransfer): TreeNode[] {\r\n    const resources = data.getData('selected-tree-nodes');\r\n    if (!resources) {\r\n      return [];\r\n    }\r\n    const ids: string[] = JSON.parse(resources);\r\n    return ids.map(id => this.model.getNode(id)).filter(node => node !== undefined) as TreeNode[];\r\n  }\r\n\r\n  protected renderTailDecorations(node: TreeNode, props: NodeProps): React.ReactNode {\r\n    const tailDecorations = this.getDecorationData(node, 'tailDecorations').filter(notEmpty).reduce((acc, current) => acc.concat(current), []);\r\n\r\n    if (tailDecorations.length === 0) {\r\n      return;\r\n    }\r\n\r\n    // Handle rendering of directories versus file nodes.\r\n    if (FileStatNode.is(node) && node.fileStat.isDirectory) {\r\n      return this.renderTailDecorationsForDirectoryNode(node, props, tailDecorations);\r\n    } else {\r\n      return this.renderTailDecorationsForNode(node, props, tailDecorations);\r\n    }\r\n  }\r\n\r\n  protected renderTailDecorationsForDirectoryNode(node: TreeNode, props: NodeProps, tailDecorations:\r\n      (TreeDecoration.TailDecoration | TreeDecoration.TailDecorationIcon | TreeDecoration.TailDecorationIconClass)[]): React.ReactNode {\r\n    // If the node represents a directory, we just want to use the decorationData with the highest priority (last element).\r\n    const decoration = tailDecorations[tailDecorations.length - 1];\r\n    const {tooltip, fontData} = decoration as TreeDecoration.TailDecoration;\r\n    const color = (decoration as TreeDecoration.TailDecorationIcon).color;\r\n    const className = [TREE_NODE_SEGMENT_CLASS, TREE_NODE_TAIL_CLASS].join(' ');\r\n    const style = fontData ? this.applyFontStyles({}, fontData) : color ? {color} : undefined;\r\n    const content = <span\r\n        className={this.getIconClass('circle', [TreeDecoration.Styles.DECORATOR_SIZE_CLASS])}/>;\r\n\r\n    return <div className={className} style={style} title={tooltip}>\r\n      {content}\r\n    </div>;\r\n  }\r\n\r\n  protected isEmptyMultiRootWorkspace(model: TreeModel): boolean {\r\n    return WorkspaceNode.is(model.root) && model.root.children.length === 0;\r\n  }\r\n\r\n  protected handleClickEvent(node: TreeNode | undefined, event: React.MouseEvent<HTMLElement>): void {\r\n    const modifierKeyCombined: boolean = isOSX ? (event.shiftKey || event.metaKey) : (event.shiftKey || event.ctrlKey);\r\n    // if (!modifierKeyCombined && node && this.corePreferences['workbench.list.openMode'] === 'singleClick') {\r\n    if (!modifierKeyCombined && node) {\r\n      this.model.previewNode(node);\r\n    }\r\n    super.handleClickEvent(node, event);\r\n  }\r\n\r\n  protected onAfterShow(msg: Message): void {\r\n    super.onAfterShow(msg);\r\n    this.contextKeyService.explorerViewletVisible.set(true);\r\n  }\r\n\r\n  protected onAfterHide(msg: Message): void {\r\n    super.onAfterHide(msg);\r\n    this.contextKeyService.explorerViewletVisible.set(false);\r\n  }\r\n\r\n  protected updateSelectionContextKeys(): void {\r\n    this.contextKeyService.explorerResourceIsFolder.set(DirNode.is(this.model.selectedNodes[0]));\r\n  }\r\n}\r\n"]}
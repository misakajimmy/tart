{"version":3,"sources":["browser/navigator-preferences.ts"],"names":[],"mappings":"AACA,OAAO,EACL,qBAAqB,EACrB,sBAAsB,EAGtB,iBAAiB,EAClB,MAAM,YAAY,CAAC;AACpB,OAAO,EAAC,GAAG,EAAC,MAAM,2BAA2B,CAAC;AAE9C,MAAM,CAAC,MAAM,yBAAyB,GAAqB;IACzD,MAAM,EAAE,QAAQ;IAChB,UAAU,EAAE;QACV,qBAAqB,EAAE;YACrB,IAAI,EAAE,SAAS;YACf,WAAW,EAAE,GAAG,CAAC,iBAAiB,CAAC,+FAA+F,CAAC;YACnI,OAAO,EAAE,IAAI;SACd;KACF;CACF,CAAC;AAMF,MAAM,CAAC,MAAM,mCAAmC,GAAG,MAAM,CAAC,qCAAqC,CAAC,CAAC;AACjG,MAAM,CAAC,MAAM,wBAAwB,GAAG,MAAM,CAAC,sBAAsB,CAAC,CAAC;AAGvE,MAAM,UAAU,0BAA0B,CAAC,WAA8B,EAAE,SAA2B,yBAAyB;IAC7H,OAAO,qBAAqB,CAAC,WAAW,EAAE,MAAM,CAAC,CAAC;AACpD,CAAC;AAED,MAAM,UAAU,4BAA4B,CAAC,IAAqB;IAChE,IAAI,CAAC,wBAAwB,CAAC,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;QAClD,MAAM,WAAW,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAoB,iBAAiB,CAAC,CAAC;QAC5E,MAAM,YAAY,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAyB,mCAAmC,CAAC,CAAC;QACpG,OAAO,0BAA0B,CAAC,WAAW,EAAE,YAAY,CAAC,MAAM,CAAC,CAAC;IACtE,CAAC,CAAC,CAAC,gBAAgB,EAAE,CAAC;IACtB,IAAI,CAAC,mCAAmC,CAAC,CAAC,eAAe,CAAC,EAAC,MAAM,EAAE,yBAAyB,EAAC,CAAC,CAAC;IAC/F,IAAI,CAAC,sBAAsB,CAAC,CAAC,SAAS,CAAC,mCAAmC,CAAC,CAAC;AAC9E,CAAC","file":"../../src/browser/navigator-preferences.js","sourcesContent":["import {interfaces} from 'inversify';\r\nimport {\r\n  createPreferenceProxy,\r\n  PreferenceContribution,\r\n  PreferenceProxy,\r\n  PreferenceSchema,\r\n  PreferenceService\r\n} from '@tart/core';\r\nimport {nls} from '@tart/core/lib/common/nls';\r\n\r\nexport const FileNavigatorConfigSchema: PreferenceSchema = {\r\n  'type': 'object',\r\n  properties: {\r\n    'explorer.autoReveal': {\r\n      type: 'boolean',\r\n      description: nls.localizeByDefault('Controls whether the explorer should automatically reveal and select files when opening them.'),\r\n      default: true\r\n    }\r\n  }\r\n};\r\n\r\nexport interface FileNavigatorConfiguration {\r\n  'explorer.autoReveal': boolean;\r\n}\r\n\r\nexport const FileNavigatorPreferenceContribution = Symbol('FileNavigatorPreferenceContribution');\r\nexport const FileNavigatorPreferences = Symbol('NavigatorPreferences');\r\nexport type FileNavigatorPreferences = PreferenceProxy<FileNavigatorConfiguration>;\r\n\r\nexport function createNavigatorPreferences(preferences: PreferenceService, schema: PreferenceSchema = FileNavigatorConfigSchema): FileNavigatorPreferences {\r\n  return createPreferenceProxy(preferences, schema);\r\n}\r\n\r\nexport function bindFileNavigatorPreferences(bind: interfaces.Bind): void {\r\n  bind(FileNavigatorPreferences).toDynamicValue(ctx => {\r\n    const preferences = ctx.container.get<PreferenceService>(PreferenceService);\r\n    const contribution = ctx.container.get<PreferenceContribution>(FileNavigatorPreferenceContribution);\r\n    return createNavigatorPreferences(preferences, contribution.schema);\r\n  }).inSingletonScope();\r\n  bind(FileNavigatorPreferenceContribution).toConstantValue({schema: FileNavigatorConfigSchema});\r\n  bind(PreferenceContribution).toService(FileNavigatorPreferenceContribution);\r\n}\r\n"]}
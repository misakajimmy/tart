{"version":3,"sources":["browser/navigator-tree.ts"],"names":[],"mappings":"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","file":"../../src/browser/navigator-tree.js","sourcesContent":["/**\r\n * File tree root node for multi-root workspaces.\r\n */\r\nimport {CompositeTreeNode, SelectableTreeNode, TreeNode} from '@tart/core';\r\nimport {DirNode, FileTree} from '@tart/filesystem';\r\nimport {inject, injectable, postConstruct} from 'inversify';\r\nimport URI from '@tart/core/lib/common/uri';\r\nimport {FileStat} from '@tart/filesystem/lib/common/files';\r\nimport {FileNavigatorFilter} from './navigator-filter';\r\n\r\n@injectable()\r\nexport class FileNavigatorTree extends FileTree {\r\n\r\n  @inject(FileNavigatorFilter) protected readonly filter: FileNavigatorFilter;\r\n\r\n  async resolveChildren(parent: CompositeTreeNode): Promise<TreeNode[]> {\r\n    if (WorkspaceNode.is(parent)) {\r\n      return parent.children;\r\n    }\r\n    return this.filter.filter(super.resolveChildren(parent));\r\n  }\r\n\r\n  createId(root: WorkspaceRootNode, uri: URI): string {\r\n    const id = super.toNodeId(uri, root);\r\n    return id === root.id ? id : `${root.id}:${id}`;\r\n  }\r\n\r\n  async createWorkspaceRoot(rootFolder: FileStat, workspaceNode: WorkspaceNode): Promise<WorkspaceRootNode> {\r\n    const node = this.toNode(rootFolder, workspaceNode) as WorkspaceRootNode;\r\n    Object.assign(node, {\r\n      visible: workspaceNode.name !== WorkspaceNode.name,\r\n    });\r\n    return node;\r\n  }\r\n\r\n  @postConstruct()\r\n  protected init(): void {\r\n    this.toDispose.push(this.filter.onFilterChanged(() => this.refresh()));\r\n  }\r\n\r\n  protected toNodeId(uri: URI, parent: CompositeTreeNode): string {\r\n    const workspaceRootNode = WorkspaceRootNode.find(parent);\r\n    if (workspaceRootNode) {\r\n      return this.createId(workspaceRootNode, uri);\r\n    }\r\n    return super.toNodeId(uri, parent);\r\n  }\r\n}\r\n\r\n/**\r\n * File tree root node for multi-root workspaces.\r\n */\r\nexport interface WorkspaceNode extends CompositeTreeNode, SelectableTreeNode {\r\n  children: WorkspaceRootNode[];\r\n}\r\n\r\nexport namespace WorkspaceNode {\r\n\r\n  export const id = 'WorkspaceNodeId';\r\n  export const name = 'WorkspaceNode';\r\n\r\n  export function is(node: TreeNode | undefined): node is WorkspaceNode {\r\n    return CompositeTreeNode.is(node) && node.id === WorkspaceNode.id;\r\n  }\r\n\r\n  /**\r\n   * Create a `WorkspaceNode` that can be used as a `Tree` root.\r\n   */\r\n  export function createRoot(multiRootName?: string): WorkspaceNode {\r\n    return {\r\n      id: WorkspaceNode.id,\r\n      name: multiRootName || WorkspaceNode.name,\r\n      parent: undefined,\r\n      children: [],\r\n      visible: false,\r\n      selected: false\r\n    };\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * A node representing a folder from a multi-root workspace.\r\n */\r\nexport interface WorkspaceRootNode extends DirNode {\r\n  parent: WorkspaceNode;\r\n}\r\n\r\nexport namespace WorkspaceRootNode {\r\n\r\n  export function is(node: Object | undefined): node is WorkspaceRootNode {\r\n    return DirNode.is(node) && WorkspaceNode.is(node.parent);\r\n  }\r\n\r\n  export function find(node: TreeNode | undefined): WorkspaceRootNode | undefined {\r\n    if (node) {\r\n      if (is(node)) {\r\n        return node;\r\n      }\r\n      return find(node.parent);\r\n    }\r\n  }\r\n}\r\n"]}
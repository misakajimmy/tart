{"version":3,"sources":["browser/open-editors-widget/navigator-open-editors-widget.tsx"],"names":[],"mappings":"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","file":"../../../src/browser/open-editors-widget/navigator-open-editors-widget.js","sourcesContent":["import React from 'react';\r\nimport {Container, inject, injectable, interfaces, postConstruct} from 'inversify';\r\nimport {createFileTreeContainer, FileTreeWidget} from '@tart/filesystem';\r\nimport {nls} from '@tart/core/lib/common/nls';\r\nimport {\r\n  ApplicationShell,\r\n  ContextMenuRenderer,\r\n  defaultTreeProps,\r\n  NavigatableWidget,\r\n  NodeProps,\r\n  Saveable,\r\n  TabBar,\r\n  TREE_NODE_CONTENT_CLASS,\r\n  TreeDecoratorService,\r\n  TreeModel,\r\n  TreeNode,\r\n  TreeProps,\r\n  TreeWidget,\r\n  Widget\r\n} from '@tart/core';\r\nimport {OpenEditorNode, OpenEditorsModel} from './navigator-open-editors-tree-model';\r\nimport {OpenEditorsCommands} from './navigator-open-editors-commands';\r\nimport {CommandService} from '@tart/core/lib/common';\r\nimport {OpenEditorsTreeDecoratorService} from './navigator-open-editors-decorator-service';\r\nimport {OPEN_EDITORS_CONTEXT_MENU} from './navigator-open-editors-menus';\r\n\r\nexport const OPEN_EDITORS_PROPS: TreeProps = {\r\n  ...defaultTreeProps,\r\n  virtualized: false,\r\n  contextMenuPath: OPEN_EDITORS_CONTEXT_MENU,\r\n};\r\n\r\nexport interface OpenEditorsNodeRow extends TreeWidget.NodeRow {\r\n  node: OpenEditorNode;\r\n}\r\n\r\n@injectable()\r\nexport class OpenEditorsWidget extends FileTreeWidget {\r\n  static ID = 'wm-open-editors-widget';\r\n  static LABEL = nls.localizeByDefault('Open Editors');\r\n\r\n  @inject(ApplicationShell) protected readonly applicationShell: ApplicationShell;\r\n  @inject(CommandService) protected readonly commandService: CommandService;\r\n  // eslint-disable-next-line no-null/no-null\r\n  protected activeTreeNodePrefixElement: string | undefined | null;\r\n\r\n  constructor(\r\n      @inject(TreeProps) readonly props: TreeProps,\r\n      @inject(OpenEditorsModel) readonly model: OpenEditorsModel,\r\n      @inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer\r\n  ) {\r\n    super(props, model, contextMenuRenderer);\r\n  }\r\n\r\n  get editorWidgets(): NavigatableWidget[] {\r\n    return this.model.editorWidgets;\r\n  }\r\n\r\n  static createContainer(parent: interfaces.Container): Container {\r\n    const child = createFileTreeContainer(parent);\r\n\r\n    child.bind(OpenEditorsModel).toSelf();\r\n    child.rebind(TreeModel).toService(OpenEditorsModel);\r\n\r\n    child.bind(OpenEditorsWidget).toSelf();\r\n    child.rebind(TreeProps).toConstantValue(OPEN_EDITORS_PROPS);\r\n\r\n    child.bind(OpenEditorsTreeDecoratorService).toSelf().inSingletonScope();\r\n    child.rebind(TreeDecoratorService).toService(OpenEditorsTreeDecoratorService);\r\n    return child;\r\n  }\r\n\r\n  static createWidget(parent: interfaces.Container): OpenEditorsWidget {\r\n    return OpenEditorsWidget.createContainer(parent).get(OpenEditorsWidget);\r\n  }\r\n\r\n  @postConstruct()\r\n  init(): void {\r\n    super.init();\r\n    this.id = OpenEditorsWidget.ID;\r\n    this.title.label = OpenEditorsWidget.LABEL;\r\n    this.addClass(OpenEditorsWidget.ID);\r\n    this.update();\r\n  }\r\n\r\n  protected renderNode(node: OpenEditorNode, props: NodeProps): React.ReactNode {\r\n    if (!TreeNode.isVisible(node)) {\r\n      return undefined;\r\n    }\r\n    const attributes = this.createNodeAttributes(node, props);\r\n    const isEditorNode = !(node.id.startsWith(OpenEditorsModel.GROUP_NODE_ID_PREFIX) || node.id.startsWith(OpenEditorsModel.AREA_NODE_ID_PREFIX));\r\n    const content = <div className={`${TREE_NODE_CONTENT_CLASS}`}>\r\n      {this.renderExpansionToggle(node, props)}\r\n      {isEditorNode && this.renderPrefixIcon(node)}\r\n      {this.decorateIcon(node, this.renderIcon(node, props))}\r\n      {this.renderCaptionAffixes(node, props, 'captionPrefixes')}\r\n      {this.renderCaption(node, props)}\r\n      {this.renderCaptionAffixes(node, props, 'captionSuffixes')}\r\n      {this.renderTailDecorations(node, props)}\r\n      {(this.isGroupNode(node) || this.isAreaNode(node)) && this.renderInteractables(node, props)}\r\n    </div>;\r\n    return React.createElement('div', attributes, content);\r\n  }\r\n\r\n  protected isGroupNode(node: OpenEditorNode): boolean {\r\n    return node.id.startsWith(OpenEditorsModel.GROUP_NODE_ID_PREFIX);\r\n  }\r\n\r\n  protected isAreaNode(node: OpenEditorNode): boolean {\r\n    return node.id.startsWith(OpenEditorsModel.AREA_NODE_ID_PREFIX);\r\n  }\r\n\r\n  protected doRenderNodeRow({node, depth}: OpenEditorsNodeRow): React.ReactNode {\r\n    let groupClass = '';\r\n    if (this.isGroupNode(node)) {\r\n      groupClass = 'group-node';\r\n    } else if (this.isAreaNode(node)) {\r\n      groupClass = 'area-node';\r\n    }\r\n    return <div className={`open-editors-node-row ${this.getPrefixIconClass(node)}${groupClass}`}>\r\n      {this.renderNode(node, {depth})}\r\n    </div>;\r\n  }\r\n\r\n\r\n  protected renderInteractables(node: OpenEditorNode, props: NodeProps): React.ReactNode {\r\n    return (<div className='open-editors-inline-actions-container'>\r\n          <div className='open-editors-inline-action'>\r\n            <a className='codicon codicon-save-all'\r\n               title={OpenEditorsCommands.SAVE_ALL_IN_GROUP_FROM_ICON.label}\r\n               onClick={this.handleGroupActionIconClicked}\r\n               data-id={node.id}\r\n               id={OpenEditorsCommands.SAVE_ALL_IN_GROUP_FROM_ICON.id}\r\n            />\r\n          </div>\r\n          <div className='open-editors-inline-action'>\r\n            <a className='codicon codicon-close-all'\r\n               title={OpenEditorsCommands.CLOSE_ALL_EDITORS_IN_GROUP_FROM_ICON.label}\r\n               onClick={this.handleGroupActionIconClicked}\r\n               data-id={node.id}\r\n               id={OpenEditorsCommands.CLOSE_ALL_EDITORS_IN_GROUP_FROM_ICON.id}\r\n            />\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  protected getPrefixIconClass(node: OpenEditorNode): string {\r\n    const saveable = Saveable.get(node.widget);\r\n    if (saveable) {\r\n      return saveable.dirty ? 'dirty' : '';\r\n    }\r\n    return '';\r\n  }\r\n\r\n  protected handleGroupActionIconClicked = async (e: React.MouseEvent<HTMLAnchorElement>) => this.doHandleGroupActionIconClicked(e);\r\n\r\n  protected async doHandleGroupActionIconClicked(e: React.MouseEvent<HTMLAnchorElement>): Promise<void> {\r\n    e.stopPropagation();\r\n    const groupName = e.currentTarget.getAttribute('data-id');\r\n    const command = e.currentTarget.id;\r\n    if (groupName && command) {\r\n      const groupFromTarget: string | number | undefined = groupName.split(':').pop();\r\n      const areaOrTabBar = this.sanitizeInputFromClickHandler(groupFromTarget);\r\n      if (areaOrTabBar) {\r\n        return this.commandService.executeCommand(command, areaOrTabBar);\r\n      }\r\n    }\r\n  }\r\n\r\n  protected sanitizeInputFromClickHandler(groupFromTarget?: string): ApplicationShell.Area | TabBar<Widget> | undefined {\r\n    let areaOrTabBar: ApplicationShell.Area | TabBar<Widget> | undefined;\r\n    if (groupFromTarget) {\r\n      if (ApplicationShell.isValidArea(groupFromTarget)) {\r\n        areaOrTabBar = groupFromTarget;\r\n      } else {\r\n        const groupAsNum = parseInt(groupFromTarget);\r\n        if (!isNaN(groupAsNum)) {\r\n          areaOrTabBar = this.model.getTabBarForGroup(groupAsNum);\r\n        }\r\n      }\r\n    }\r\n    return areaOrTabBar;\r\n  }\r\n\r\n  protected renderPrefixIcon(node: OpenEditorNode): React.ReactNode {\r\n    return (\r\n        <div className='open-editors-prefix-icon-container'>\r\n          <div data-id={node.id}\r\n               className='open-editors-prefix-icon dirty codicon codicon-circle-filled'\r\n          />\r\n          <div data-id={node.id}\r\n               onClick={this.closeEditor}\r\n               className='open-editors-prefix-icon close codicon codicon-close'\r\n          />\r\n        </div>);\r\n  }\r\n\r\n  protected closeEditor = async (e: React.MouseEvent<HTMLDivElement>) => {\r\n    this.doCloseEditor(e)\r\n  };\r\n\r\n  protected async doCloseEditor(e: React.MouseEvent<HTMLDivElement>): Promise<void> {\r\n    const widgetId = e.currentTarget.getAttribute('data-id');\r\n    if (widgetId) {\r\n      await this.applicationShell.closeWidget(widgetId);\r\n    }\r\n  }\r\n}\r\n"]}
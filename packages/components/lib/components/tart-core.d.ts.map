{"version":3,"sources":["components/tart-core.tsx"],"names":[],"mappings":"AAYA,MAAM,WAAW,cAAc;IAC7B,OAAO,CAAC,EAAE,EAAE,CAAC;CACd;AAED,wBAAgB,QAAQ,CAAC,KAAK,EAAE,cAAc,eA0B7C","file":"../../src/components/tart-core.d.ts","sourcesContent":["import React, {useEffect, useRef, useState} from 'react';\r\nimport {FrontendApplication} from '@tart/core/lib/browser/frontend-application';\r\nimport {ContainerLoader} from '@tart/core/lib/common';\r\nimport CoreInit from '@tart/core/lib/init';\r\nimport FilesystemInit from '@tart/filesystem/lib/init';\r\nimport EditorInit from '@tart/editor/lib/init';\r\nimport MonacoInit from '@tart/monaco/lib/init';\r\nimport WorkspaceInit from '@tart/workspace/lib/init';\r\nimport NavigatorInit from '@tart/navigator/lib/init';\r\n\r\nlet inited = false;\r\n\r\nexport interface ITartCoreProps {\r\n  modules?: [];\r\n}\r\n\r\nexport function TartCore(props: ITartCoreProps) {\r\n  const coreRef = useRef<HTMLDivElement>(undefined);\r\n  const [containerLoader] = useState<ContainerLoader>(new ContainerLoader());\r\n\r\n  useEffect(() => {\r\n    const m = !!props.modules ? props.modules : [];\r\n    if (!inited) {\r\n      inited = true;\r\n      const modules = [\r\n        ...m,\r\n        CoreInit.init(),\r\n        FilesystemInit.init(),\r\n        EditorInit.init(),\r\n        MonacoInit.init(),\r\n        WorkspaceInit.init(),\r\n        NavigatorInit.init(),\r\n      ];\r\n      containerLoader.loadsAsync(modules).then(() => {\r\n      }).then(() => {\r\n        containerLoader.getService<FrontendApplication>(FrontendApplication).start({host: coreRef.current});\r\n      });\r\n    }\r\n  }, props.modules);\r\n\r\n  return <div className={'tart-core'} ref={coreRef}>\r\n  </div>;\r\n}\r\n"]}
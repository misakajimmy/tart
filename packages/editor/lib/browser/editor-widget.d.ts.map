{"version":3,"sources":["browser/editor-widget.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,UAAU,EAAE,OAAO,EAAE,WAAW,EAAE,QAAQ,EAAE,cAAc,EAAE,MAAM,EAAC,MAAM,YAAY,CAAC;AAC9F,OAAO,EAAC,UAAU,EAAC,MAAM,UAAU,CAAC;AACpC,OAAO,EAAa,KAAK,EAAE,gBAAgB,EAAC,MAAM,uBAAuB,CAAC;AAC1E,OAAO,GAAG,MAAM,2BAA2B,CAAC;AAC5C,OAAO,EAAC,cAAc,EAAC,MAAM,oDAAoD,CAAC;AAElF,qBAAa,YAAa,SAAQ,UAAW,YAAW,cAAc,EAAE,WAAW,EAAE,cAAc;IAG7F,QAAQ,CAAC,MAAM,EAAE,UAAU;IAC3B,SAAS,CAAC,QAAQ,CAAC,gBAAgB,EAAE,gBAAgB;gBAD5C,MAAM,EAAE,UAAU,EACR,gBAAgB,EAAE,gBAAgB;IAczD,IAAI,QAAQ,IAAI,QAAQ,CAEvB;IAED,IAAI,SAAS,IAAI,KAAK,CAAC,IAAI,CAAC,CAE3B;IAED,YAAY,IAAI,IAAI;IAMpB,cAAc,IAAI,GAAG,GAAG,SAAS;IAIjC,eAAe,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG,GAAG,SAAS;IAIlD,UAAU,IAAI,MAAM;IAIpB,YAAY,CAAC,QAAQ,EAAE,MAAM,GAAG,IAAI;IAIpC,SAAS,CAAC,iBAAiB,CAAC,GAAG,EAAE,OAAO,GAAG,IAAI;IAM/C,SAAS,CAAC,aAAa,CAAC,GAAG,EAAE,OAAO,GAAG,IAAI;IAO3C,SAAS,CAAC,WAAW,CAAC,GAAG,EAAE,OAAO,GAAG,IAAI;IAKzC,SAAS,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,aAAa,GAAG,IAAI;CAQpD","file":"../../src/browser/editor-widget.d.ts","sourcesContent":["import {BaseWidget, Message, Navigatable, Saveable, SaveableSource, Widget} from '@tart/core';\r\nimport {TextEditor} from './editor';\r\nimport {Disposable, Event, SelectionService} from '@tart/core/lib/common';\r\nimport URI from '@tart/core/lib/common/uri';\r\nimport {StatefulWidget} from '@tart/core/lib/browser/shell/shell-layout-restorer';\r\n\r\nexport class EditorWidget extends BaseWidget implements SaveableSource, Navigatable, StatefulWidget {\r\n\r\n  constructor(\r\n      readonly editor: TextEditor,\r\n      protected readonly selectionService: SelectionService,\r\n  ) {\r\n    super(editor);\r\n    this.addClass('wm-editor');\r\n    this.toDispose.push(this.editor);\r\n    this.toDispose.push(this.editor.onSelectionChanged(() => this.setSelection()));\r\n    this.toDispose.push(this.editor.onFocusChanged(() => this.setSelection()));\r\n    this.toDispose.push(Disposable.create(() => {\r\n      if (this.selectionService.selection === this.editor) {\r\n        this.selectionService.selection = undefined;\r\n      }\r\n    }));\r\n  }\r\n\r\n  get saveable(): Saveable {\r\n    return this.editor.document;\r\n  }\r\n\r\n  get onDispose(): Event<void> {\r\n    return this.toDispose.onDispose;\r\n  }\r\n\r\n  setSelection(): void {\r\n    if (this.editor.isFocused() && this.selectionService.selection !== this.editor) {\r\n      this.selectionService.selection = this.editor;\r\n    }\r\n  }\r\n\r\n  getResourceUri(): URI | undefined {\r\n    return this.editor.getResourceUri();\r\n  }\r\n\r\n  createMoveToUri(resourceUri: URI): URI | undefined {\r\n    return this.editor.createMoveToUri(resourceUri);\r\n  }\r\n\r\n  storeState(): object {\r\n    return this.editor.storeViewState();\r\n  }\r\n\r\n  restoreState(oldState: object): void {\r\n    this.editor.restoreViewState(oldState);\r\n  }\r\n\r\n  protected onActivateRequest(msg: Message): void {\r\n    super.onActivateRequest(msg);\r\n    this.editor.focus();\r\n    this.selectionService.selection = this.editor;\r\n  }\r\n\r\n  protected onAfterAttach(msg: Message): void {\r\n    super.onAfterAttach(msg);\r\n    if (this.isVisible) {\r\n      this.editor.refresh();\r\n    }\r\n  }\r\n\r\n  protected onAfterShow(msg: Message): void {\r\n    super.onAfterShow(msg);\r\n    this.editor.refresh();\r\n  }\r\n\r\n  protected onResize(msg: Widget.ResizeMessage): void {\r\n    if (msg.width < 0 || msg.height < 0) {\r\n      this.editor.resizeToFit();\r\n    } else {\r\n      this.editor.setSize(msg);\r\n    }\r\n  }\r\n\r\n}\r\n"]}
{"version":3,"sources":["browser/editor-frontend-module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,eAAe,EAAC,MAAM,WAAW,CAAC;AAC1C,OAAO,EAAC,kBAAkB,EAAC,MAAM,uBAAuB,CAAC;AACzD,OAAO,EAAC,+BAA+B,EAAE,sBAAsB,EAAE,aAAa,EAAC,MAAM,YAAY,CAAC;AAClG,OAAO,EAAC,mBAAmB,EAAC,MAAM,uBAAuB,CAAC;AAC1D,OAAO,EAAC,aAAa,EAAC,MAAM,kBAAkB,CAAC;AAC/C,OAAO,EAAC,WAAW,EAAC,MAAM,uCAAuC,CAAC;AAClE,OAAO,EAAC,qBAAqB,EAAC,MAAM,qBAAqB,CAAC;AAC1D,OAAO,EAAC,mBAAmB,EAAC,MAAM,yBAAyB,CAAC;AAE5D,MAAM,CAAC,MAAM,oBAAoB,GAAG,IAAI,eAAe,CAAC,CAAC,IAAI,EAAE,EAAE;IAC/D,qBAAqB,CAAC,IAAI,CAAC,CAAC;IAE5B,IAAI,CAAC,mBAAmB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACtD,IAAI,CAAC,aAAa,CAAC,CAAC,SAAS,CAAC,mBAAmB,CAAC,CAAC;IAEnD,IAAI,CAAC,kBAAkB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACrD,IAAI,CAAC,+BAA+B,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;IAEpE,IAAI,CAAC,aAAa,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IAChD,IAAI,CAAC,WAAW,CAAC,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;IAE3C,CAAC,sBAAsB,EAAE,mBAAmB,CAAC,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE;QACxE,IAAI,CAAC,iBAAiB,CAAC,CAAC,SAAS,CAAC,kBAAkB,CAAC,CAAC;IACxD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,eAAe,oBAAoB,CAAC","file":"../../src/browser/editor-frontend-module.js","sourcesContent":["import {ContainerModule} from 'inversify';\r\nimport {EditorContribution} from './editor-contribution';\r\nimport {FrontendApplicationContribution, KeybindingContribution, WidgetFactory} from '@tart/core';\r\nimport {CommandContribution} from '@tart/core/lib/common';\r\nimport {EditorManager} from './editor-manager';\r\nimport {OpenHandler} from '@tart/core/lib/browser/opener-service';\r\nimport {bindEditorPreferences} from './editor-preference';\r\nimport {EditorWidgetFactory} from './editor-widget-factory';\r\n\r\nexport const EditorFrontendModule = new ContainerModule((bind) => {\r\n  bindEditorPreferences(bind);\r\n\r\n  bind(EditorWidgetFactory).toSelf().inSingletonScope();\r\n  bind(WidgetFactory).toService(EditorWidgetFactory);\r\n\r\n  bind(EditorContribution).toSelf().inSingletonScope();\r\n  bind(FrontendApplicationContribution).toService(EditorContribution);\r\n\r\n  bind(EditorManager).toSelf().inSingletonScope();\r\n  bind(OpenHandler).toService(EditorManager);\r\n\r\n  [KeybindingContribution, CommandContribution].forEach(serviceIdentifier => {\r\n    bind(serviceIdentifier).toService(EditorContribution);\r\n  });\r\n});\r\n\r\nexport default EditorFrontendModule;\r\n"]}
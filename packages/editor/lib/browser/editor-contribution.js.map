{"version":3,"sources":["browser/editor-contribution.ts"],"names":[],"mappings":"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","file":"../../src/browser/editor-contribution.js","sourcesContent":["import {inject, injectable, optional} from 'inversify';\r\nimport {DiffUris, FrontendApplicationContribution, KeybindingContribution, KeybindingRegistry} from '@tart/core';\r\nimport {Command, CommandContribution, CommandRegistry, DisposableCollection} from '@tart/core/lib/common';\r\nimport {ContextKeyService} from '@tart/core/lib/browser/context-key-service';\r\nimport {EditorManager} from './editor-manager';\r\nimport {TextEditor} from './editor';\r\nimport {StatusBar, StatusBarAlignment} from '@tart/core/lib/browser/status-bar';\r\nimport {LanguageService} from '@tart/core/lib/browser/language-service';\r\nimport {EditorCommands} from './editor-command';\r\nimport {SUPPORTED_ENCODINGS} from '@tart/core/lib/browser/supported-encodings';\r\nimport {QuickInputService} from '@tart/core/lib/common/quick-pick-service';\r\n\r\nexport const TEST = Command.toDefaultLocalizedCommand({\r\n  id: 'textEditor.commands.configEol',\r\n  category: 'EDITOR_CATEGORY',\r\n  label: 'Change End of Line Sequence'\r\n});\r\n\r\n@injectable()\r\nexport class EditorContribution implements FrontendApplicationContribution, KeybindingContribution, CommandContribution {\r\n\r\n  @inject(StatusBar) protected readonly statusBar: StatusBar;\r\n  @inject(EditorManager) protected readonly editorManager: EditorManager;\r\n  @inject(LanguageService) protected readonly languages: LanguageService;\r\n\r\n  @inject(ContextKeyService)\r\n  protected readonly contextKeyService: ContextKeyService;\r\n\r\n  @inject(QuickInputService) @optional()\r\n  protected readonly quickInputService: QuickInputService;\r\n  protected readonly toDisposeOnCurrentEditorChanged = new DisposableCollection();\r\n\r\n  onStart(): void {\r\n    this.initEditorContextKeys();\r\n\r\n    this.updateStatusBar();\r\n    this.editorManager.onCurrentEditorChanged(() => this.updateStatusBar());\r\n  }\r\n\r\n  registerCommands(commands: CommandRegistry) {\r\n    commands.registerCommand(EditorCommands.SHOW_ALL_OPENED_EDITORS, {\r\n      execute: () => this.quickInputService?.open('edt ')\r\n    });\r\n  }\r\n\r\n  registerKeybindings(keybindings: KeybindingRegistry) {\r\n    keybindings.registerKeybinding({\r\n      command: EditorCommands.SHOW_ALL_OPENED_EDITORS.id,\r\n      keybinding: 'ctrlcmd+k ctrlcmd+p'\r\n    });\r\n  }\r\n\r\n  protected initEditorContextKeys(): void {\r\n    const editorIsOpen = this.contextKeyService.createKey<boolean>('editorIsOpen', false);\r\n    const textCompareEditorVisible = this.contextKeyService.createKey<boolean>('textCompareEditor', false);\r\n    const updateContextKeys = () => {\r\n      const widgets = this.editorManager.all;\r\n      editorIsOpen.set(!!widgets.length);\r\n      textCompareEditorVisible.set(widgets.some(widget => DiffUris.isDiffUri(widget.editor.uri)));\r\n    }\r\n    updateContextKeys();\r\n    for (const widget of this.editorManager.all) {\r\n      widget.disposed.connect(updateContextKeys);\r\n    }\r\n    this.editorManager.onCreated(widget => {\r\n      updateContextKeys();\r\n      widget.disposed.connect(updateContextKeys);\r\n    });\r\n  }\r\n\r\n  protected updateStatusBar(): void {\r\n    this.toDisposeOnCurrentEditorChanged.dispose();\r\n\r\n    const widget = this.editorManager.currentEditor;\r\n    const editor = widget && widget.editor;\r\n    this.updateLanguageStatus(editor);\r\n    this.updateEncodingStatus(editor);\r\n    this.setCursorPositionStatus(editor);\r\n    if (editor) {\r\n      this.toDisposeOnCurrentEditorChanged.pushAll([\r\n        editor.onLanguageChanged(() => this.updateLanguageStatus(editor)),\r\n        editor.onEncodingChanged(() => this.updateEncodingStatus(editor)),\r\n        editor.onEncodingChanged(() => this.setCursorPositionStatus(editor)),\r\n      ]);\r\n    }\r\n  }\r\n\r\n  protected updateLanguageStatus(editor: TextEditor | undefined): void {\r\n    if (!editor) {\r\n      this.statusBar.removeElement('editor-status-language');\r\n      return;\r\n    }\r\n    const language = this.languages.getLanguage(editor.document.languageId);\r\n    const languageName = language ? language.name : '';\r\n    this.statusBar.setElement('editor-status-language', {\r\n      text: languageName,\r\n      alignment: StatusBarAlignment.RIGHT,\r\n      priority: 1,\r\n      command: EditorCommands.CHANGE_LANGUAGE.id,\r\n      tooltip: 'Select Language Mode'\r\n    });\r\n  }\r\n\r\n  protected updateEncodingStatus(editor: TextEditor | undefined): void {\r\n    if (!editor) {\r\n      this.statusBar.removeElement('editor-status-encoding');\r\n      return;\r\n    }\r\n    this.statusBar.setElement('editor-status-encoding', {\r\n      text: SUPPORTED_ENCODINGS[editor.getEncoding()].labelShort,\r\n      alignment: StatusBarAlignment.RIGHT,\r\n      priority: 10,\r\n      command: EditorCommands.CHANGE_ENCODING.id,\r\n      tooltip: 'Select Encoding'\r\n    });\r\n  }\r\n\r\n  protected setCursorPositionStatus(editor: TextEditor | undefined): void {\r\n    if (!editor) {\r\n      this.statusBar.removeElement('editor-status-cursor-position');\r\n      return;\r\n    }\r\n    const {cursor} = editor;\r\n    this.statusBar.setElement('editor-status-cursor-position', {\r\n      text: 'Ln {' + (cursor.line + 1) + '}, Col {' + editor.getVisibleColumn(cursor) + '}',\r\n      alignment: StatusBarAlignment.RIGHT,\r\n      priority: 100,\r\n      tooltip: EditorCommands.GOTO_LINE_COLUMN.label,\r\n      command: EditorCommands.GOTO_LINE_COLUMN.id\r\n    });\r\n  }\r\n}\r\n"]}
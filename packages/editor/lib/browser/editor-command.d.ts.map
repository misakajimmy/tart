{"version":3,"sources":["browser/editor-command.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,OAAO,EAAC,MAAM,uBAAuB,CAAC;AAI9C,yBAAiB,cAAc,CAAC;IAKvB,MAAM,gBAAgB,SAGuB,CAAC;IAErD;;OAEG;IACI,MAAM,eAAe,EAAE,OAE7B,CAAC;IACF;;OAEG;IACI,MAAM,kBAAkB,EAAE,OAEhC,CAAC;IAEK,MAAM,UAAU,SAIrB,CAAC;IAEI,MAAM,mBAAmB,SAI9B,CAAC;IACI,MAAM,iBAAiB,SAI5B,CAAC;IACI,MAAM,eAAe,SAI1B,CAAC;IACI,MAAM,eAAe,SAI1B,CAAC;IACI,MAAM,aAAa,SAIxB,CAAC;IACI,MAAM,gBAAgB,SAI3B,CAAC;IAEH;;OAEG;IACI,MAAM,OAAO,SAIlB,CAAC;IACH;;OAEG;IACI,MAAM,UAAU,SAIrB,CAAC;IACH;;OAEG;IACI,MAAM,YAAY,SAIvB,CAAC;IACH;;OAEG;IACI,MAAM,oBAAoB,SAI/B,CAAC;IACH;;OAEG;IACI,MAAM,uBAAuB,SAIe,CAAC;IACpD;;OAEG;IACI,MAAM,cAAc,SAIzB,CAAC;IACH;;OAEG;IACI,MAAM,wBAAwB,SAInC,CAAC;IACH;;OAEG;IACI,MAAM,gBAAgB,SAI3B,CAAC;IACH;;OAEG;IACI,MAAM,oBAAoB,SAI/B,CAAC;IACH;;OAEG;IACI,MAAM,kBAAkB,SAI7B,CAAC;IACI,MAAM,iBAAiB,SAI5B,CAAC;IACI,MAAM,eAAe,SAI1B,CAAC;IACI,MAAM,iBAAiB,SAI5B,CAAC;IACH;;OAEG;IACI,MAAM,uBAAuB,SAIlC,CAAC;IACH;;OAEG;IACI,MAAM,qBAAqB,SAIhC,CAAC;CACJ","file":"../../src/browser/editor-command.d.ts","sourcesContent":["import {Command} from '@tart/core/lib/common';\r\nimport {CommonCommands} from '@tart/core';\r\nimport {nls} from '@tart/core/lib/common/nls';\r\n\r\nexport namespace EditorCommands {\r\n\r\n  const EDITOR_CATEGORY = 'Editor';\r\n  const EDITOR_CATEGORY_KEY = nls.getDefaultKey(EDITOR_CATEGORY);\r\n\r\n  export const GOTO_LINE_COLUMN = Command.toLocalizedCommand({\r\n    id: 'editor.action.gotoLine',\r\n    label: 'Go to Line/Column'\r\n  }, 'vscode/gotoLineQuickAccess/gotoLineQuickAccess');\r\n\r\n  /**\r\n   * Show editor references\r\n   */\r\n  export const SHOW_REFERENCES: Command = {\r\n    id: 'textEditor.commands.showReferences'\r\n  };\r\n  /**\r\n   * Change indentation configuration (i.e., indent using tabs / spaces, and how many spaces per tab)\r\n   */\r\n  export const CONFIG_INDENTATION: Command = {\r\n    id: 'textEditor.commands.configIndentation'\r\n  };\r\n\r\n  export const CONFIG_EOL = Command.toDefaultLocalizedCommand({\r\n    id: 'textEditor.commands.configEol',\r\n    category: EDITOR_CATEGORY,\r\n    label: 'Change End of Line Sequence'\r\n  });\r\n\r\n  export const INDENT_USING_SPACES = Command.toDefaultLocalizedCommand({\r\n    id: 'textEditor.commands.indentUsingSpaces',\r\n    category: EDITOR_CATEGORY,\r\n    label: 'Indent Using Spaces'\r\n  });\r\n  export const INDENT_USING_TABS = Command.toDefaultLocalizedCommand({\r\n    id: 'textEditor.commands.indentUsingTabs',\r\n    category: EDITOR_CATEGORY,\r\n    label: 'Indent Using Tabs'\r\n  });\r\n  export const CHANGE_LANGUAGE = Command.toDefaultLocalizedCommand({\r\n    id: 'textEditor.change.language',\r\n    category: EDITOR_CATEGORY,\r\n    label: 'Change Language Mode'\r\n  });\r\n  export const CHANGE_ENCODING = Command.toDefaultLocalizedCommand({\r\n    id: 'textEditor.change.encoding',\r\n    category: EDITOR_CATEGORY,\r\n    label: 'Change File Encoding'\r\n  });\r\n  export const REVERT_EDITOR = Command.toDefaultLocalizedCommand({\r\n    id: 'workbench.action.files.revert',\r\n    category: CommonCommands.FILE_CATEGORY,\r\n    label: 'Revert File',\r\n  });\r\n  export const REVERT_AND_CLOSE = Command.toDefaultLocalizedCommand({\r\n    id: 'workbench.action.revertAndCloseActiveEditor',\r\n    category: CommonCommands.VIEW_CATEGORY,\r\n    label: 'Revert and Close Editor'\r\n  });\r\n\r\n  /**\r\n   * Command for going back to the last editor navigation location.\r\n   */\r\n  export const GO_BACK = Command.toDefaultLocalizedCommand({\r\n    id: 'textEditor.commands.go.back',\r\n    category: EDITOR_CATEGORY,\r\n    label: 'Go Back'\r\n  });\r\n  /**\r\n   * Command for going to the forthcoming editor navigation location.\r\n   */\r\n  export const GO_FORWARD = Command.toDefaultLocalizedCommand({\r\n    id: 'textEditor.commands.go.forward',\r\n    category: EDITOR_CATEGORY,\r\n    label: 'Go Forward'\r\n  });\r\n  /**\r\n   * Command that reveals the last text edit location, if any.\r\n   */\r\n  export const GO_LAST_EDIT = Command.toDefaultLocalizedCommand({\r\n    id: 'textEditor.commands.go.lastEdit',\r\n    category: EDITOR_CATEGORY,\r\n    label: 'Go to Last Edit Location'\r\n  });\r\n  /**\r\n   * Command that clears the editor navigation history.\r\n   */\r\n  export const CLEAR_EDITOR_HISTORY = Command.toDefaultLocalizedCommand({\r\n    id: 'textEditor.commands.clear.history',\r\n    category: EDITOR_CATEGORY,\r\n    label: 'Clear Editor History'\r\n  });\r\n  /**\r\n   * Command that displays all editors that are currently opened.\r\n   */\r\n  export const SHOW_ALL_OPENED_EDITORS = Command.toLocalizedCommand({\r\n    id: 'workbench.action.showAllEditors',\r\n    category: CommonCommands.VIEW_CATEGORY,\r\n    label: 'Show All Opened Editors'\r\n  }, 'wm/editor/showAllEditors', EDITOR_CATEGORY_KEY);\r\n  /**\r\n   * Command that toggles the minimap.\r\n   */\r\n  export const TOGGLE_MINIMAP = Command.toDefaultLocalizedCommand({\r\n    id: 'editor.action.toggleMinimap',\r\n    category: CommonCommands.VIEW_CATEGORY,\r\n    label: 'Toggle Minimap'\r\n  });\r\n  /**\r\n   * Command that toggles the rendering of whitespace characters in the editor.\r\n   */\r\n  export const TOGGLE_RENDER_WHITESPACE = Command.toDefaultLocalizedCommand({\r\n    id: 'editor.action.toggleRenderWhitespace',\r\n    category: CommonCommands.VIEW_CATEGORY,\r\n    label: 'Toggle Render Whitespace'\r\n  });\r\n  /**\r\n   * Command that toggles the word wrap.\r\n   */\r\n  export const TOGGLE_WORD_WRAP = Command.toDefaultLocalizedCommand({\r\n    id: 'editor.action.toggleWordWrap',\r\n    category: CommonCommands.VIEW_CATEGORY,\r\n    label: 'Toggle Word Wrap'\r\n  });\r\n  /**\r\n   * Command that re-opens the last closed editor.\r\n   */\r\n  export const REOPEN_CLOSED_EDITOR = Command.toDefaultLocalizedCommand({\r\n    id: 'workbench.action.reopenClosedEditor',\r\n    category: CommonCommands.VIEW_CATEGORY,\r\n    label: 'Reopen Closed Editor'\r\n  });\r\n  /**\r\n   * Opens a second instance of the current editor, splitting the view in the direction specified.\r\n   */\r\n  export const SPLIT_EDITOR_RIGHT = Command.toDefaultLocalizedCommand({\r\n    id: 'workbench.action.splitEditorRight',\r\n    category: CommonCommands.VIEW_CATEGORY,\r\n    label: 'Split Editor Right'\r\n  });\r\n  export const SPLIT_EDITOR_DOWN = Command.toDefaultLocalizedCommand({\r\n    id: 'workbench.action.splitEditorDown',\r\n    category: CommonCommands.VIEW_CATEGORY,\r\n    label: 'Split Editor Down'\r\n  });\r\n  export const SPLIT_EDITOR_UP = Command.toDefaultLocalizedCommand({\r\n    id: 'workbench.action.splitEditorUp',\r\n    category: CommonCommands.VIEW_CATEGORY,\r\n    label: 'Split Editor Up'\r\n  });\r\n  export const SPLIT_EDITOR_LEFT = Command.toDefaultLocalizedCommand({\r\n    id: 'workbench.action.splitEditorLeft',\r\n    category: CommonCommands.VIEW_CATEGORY,\r\n    label: 'Split Editor Left'\r\n  });\r\n  /**\r\n   * Default horizontal split: right.\r\n   */\r\n  export const SPLIT_EDITOR_HORIZONTAL = Command.toDefaultLocalizedCommand({\r\n    id: 'workbench.action.splitEditor',\r\n    category: CommonCommands.VIEW_CATEGORY,\r\n    label: 'Split Editor'\r\n  });\r\n  /**\r\n   * Default vertical split: down.\r\n   */\r\n  export const SPLIT_EDITOR_VERTICAL = Command.toDefaultLocalizedCommand({\r\n    id: 'workbench.action.splitEditorOrthogonal',\r\n    category: CommonCommands.VIEW_CATEGORY,\r\n    label: 'Split Editor Orthogonal'\r\n  });\r\n}\r\n"]}
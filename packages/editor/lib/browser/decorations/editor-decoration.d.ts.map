{"version":3,"sources":["browser/decorations/editor-decoration.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAElF,OAAO,EAAC,KAAK,EAAC,MAAM,WAAW,CAAC;AAEhC,MAAM,WAAW,gBAAgB;IAC/B;;OAEG;IACH,KAAK,EAAE,KAAK,CAAC;IACb;;OAEG;IACH,OAAO,EAAE,uBAAuB,CAAA;CACjC;AAED,MAAM,WAAW,uBAAuB;IACtC;;OAEG;IACH,UAAU,CAAC,EAAE,sBAAsB,CAAC;IACpC;;OAEG;IACH,SAAS,CAAC,EAAE,MAAM,CAAC;IACnB;;OAEG;IACH,YAAY,CAAC,EAAE,MAAM,CAAC;IACtB;;OAEG;IACH,oBAAoB,CAAC,EAAE,MAAM,CAAC;IAC9B;;OAEG;IACH,uBAAuB,CAAC,EAAE,MAAM,CAAC;IACjC;;OAEG;IACH,WAAW,CAAC,EAAE,OAAO,CAAC;IACtB;;OAEG;IACH,yBAAyB,CAAC,EAAE,MAAM,CAAC;IACnC;;OAEG;IACH,eAAe,CAAC,EAAE,MAAM,CAAC;IACzB;;;OAGG;IACH,eAAe,CAAC,EAAE,MAAM,CAAC;IACzB;;OAEG;IACH,sBAAsB,CAAC,EAAE,MAAM,CAAC;IAChC;;OAEG;IACH,qBAAqB,CAAC,EAAE,MAAM,CAAC;IAC/B;;OAEG;IACH,aAAa,CAAC,EAAE,8BAA8B,CAAC;IAC/C;;OAEG;IACH,OAAO,CAAC,EAAE,wBAAwB,CAAC;CACpC;AAED,MAAM,WAAW,iBAAiB;IAChC;;;OAGG;IACH,KAAK,EAAE,MAAM,GAAG;QAAE,EAAE,EAAE,MAAM,CAAA;KAAE,CAAC;CAChC;AAED,oBAAY,eAAe;IACzB,MAAM,IAAI;IACV,MAAM,IAAI;CACX;AAED,MAAM,WAAW,wBAAyB,SAAQ,iBAAiB;IACjE,QAAQ,CAAC,EAAE,eAAe,CAAC;CAC5B;AAED,MAAM,WAAW,8BAA+B,SAAQ,iBAAiB;IACvE;;OAEG;IACH,QAAQ,CAAC,EAAE,iBAAiB,CAAC;CAC9B;AAED,oBAAY,iBAAiB;IAC3B,IAAI,IAAI;IACR,MAAM,IAAI;IACV,KAAK,IAAI;IACT,IAAI,IAAI;CACT;AAED,oBAAY,sBAAsB;IAChC,4BAA4B,IAAI;IAChC,2BAA2B,IAAI;IAC/B,yBAAyB,IAAI;IAC7B,wBAAwB,IAAI;CAC7B","file":"../../../src/browser/decorations/editor-decoration.d.ts","sourcesContent":["/********************************************************************************\r\n * Copyright (C) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport {Range} from '../editor';\r\n\r\nexport interface EditorDecoration {\r\n  /**\r\n   * range to which this decoration instance is applied.\r\n   */\r\n  range: Range;\r\n  /**\r\n   * options to be applied with this decoration.\r\n   */\r\n  options: EditorDecorationOptions\r\n}\r\n\r\nexport interface EditorDecorationOptions {\r\n  /**\r\n   * behavior of decorations when typing/editing near their edges.\r\n   */\r\n  stickiness?: TrackedRangeStickiness;\r\n  /**\r\n   * CSS class name of this decoration.\r\n   */\r\n  className?: string;\r\n  /**\r\n   * hover message for this decoration.\r\n   */\r\n  hoverMessage?: string;\r\n  /**\r\n   * the decoration will be rendered in the glyph margin with this class name.\r\n   */\r\n  glyphMarginClassName?: string;\r\n  /**\r\n   * hover message for the glyph margin of this decoration.\r\n   */\r\n  glyphMarginHoverMessage?: string;\r\n  /**\r\n   * should the decoration be rendered for the whole line.\r\n   */\r\n  isWholeLine?: boolean;\r\n  /**\r\n   * the decoration will be rendered in the lines decorations with this class name.\r\n   */\r\n  linesDecorationsClassName?: string;\r\n  /**\r\n   * the decoration will be rendered in the margin in full width with this class name.\r\n   */\r\n  marginClassName?: string;\r\n  /**\r\n   * the decoration will be rendered inline with this class name.\r\n   * to be used only to change text, otherwise use `className`.\r\n   */\r\n  inlineClassName?: string;\r\n  /**\r\n   * the decoration will be rendered before the text with this class name.\r\n   */\r\n  beforeContentClassName?: string;\r\n  /**\r\n   * the decoration will be rendered after the text with this class name.\r\n   */\r\n  afterContentClassName?: string;\r\n  /**\r\n   * render this decoration in the overview ruler.\r\n   */\r\n  overviewRuler?: DecorationOverviewRulerOptions;\r\n  /**\r\n   * If set, render this decoration in the minimap.\r\n   */\r\n  minimap?: DecorationMinimapOptions;\r\n}\r\n\r\nexport interface DecorationOptions {\r\n  /**\r\n   * color of the decoration in the overview ruler.\r\n   * use `rgba` values to play well with other decorations.\r\n   */\r\n  color: string | { id: string };\r\n}\r\n\r\nexport enum MinimapPosition {\r\n  Inline = 1,\r\n  Gutter = 2\r\n}\r\n\r\nexport interface DecorationMinimapOptions extends DecorationOptions {\r\n  position?: MinimapPosition;\r\n}\r\n\r\nexport interface DecorationOverviewRulerOptions extends DecorationOptions {\r\n  /**\r\n   * position in the overview ruler.\r\n   */\r\n  position?: OverviewRulerLane;\r\n}\r\n\r\nexport enum OverviewRulerLane {\r\n  Left = 1,\r\n  Center = 2,\r\n  Right = 4,\r\n  Full = 7\r\n}\r\n\r\nexport enum TrackedRangeStickiness {\r\n  AlwaysGrowsWhenTypingAtEdges = 0,\r\n  NeverGrowsWhenTypingAtEdges = 1,\r\n  GrowsOnlyWhenTypingBefore = 2,\r\n  GrowsOnlyWhenTypingAfter = 3,\r\n}\r\n"]}
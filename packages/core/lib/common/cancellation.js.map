{"version":3,"sources":["common/cancellation.ts"],"names":[],"mappings":"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","file":"../../src/common/cancellation.js","sourcesContent":["/********************************************************************************\r\n * Copyright (C) 2017 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation and others. All rights reserved.\r\n *  Licensed under the MIT License. See https://github.com/Microsoft/vscode/blob/master/LICENSE.txt for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n\r\nimport {Emitter} from './emitter';\r\n\r\nimport {Event} from './event';\r\n\r\nexport interface CancellationToken {\r\n  readonly isCancellationRequested: boolean;\r\n  /*\r\n   * An event emitted when cancellation is requested\r\n   * @event\r\n   */\r\n  readonly onCancellationRequested: Event<void>;\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nconst shortcutEvent: Event<void> = Object.freeze(Object.assign(function (callback: any, context?: any): any {\r\n  const handle = setTimeout(callback.bind(context), 0);\r\n  return {\r\n    dispose(): void {\r\n      clearTimeout(handle);\r\n    }\r\n  };\r\n}, {maxListeners: 0}));\r\n\r\nexport namespace CancellationToken {\r\n\r\n  export const Cancelled: CancellationToken = Object.freeze({\r\n    isCancellationRequested: true,\r\n    onCancellationRequested: shortcutEvent\r\n  });\r\n\r\n  export const None: CancellationToken = Object.freeze({\r\n    isCancellationRequested: false,\r\n    onCancellationRequested: Event.None,\r\n  });\r\n\r\n}\r\n\r\nexport class CancellationError extends Error {\r\n  constructor() {\r\n    super('Canceled');\r\n    this.name = this.message;\r\n  }\r\n}\r\n\r\nclass MutableToken implements CancellationToken {\r\n\r\n  private _isCancelled: boolean = false;\r\n  private _emitter: Emitter<void> | undefined;\r\n\r\n  get isCancellationRequested(): boolean {\r\n    return this._isCancelled;\r\n  }\r\n\r\n  get onCancellationRequested(): Event<void> {\r\n    if (this._isCancelled) {\r\n      return shortcutEvent;\r\n    }\r\n    if (!this._emitter) {\r\n      this._emitter = new Emitter<void>();\r\n    }\r\n    return this._emitter.event;\r\n  }\r\n\r\n  public cancel(): void {\r\n    if (!this._isCancelled) {\r\n      this._isCancelled = true;\r\n      if (this._emitter) {\r\n        this._emitter.fire(undefined);\r\n        this._emitter = undefined;\r\n      }\r\n    }\r\n  }\r\n}\r\n\r\nexport class CancellationTokenSource {\r\n\r\n  private _token: CancellationToken;\r\n\r\n  get token(): CancellationToken {\r\n    if (!this._token) {\r\n      // be lazy and create the token only when\r\n      // actually needed\r\n      this._token = new MutableToken();\r\n    }\r\n    return this._token;\r\n  }\r\n\r\n  cancel(): void {\r\n    if (!this._token) {\r\n      // save an object by returning the default\r\n      // cancelled token when cancellation happens\r\n      // before someone asks for the token\r\n      this._token = CancellationToken.Cancelled;\r\n    } else if (this._token !== CancellationToken.Cancelled) {\r\n      (<MutableToken>this._token).cancel();\r\n    }\r\n  }\r\n\r\n  dispose(): void {\r\n    this.cancel();\r\n  }\r\n}\r\n\r\nconst cancelledMessage = 'Cancelled';\r\n\r\nexport function cancelled(): Error {\r\n  return new Error(cancelledMessage);\r\n}\r\n\r\nexport function isCancelled(err: Error | undefined): boolean {\r\n  return !!err && err.message === cancelledMessage;\r\n}\r\n\r\nexport function checkCancelled(token?: CancellationToken): void {\r\n  if (!!token && token.isCancellationRequested) {\r\n    throw cancelled();\r\n  }\r\n}\r\n"]}
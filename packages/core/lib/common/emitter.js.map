{"version":3,"sources":["common/emitter.ts"],"names":[],"mappings":"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","file":"../../src/common/emitter.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\nimport {Event} from './event';\nimport {Disposable} from './disposable';\nimport {MaybePromise} from './types';\nimport {CancellationToken} from './cancellation';\n\ntype Callback = (...args: any[]) => any;\n\nclass CallbackList implements Iterable<Callback> {\n\n  private _callbacks: Function[] | undefined;\n  private _contexts: any[] | undefined;\n\n  get length(): number {\n    return this._callbacks && this._callbacks.length || 0;\n  }\n\n  public add(callback: Function, context: any = undefined, bucket?: Disposable[]): void {\n    if (!this._callbacks) {\n      this._callbacks = [];\n      this._contexts = [];\n    }\n    this._callbacks.push(callback);\n    this._contexts!.push(context);\n\n    if (Array.isArray(bucket)) {\n      bucket.push({dispose: () => this.remove(callback, context)});\n    }\n  }\n\n  public remove(callback: Function, context: any = undefined): void {\n    if (!this._callbacks) {\n      return;\n    }\n\n    let foundCallbackWithDifferentContext = false;\n    for (let i = 0; i < this._callbacks.length; i++) {\n      if (this._callbacks[i] === callback) {\n        if (this._contexts![i] === context) {\n          // callback & context match => remove it\n          this._callbacks.splice(i, 1);\n          this._contexts!.splice(i, 1);\n          return;\n        } else {\n          foundCallbackWithDifferentContext = true;\n        }\n      }\n    }\n\n    if (foundCallbackWithDifferentContext) {\n      throw new Error('When adding a listener with a context, you should remove it with the same context');\n    }\n  }\n\n  // tslint:disable-next-line:typedef\n  public [Symbol.iterator]() {\n    if (!this._callbacks) {\n      return [][Symbol.iterator]();\n    }\n    const callbacks = this._callbacks.slice(0);\n    const contexts = this._contexts!.slice(0);\n\n    return callbacks.map((callback, i) =>\n        (...args: any[]) => callback.apply(contexts[i], args)\n    )[Symbol.iterator]();\n  }\n\n  public invoke(...args: any[]): any[] {\n    const ret: any[] = [];\n    for (const callback of this) {\n      try {\n        ret.push(callback(...args));\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    return ret;\n  }\n\n  public isEmpty(): boolean {\n    return !this._callbacks || this._callbacks.length === 0;\n  }\n\n  public dispose(): void {\n    this._callbacks = undefined;\n    this._contexts = undefined;\n  }\n}\n\nexport interface EmitterOptions {\n  onFirstListenerAdd?: Function;\n  onLastListenerRemove?: Function;\n}\n\nexport class Emitter<T = any> {\n\n  private static LEAK_WARNING_THRESHHOLD = 175;\n  protected _callbacks: CallbackList | undefined;\n  private _disposed = false;\n  private _leakingStacks: Map<string, number> | undefined;\n  private _leakWarnCountdown = 0;\n\n  constructor(\n      private _options?: EmitterOptions\n  ) {\n  }\n\n  private _event: Event<T>;\n\n  /**\n   * For the public to allow to subscribe\n   * to events from this Emitter\n   */\n  get event(): Event<T> {\n    if (!this._event) {\n      this._event = Object.assign((listener: (e: T) => any, thisArgs?: any, disposables?: Disposable[]) => {\n            if (!this._callbacks) {\n              this._callbacks = new CallbackList();\n            }\n            if (this._options && this._options.onFirstListenerAdd && this._callbacks.isEmpty()) {\n              this._options.onFirstListenerAdd(this);\n            }\n            this._callbacks.add(listener, thisArgs);\n            const removeMaxListenersCheck = this.checkMaxListeners(this._event.maxListeners);\n\n            const result: Disposable = {\n              dispose: () => {\n                if (removeMaxListenersCheck) {\n                  removeMaxListenersCheck();\n                }\n                result.dispose = Emitter._noop;\n                if (!this._disposed) {\n                  this._callbacks!.remove(listener, thisArgs);\n                  result.dispose = Emitter._noop;\n                  if (this._options && this._options.onLastListenerRemove && this._callbacks!.isEmpty()) {\n                    this._options.onLastListenerRemove(this);\n                  }\n                }\n              }\n            };\n            if (Array.isArray(disposables)) {\n              disposables.push(result);\n            }\n\n            return result;\n          }, {\n            maxListeners: Emitter.LEAK_WARNING_THRESHHOLD\n          }\n      );\n    }\n    return this._event;\n  }\n\n  private static _noop = function (): void {\n  };\n\n  /**\n   * To be kept private to fire an event to\n   * subscribers\n   */\n  fire(event: T): any {\n    if (this._callbacks) {\n      this._callbacks.invoke(event);\n    }\n  }\n\n  /**\n   * Process each listener one by one.\n   * Return `false` to stop iterating over the listeners, `true` to continue.\n   */\n  async sequence(processor: (listener: (e: T) => any) => MaybePromise<boolean>): Promise<void> {\n    if (this._callbacks) {\n      for (const listener of this._callbacks) {\n        if (!await processor(listener)) {\n          break;\n        }\n      }\n    }\n  }\n\n  dispose(): void {\n    if (this._leakingStacks) {\n      this._leakingStacks.clear();\n      this._leakingStacks = undefined;\n    }\n    if (this._callbacks) {\n      this._callbacks.dispose();\n      this._callbacks = undefined;\n    }\n    this._disposed = true;\n  }\n\n  protected checkMaxListeners(maxListeners: number): (() => void) | undefined {\n    if (maxListeners === 0 || !this._callbacks) {\n      return undefined;\n    }\n    const listenerCount = this._callbacks.length;\n    if (listenerCount <= maxListeners) {\n      return undefined;\n    }\n\n    const popStack = this.pushLeakingStack();\n\n    this._leakWarnCountdown -= 1;\n    if (this._leakWarnCountdown <= 0) {\n      // only warn on first exceed and then every time the limit\n      // is exceeded by 50% again\n      this._leakWarnCountdown = maxListeners * 0.5;\n\n      let topStack: string;\n      let topCount = 0;\n      this._leakingStacks!.forEach((stackCount, stack) => {\n        if (!topStack || topCount < stackCount) {\n          topStack = stack;\n          topCount = stackCount;\n        }\n      });\n\n      // eslint-disable-next-line max-len\n      console.warn(`Possible Emitter memory leak detected. ${listenerCount} listeners added. Use event.maxListeners to increase the limit (${maxListeners}). MOST frequent listener (${topCount}):`);\n      console.warn(topStack!);\n    }\n\n    return popStack;\n  }\n\n  protected pushLeakingStack(): () => void {\n    if (!this._leakingStacks) {\n      this._leakingStacks = new Map();\n    }\n    const stack = new Error().stack!.split('\\n').slice(3).join('\\n');\n    const count = (this._leakingStacks.get(stack) || 0);\n    this._leakingStacks.set(stack, count + 1);\n    return () => this.popLeakingStack(stack);\n  }\n\n  protected popLeakingStack(stack: string): void {\n    if (!this._leakingStacks) {\n      return;\n    }\n    const count = (this._leakingStacks.get(stack) || 0);\n    this._leakingStacks.set(stack, count - 1);\n  }\n}\n\nexport interface WaitUntilEvent {\n  /**\n   * Allows to pause the event loop until the provided thenable resolved.\n   *\n   * *Note:* It can only be called during event dispatch and not in an asynchronous manner\n   *\n   * @param thenable A thenable that delays execution.\n   */\n  waitUntil(thenable: Promise<any>): void;\n}\n\nexport namespace WaitUntilEvent {\n  /**\n   * Fire all listeners in the same tick.\n   *\n   * Use `AsyncEmitter.fire` to fire listeners async one after another.\n   */\n  export async function fire<T extends WaitUntilEvent>(\n      emitter: Emitter<T>,\n      event: Omit<T, 'waitUntil'>,\n      timeout: number | undefined = undefined\n  ): Promise<void> {\n    const waitables: Promise<void>[] = [];\n    const asyncEvent = Object.assign(event, {\n      waitUntil: (thenable: Promise<any>) => {\n        if (Object.isFrozen(waitables)) {\n          throw new Error('waitUntil cannot be called asynchronously.');\n        }\n        waitables.push(thenable);\n      }\n    }) as T;\n    try {\n      emitter.fire(asyncEvent);\n      // Asynchronous calls to `waitUntil` should fail.\n      Object.freeze(waitables);\n    } finally {\n      delete asyncEvent['waitUntil'];\n    }\n    if (!waitables.length) {\n      return;\n    }\n    if (timeout !== undefined) {\n      await Promise.race([Promise.all(waitables), new Promise(resolve => setTimeout(resolve, timeout))]);\n    } else {\n      await Promise.all(waitables);\n    }\n  }\n}\n\nexport class AsyncEmitter<T extends WaitUntilEvent> extends Emitter<T> {\n\n  protected deliveryQueue: Promise<void> | undefined;\n\n  /**\n   * Fire listeners async one after another.\n   */\n  fire(event: Omit<T, 'waitUntil'>, token: CancellationToken = CancellationToken.None,\n       promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n    const callbacks = this._callbacks;\n    if (!callbacks) {\n      return Promise.resolve();\n    }\n    const listeners = [...callbacks];\n    if (this.deliveryQueue) {\n      return this.deliveryQueue = this.deliveryQueue.then(() => this.deliver(listeners, event, token, promiseJoin));\n    }\n    return this.deliveryQueue = this.deliver(listeners, event, token, promiseJoin);\n  }\n\n  protected async deliver(listeners: Callback[], event: Omit<T, 'waitUntil'>, token: CancellationToken,\n                          promiseJoin?: (p: Promise<any>, listener: Function) => Promise<any>): Promise<void> {\n    for (const listener of listeners) {\n      if (token.isCancellationRequested) {\n        return;\n      }\n      const waitables: Promise<void>[] = [];\n      const asyncEvent = Object.assign(event, {\n        waitUntil: (thenable: Promise<any>) => {\n          if (Object.isFrozen(waitables)) {\n            throw new Error('waitUntil cannot be called asynchronously.');\n          }\n          if (promiseJoin) {\n            thenable = promiseJoin(thenable, listener);\n          }\n          waitables.push(thenable);\n        }\n      }) as T;\n      try {\n        listener(event);\n        // Asynchronous calls to `waitUntil` should fail.\n        Object.freeze(waitables);\n      } catch (e) {\n        console.error(e);\n      } finally {\n        delete asyncEvent['waitUntil'];\n      }\n      if (!waitables.length) {\n        return;\n      }\n      try {\n        await Promise.all(waitables);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n  }\n\n}\n"]}
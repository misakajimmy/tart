{"version":3,"sources":["common/uri.ts"],"names":[],"mappings":"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","file":"../../src/common/uri.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {URI as Uri} from 'vscode-uri';\nimport {Path} from './path';\n\nexport default class URI {\n\n  private readonly codeUri: Uri;\n\n  constructor(uri: string | Uri = '') {\n    if (uri instanceof Uri) {\n      this.codeUri = uri;\n    } else {\n      this.codeUri = Uri.parse(uri);\n    }\n  }\n\n  private _path: Path | undefined;\n\n  get path(): Path {\n    if (this._path === undefined) {\n      this._path = new Path(this.codeUri.path);\n    }\n    return this._path;\n  }\n\n  /**\n   * TODO move implementation to `DefaultUriLabelProviderContribution.getName`\n   *\n   * @deprecated use `LabelProvider.getName` instead\n   */\n  get displayName(): string {\n    const base = this.path.base;\n    if (base) {\n      return base;\n    }\n    if (this.path.isRoot) {\n      return this.path.toString();\n    }\n    return '';\n  }\n\n  /**\n   * Return all uri from the current to the top most.\n   */\n  get allLocations(): URI[] {\n    const locations = [];\n    let location: URI = this;\n    while (!location.path.isRoot && location.path.hasDir) {\n      locations.push(location);\n      location = location.parent;\n    }\n    locations.push(location);\n    return locations;\n  }\n\n  get parent(): URI {\n    if (this.path.isRoot) {\n      return this;\n    }\n    return this.withPath(this.path.dir);\n  }\n\n  get scheme(): string {\n    return this.codeUri.scheme;\n  }\n\n  get authority(): string {\n    return this.codeUri.authority;\n  }\n\n  get query(): string {\n    return this.codeUri.query;\n  }\n\n  get fragment(): string {\n    return this.codeUri.fragment;\n  }\n\n  static getDistinctParents(uris: URI[]): URI[] {\n    const result: URI[] = [];\n    uris.forEach((uri, i) => {\n      if (!uris.some((otherUri, index) => index !== i && otherUri.isEqualOrParent(uri))) {\n        result.push(uri);\n      }\n    });\n    return result;\n  }\n\n  relative(uri: URI): Path | undefined {\n    if (this.authority !== uri.authority || this.scheme !== uri.scheme) {\n      return undefined;\n    }\n    return this.path.relative(uri.path);\n  }\n\n  resolve(path: string | Path): URI {\n    return this.withPath(this.path.join(path.toString()));\n  }\n\n  /**\n   * return a new URI replacing the current with the given scheme\n   */\n  withScheme(scheme: string): URI {\n    const newCodeUri = Uri.from({\n      ...this.codeUri.toJSON(),\n      scheme\n    });\n    return new URI(newCodeUri);\n  }\n\n  /**\n   * return a new URI replacing the current with the given authority\n   */\n  withAuthority(authority: string): URI {\n    const newCodeUri = Uri.from({\n      ...this.codeUri.toJSON(),\n      scheme: this.codeUri.scheme,\n      authority\n    });\n    return new URI(newCodeUri);\n  }\n\n  /**\n   * return this URI without a authority\n   */\n  withoutAuthority(): URI {\n    return this.withAuthority('');\n  }\n\n  /**\n   * return a new URI replacing the current with the given path\n   */\n  withPath(path: string | Path): URI {\n    const newCodeUri = Uri.from({\n      ...this.codeUri.toJSON(),\n      scheme: this.codeUri.scheme,\n      path: path.toString()\n    });\n    return new URI(newCodeUri);\n  }\n\n  /**\n   * return this URI without a path\n   */\n  withoutPath(): URI {\n    return this.withPath('');\n  }\n\n  /**\n   * return a new URI replacing the current with the given query\n   */\n  withQuery(query: string): URI {\n    const newCodeUri = Uri.from({\n      ...this.codeUri.toJSON(),\n      scheme: this.codeUri.scheme,\n      query\n    });\n    return new URI(newCodeUri);\n  }\n\n  /**\n   * return this URI without a query\n   */\n  withoutQuery(): URI {\n    return this.withQuery('');\n  }\n\n  /**\n   * return a new URI replacing the current with the given fragment\n   */\n  withFragment(fragment: string): URI {\n    const newCodeUri = Uri.from({\n      ...this.codeUri.toJSON(),\n      scheme: this.codeUri.scheme,\n      fragment\n    });\n    return new URI(newCodeUri);\n  }\n\n  /**\n   * return this URI without a fragment\n   */\n  withoutFragment(): URI {\n    return this.withFragment('');\n  }\n\n  /**\n   * return a new URI replacing the current with its normalized path, resolving '..' and '.' segments\n   */\n  normalizePath(): URI {\n    return this.withPath(this.path.normalize());\n  }\n\n  toString(skipEncoding?: boolean): string {\n    return this.codeUri.toString(skipEncoding);\n  }\n\n  isEqual(uri: URI, caseSensitive: boolean = true): boolean {\n    if (!this.hasSameOrigin(uri)) {\n      return false;\n    }\n\n    return caseSensitive\n        ? this.toString() === uri.toString()\n        : this.toString().toLowerCase() === uri.toString().toLowerCase();\n  }\n\n  isEqualOrParent(uri: URI, caseSensitive: boolean = true): boolean {\n    if (!this.hasSameOrigin(uri)) {\n      return false;\n    }\n    let left = this.path;\n    let right = uri.path;\n    if (!caseSensitive) {\n      left = new Path(left.toString().toLowerCase());\n      right = new Path(right.toString().toLowerCase());\n    }\n    return left.isEqualOrParent(right);\n  }\n\n  private hasSameOrigin(uri: URI): boolean {\n    return (this.authority === uri.authority) && (this.scheme === uri.scheme);\n  }\n}\n"]}
{"version":3,"sources":["common/color.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAMlF,MAAM,KAAW,KAAK,CAuBrB;AAvBD,WAAiB,KAAK;IACpB,SAAgB,IAAI,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,IAAY,CAAC;QACjE,OAAO,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;IACtB,CAAC;IAFe,UAAI,OAEnB,CAAA;IAED,SAAgB,IAAI,CAAC,CAAS,EAAE,CAAS,EAAE,CAAS,EAAE,IAAY,CAAC;QACjE,OAAO,EAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAC,CAAC;IACtB,CAAC;IAFe,UAAI,OAEnB,CAAA;IAEY,WAAK,GAAG,IAAI,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IAC/B,WAAK,GAAG,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAEtC,SAAgB,WAAW,CAAC,CAAS,EAAE,CAAS;QAC9C,OAAO,EAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,aAAa,EAAC,CAAC;IACrC,CAAC;IAFe,iBAAW,cAE1B,CAAA;IAED,SAAgB,OAAO,CAAC,CAAS,EAAE,CAAS;QAC1C,OAAO,EAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,SAAS,EAAC,CAAC;IACjC,CAAC;IAFe,aAAO,UAEtB,CAAA;IAED,SAAgB,MAAM,CAAC,CAAS,EAAE,CAAS;QACzC,OAAO,EAAC,CAAC,EAAE,CAAC,EAAE,IAAI,EAAE,QAAQ,EAAC,CAAC;IAChC,CAAC;IAFe,YAAM,SAErB,CAAA;AACH,CAAC,EAvBgB,KAAK,KAAL,KAAK,QAuBrB","file":"../../src/common/color.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/**\n * Either be a reference to an existing color or a color value as a hex string, rgba, or hsla.\n */\nexport type Color = string | RGBA | HSLA | ColorTransformation;\nexport namespace Color {\n  export function rgba(r: number, g: number, b: number, a: number = 1): Color {\n    return {r, g, b, a};\n  }\n\n  export function hsla(h: number, s: number, l: number, a: number = 1): Color {\n    return {h, s, l, a};\n  }\n\n  export const white = rgba(255, 255, 255, 1);\n  export const black = rgba(0, 0, 0, 1);\n\n  export function transparent(v: string, f: number): ColorTransformation {\n    return {v, f, kind: 'transparent'};\n  }\n\n  export function lighten(v: string, f: number): ColorTransformation {\n    return {v, f, kind: 'lighten'};\n  }\n\n  export function darken(v: string, f: number): ColorTransformation {\n    return {v, f, kind: 'darken'};\n  }\n}\n\nexport interface ColorTransformation {\n  kind: 'transparent' | 'lighten' | 'darken'\n  v: string\n  f: number\n}\n\nexport interface RGBA {\n  /**\n   * Red: integer in [0-255]\n   */\n  readonly r: number;\n\n  /**\n   * Green: integer in [0-255]\n   */\n  readonly g: number;\n\n  /**\n   * Blue: integer in [0-255]\n   */\n  readonly b: number;\n\n  /**\n   * Alpha: float in [0-1]\n   */\n  readonly a: number;\n}\n\nexport interface HSLA {\n  /**\n   * Hue: integer in [0, 360]\n   */\n  readonly h: number;\n  /**\n   * Saturation: float in [0, 1]\n   */\n  readonly s: number;\n  /**\n   * Luminosity: float in [0, 1]\n   */\n  readonly l: number;\n  /**\n   * Alpha: float in [0, 1]\n   */\n  readonly a: number;\n}\n\nexport interface ColorDefaults {\n  light?: Color\n  dark?: Color\n  hc?: Color\n}\n\nexport interface ColorDefinition {\n  id: string\n  defaults?: ColorDefaults\n  description: string\n}\n\nexport interface ColorCssVariable {\n  name: string\n  value: string\n}\n"]}
{"version":3,"sources":["common/selection-service.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;AAElF,OAAO,EAAC,UAAU,EAAC,MAAM,WAAW,CAAC;AACrC,OAAO,EAAC,OAAO,EAAC,MAAM,WAAW,CAAC;AAUlC,IAAa,gBAAgB,GAA7B,MAAa,gBAAgB;IAER,yBAAyB,GAAG,IAAI,OAAO,EAAO,CAAC;IACzD,kBAAkB,GAAe,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;IACvE,gBAAgB,CAAqB;IAE7C,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,gBAAgB,CAAC;IAC/B,CAAC;IAED,IAAI,SAAS,CAAC,SAA6B;QACzC,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;QAClC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;IAC7D,CAAC;CAEF,CAAA;AAfY,gBAAgB;IAD5B,UAAU,EAAE;GACA,gBAAgB,CAe5B;SAfY,gBAAgB","file":"../../src/common/selection-service.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {injectable} from 'inversify';\nimport {Emitter} from './emitter';\nimport {Event} from './event';\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport interface SelectionProvider<T> {\n  onSelectionChanged: Event<T | undefined>;\n}\n\n@injectable()\nexport class SelectionService implements SelectionProvider<Object | undefined> {\n\n  protected readonly onSelectionChangedEmitter = new Emitter<any>();\n  readonly onSelectionChanged: Event<any> = this.onSelectionChangedEmitter.event;\n  private currentSelection: Object | undefined;\n\n  get selection(): Object | undefined {\n    return this.currentSelection;\n  }\n\n  set selection(selection: Object | undefined) {\n    this.currentSelection = selection;\n    this.onSelectionChangedEmitter.fire(this.currentSelection);\n  }\n\n}\n"]}
{"version":3,"sources":["common/lsp-types.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,KAAK,EAAC,MAAM,6BAA6B,CAAC;AAQlD,MAAM,KAAW,8BAA8B,CAO9C;AAPD,WAAiB,8BAA8B;IAE7C,8DAA8D;IAC9D,SAAgB,EAAE,CAAC,GAAQ;QACzB,OAAO,CAAC,CAAC,GAAG,IAAI,OAAO,GAAG,CAAC,MAAM,CAAC,KAAK,QAAQ,IAAI,CAAC,OAAO,GAAG,CAAC,aAAa,CAAC,KAAK,QAAQ,IAAI,OAAO,GAAG,CAAC,aAAa,CAAC,KAAK,WAAW,CAAC,IAAI,KAAK,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,CAAC;IACrK,CAAC;IAFe,iCAAE,KAEjB,CAAA;AAEH,CAAC,EAPgB,8BAA8B,KAA9B,8BAA8B,QAO9C","file":"../../src/common/lsp-types.js","sourcesContent":["import {Range} from 'vscode-languageserver-types';\n\nexport interface TextDocumentContentChangeDelta {\n  readonly range: Range;\n  readonly rangeLength?: number;\n  readonly text: string;\n}\n\nexport namespace TextDocumentContentChangeDelta {\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  export function is(arg: any): arg is TextDocumentContentChangeDelta {\n    return !!arg && typeof arg['text'] === 'string' && (typeof arg['rangeLength'] === 'number' || typeof arg['rangeLength'] === 'undefined') && Range.is(arg['range']);\n  }\n\n}\n"]}
{"version":3,"sources":["common/container.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAa,MAAM,WAAW,CAAC;AAEhD,MAAM,OAAO,eAAe;IAClB,UAAU,GAAc,IAAI,SAAS,EAAE,CAAC;IACxC,QAAQ,GAAU,EAAE,CAAC;IAE7B;IACA,CAAC;IAED,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAED,KAAK,CAAC,aAAa,CAAC,OAAiB;QACnC,MAAM,OAAO,CAAC,GAAG,CAAC,KAAK,EAAC,MAAM,EAAC,EAAE;YAC/B,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC,CAAC;IACL,CAAC;IAED,KAAK,CAAC,UAAU,CAAC,SAA2B;QAC1C,IAAI,GAAG,GAAG,EAAE,CAAC;QACb,KAAK,IAAI,QAAQ,IAAI,SAAS,EAAE;YAC9B,MAAM,OAAO,GAAG,MAAM,QAAQ,CAAC;YAC/B,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE;gBAC1B,MAAM,CAAC,GAAG,MAAM,MAAM,CAAC,OAAO,CAAC;gBAC/B,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAA;aACZ;SACF;QACD,MAAM,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;IACxB,CAAC;IAES,KAAK,CAAC,YAAY,CAAC,MAAc;QACzC,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,oDAAoD;QACpD,8BAA8B;IAChC,CAAC;IAES,KAAK,CAAC,KAAK,CAAC,SAAgB;QACpC,MAAM,SAAS,CAAC,GAAG,CAAC,KAAK,EAAE,QAAQ,EAAE,EAAE;YACrC,MAAM,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC,CAAC,CAAC;IACL,CAAC;IAES,KAAK,CAAC,IAAI,CAAC,QAAa;QAChC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;YACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC7B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;SAChC;IACH,CAAC;IAED,UAAU,CAAI,OAAwC;QACpD,OAAO,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;IACtC,CAAC;CACF","file":"../../src/common/container.js","sourcesContent":["import {Container, interfaces} from 'inversify';\r\n\r\nexport class ContainerLoader {\r\n  private _container: Container = new Container();\r\n  private _modules: any[] = [];\r\n\r\n  constructor() {\r\n  }\r\n\r\n  get container() {\r\n    return this._container;\r\n  }\r\n\r\n  async importModules(modules: string[]) {\r\n    await modules.map(async module => {\r\n      await this.importModule(module);\r\n    });\r\n  }\r\n\r\n  async loadsAsync(jsModules: Promise<any[]>[]) {\r\n    let tmp = [];\r\n    for (let jsModule of jsModules) {\r\n      const modules = await jsModule;\r\n      for (let module of modules) {\r\n        const m = await module.default;\r\n        tmp.push(m)\r\n      }\r\n    }\r\n    await this.loads(tmp);\r\n  }\r\n\r\n  protected async importModule(module: string) {\r\n    console.log('start');\r\n    // const m = await import(`@tart_module/${module}`);\r\n    // await this.load(m.default);\r\n  }\r\n\r\n  protected async loads(jsModules: any[]) {\r\n    await jsModules.map(async (jsModule) => {\r\n      await this.load(jsModule);\r\n    });\r\n  }\r\n\r\n  protected async load(jsModule: any) {\r\n    if (!this._modules.includes(jsModule)) {\r\n      this._modules.push(jsModule);\r\n      this._container.load(jsModule);\r\n    }\r\n  }\r\n\r\n  getService<T>(service: interfaces.ServiceIdentifier<T>): T {\r\n    return this._container.get(service);\r\n  }\r\n}\r\n\r\n/**\r\n * The namespace for `ApplicationShell` class statics.\r\n */\r\nexport namespace ApplicationShell {\r\n  /**\r\n   * The areas of the application shell where widgets can reside.\r\n   */\r\n  export type Area = 'main' | 'top' | 'left' | 'right' | 'bottom';\r\n}\r\n"]}
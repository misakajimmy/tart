{"version":3,"sources":["common/application-error.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAIlF,MAAM,WAAW,gBAAgB,CAAC,CAAC,SAAS,MAAM,EAAE,CAAC,CAAE,SAAQ,KAAK;IAClE,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAA;IAChB,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAA;IAEhB,MAAM,IAAI,gBAAgB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAA;CACtC;AAED,yBAAiB,gBAAgB,CAAC;IAChC,UAAiB,OAAO,CAAC,CAAC;QACxB,OAAO,EAAE,MAAM,CAAA;QACf,IAAI,EAAE,CAAC,CAAA;QACP,KAAK,CAAC,EAAE,MAAM,CAAA;KACf;IAED,UAAiB,WAAW,CAAC,CAAC,SAAS,MAAM,EAAE,CAAC;QAC9C,IAAI,EAAE,CAAC,CAAC;QAER,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,GAAG,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAEzC,EAAE,CAAC,GAAG,EAAE,MAAM,GAAG,SAAS,GAAG,GAAG,IAAI,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAAA;KAC3D;IAID,SAAgB,OAAO,CAAC,CAAC,SAAS,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,OAAO,EAAE,CAAC,GAAG,IAAI,EAAE,GAAG,EAAE,KAAK,OAAO,CAAC,CAAC,CAAC,GAAG,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAWhH;IAED,SAAgB,EAAE,CAAC,CAAC,SAAS,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,MAAM,GAAG,SAAS,GAAG,GAAG,IAAI,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAE9F;IAED,SAAgB,QAAQ,CAAC,CAAC,SAAS,MAAM,EAAE,CAAC,EAAE,IAAI,EAAE,CAAC,EAAE,GAAG,EAAE,OAAO,CAAC,CAAC,CAAC,GAAG,gBAAgB,CAAC,CAAC,EAAE,CAAC,CAAC,CAE9F;CAuBF","file":"../../src/common/application-error.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport interface ApplicationError<C extends number, D> extends Error {\n  readonly code: C\n  readonly data: D\n\n  toJson(): ApplicationError.Literal<D>\n}\n\nexport namespace ApplicationError {\n  export interface Literal<D> {\n    message: string\n    data: D\n    stack?: string\n  }\n\n  export interface Constructor<C extends number, D> {\n    code: C;\n\n    (...args: any[]): ApplicationError<C, D>;\n\n    is(arg: object | undefined): arg is ApplicationError<C, D>\n  }\n\n  const codes: number[] = [];\n\n  export function declare<C extends number, D>(code: C, factory: (...args: any[]) => Literal<D>): Constructor<C, D> {\n    if (codes.indexOf(code) !== -1) {\n      throw new Error(`An application error for '${code}' code is already declared`);\n    }\n    const constructorOpt = Object.assign((...args: any[]) => new Impl(code, factory(...args), constructorOpt), {\n      code,\n      is(arg: object | undefined): arg is ApplicationError<C, D> {\n        return arg instanceof Impl && arg.code === code;\n      }\n    });\n    return constructorOpt;\n  }\n\n  export function is<C extends number, D>(arg: object | undefined): arg is ApplicationError<C, D> {\n    return arg instanceof Impl;\n  }\n\n  export function fromJson<C extends number, D>(code: C, raw: Literal<D>): ApplicationError<C, D> {\n    return new Impl(code, raw);\n  }\n\n  class Impl<C extends number, D> extends Error implements ApplicationError<C, D> {\n    readonly data: D;\n\n    constructor(\n        readonly code: C,\n        raw: ApplicationError.Literal<D>,\n        constructorOpt?: Function\n    ) {\n      super(raw.message);\n      this.data = raw.data;\n      Object.setPrototypeOf(this, Impl.prototype);\n      if (raw.stack) {\n        this.stack = raw.stack;\n      }\n    }\n\n    toJson(): ApplicationError.Literal<D> {\n      const {message, data, stack} = this;\n      return {message, data, stack};\n    }\n  }\n}\n"]}
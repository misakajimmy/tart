{"version":3,"sources":["common/quick-pick-service.ts"],"names":[],"mappings":"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","file":"../../src/common/quick-pick-service.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/********************************************************************************\n * Copyright (c) 2021 SAP SE or an SAP affiliate company and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport URI from './uri';\nimport * as fuzzy from 'fuzzy';\nimport {Event} from './event';\nimport {KeySequence} from '../browser/keys';\nimport {CancellationToken} from './cancellation';\n\nexport const quickPickServicePath = '/services/quickPick';\nexport const QuickPickService = Symbol('QuickPickService');\n\nexport interface QuickPickService {\n  readonly onDidHide: Event<void>;\n  readonly onDidAccept: Event<void>;\n  readonly onDidChangeValue: Event<{ quickPick: QuickPick<QuickPickItem>, filter: string }>;\n  readonly onDidChangeActive: Event<{ quickPick: QuickPick<QuickPickItem>, activeItems: Array<QuickPickItem> }>;\n  readonly onDidChangeSelection: Event<{ quickPick: QuickPick<QuickPickItem>, selectedItems: Array<QuickPickItem> }>;\n  readonly onDidTriggerButton: Event<QuickInputButtonHandle>;\n\n  show<T extends QuickPickItem>(items: Array<T>, options?: QuickPickOptions<T>): Promise<T | undefined>;\n\n  setItems<T extends QuickPickItem>(items: Array<T>): void;\n\n  hide(): void\n}\n\nexport interface Match {\n  start: number;\n  end: number;\n}\n\nexport interface QuickPickItemHighlights {\n  label?: Match[];\n  description?: Match[];\n  detail?: Match[];\n}\n\nexport interface QuickPickItem {\n  type?: 'item' | 'separator';\n  id?: string;\n  label: string;\n  meta?: string;\n  ariaLabel?: string;\n  description?: string;\n  detail?: string;\n  keySequence?: KeySequence;\n  iconClasses?: string[];\n  alwaysShow?: boolean;\n  highlights?: QuickPickItemHighlights;\n  buttons?: QuickInputButton[];\n  execute?: () => void;\n}\n\nexport namespace QuickPickItem {\n  export function is(item: QuickPickSeparator | QuickPickItem): item is QuickPickItem {\n    // if it's not a separator, it's an item\n    return item.type !== 'separator';\n  }\n}\n\nexport interface QuickPickSeparator {\n  type: 'separator';\n  label?: string;\n}\n\nexport namespace QuickPickSeparator {\n  export function is(item: QuickPickSeparator | QuickPickItem): item is QuickPickSeparator {\n    return item.type === 'separator';\n  }\n}\n\nexport type QuickPicks = (QuickPickSeparator | QuickPickItem)[];\n\nexport interface QuickPickValue<V> extends QuickPickItem {\n  value: V\n}\n\nexport interface QuickInputButton {\n  iconPath?: URI | { light: URI; dark: URI } | { id: string };\n  iconClass?: string;\n  tooltip?: string;\n}\n\nexport interface QuickInputButtonHandle extends QuickInputButton {\n  index: number; // index of where they are in buttons array if QuickInputButton or -1 if QuickInputButtons.Back\n}\n\nexport interface QuickInput {\n  readonly onDidHide: Event<void>;\n  readonly onDispose: Event<void>;\n  title: string | undefined;\n  description: string | undefined;\n  step: number | undefined;\n  totalSteps: number | undefined;\n  enabled: boolean;\n  contextKey: string | undefined;\n  busy: boolean;\n  ignoreFocusOut: boolean;\n\n  show(): void;\n\n  hide(): void;\n\n  dispose(): void;\n}\n\nexport interface InputBox extends QuickInput {\n  value: string | undefined;\n  valueSelection: Readonly<[number, number]> | undefined;\n  placeholder: string | undefined;\n  password: boolean;\n  readonly onDidChangeValue: Event<string>;\n  readonly onDidAccept: Event<void>;\n  buttons: ReadonlyArray<QuickInputButton>;\n  readonly onDidTriggerButton: Event<QuickInputButton>;\n  prompt: string | undefined;\n  validationMessage: string | undefined;\n}\n\nexport interface QuickPick<T extends QuickPickItem> extends QuickInput {\n  value: string;\n  placeholder: string | undefined;\n  items: ReadonlyArray<T | QuickPickSeparator>;\n  activeItems: ReadonlyArray<T>;\n  selectedItems: ReadonlyArray<T>;\n  canSelectMany: boolean;\n  matchOnDescription: boolean;\n  matchOnDetail: boolean;\n  readonly onDidAccept: Event<void>;\n  readonly onDidChangeValue: Event<string>;\n  readonly onDidTriggerButton: Event<QuickInputButton>;\n  readonly onDidTriggerItemButton: Event<QuickPickItemButtonEvent<T>>;\n  readonly onDidChangeActive: Event<T[]>;\n  readonly onDidChangeSelection: Event<T[]>;\n}\n\nexport interface PickOptions<T extends QuickPickItem> {\n  placeHolder?: string;\n  matchOnDescription?: boolean;\n  matchOnDetail?: boolean;\n  matchOnLabel?: boolean;\n  autoFocusOnList?: boolean;\n  ignoreFocusLost?: boolean;\n  canPickMany?: boolean;\n  contextKey?: string;\n  activeItem?: Promise<T> | T;\n  onDidFocus?: (entry: T) => void;\n}\n\nexport interface InputOptions {\n  value?: string;\n  valueSelection?: [number, number];\n  prompt?: string;\n  placeHolder?: string;\n  password?: boolean;\n  ignoreFocusLost?: boolean;\n\n  validateInput?(input: string): Promise<string | null | undefined> | undefined;\n}\n\nexport interface QuickPickItemButtonEvent<T extends QuickPickItem> {\n  button: QuickInputButton;\n  item: T;\n}\n\nexport interface QuickPickItemButtonContext<T extends QuickPickItem> extends QuickPickItemButtonEvent<T> {\n  removeItem(): void;\n}\n\nexport interface QuickPickOptions<T extends QuickPickItem> {\n  busy?: boolean;\n  enabled?: boolean;\n  title?: string;\n  description?: string;\n  value?: string;\n  filterValue?: (value: string) => string;\n  ariaLabel?: string;\n  buttons?: Array<QuickInputButton>;\n  placeholder?: string;\n  canAcceptInBackground?: boolean;\n  customButton?: boolean;\n  customLabel?: string;\n  customHover?: string;\n  canSelectMany?: boolean;\n  matchOnDescription?: boolean;\n  matchOnDetail?: boolean;\n  matchOnLabel?: boolean;\n  sortByLabel?: boolean;\n  autoFocusOnList?: boolean;\n  ignoreFocusOut?: boolean;\n  valueSelection?: Readonly<[number, number]>;\n  validationMessage?: string;\n  hideInput?: boolean;\n  hideCheckAll?: boolean;\n  runIfSingle?: boolean\n  contextKey?: string;\n  activeItem?: T,\n  step?: number;\n  totalSteps?: number;\n\n  onDidAccept?: () => void,\n  onDidChangeActive?: (quickPick: QuickPick<T>, activeItems: Array<T>) => void,\n  onDidChangeSelection?: (quickPick: QuickPick<T>, selectedItems: Array<T>) => void,\n  onDidChangeValue?: (quickPick: QuickPick<T>, filter: string) => void,\n  onDidCustom?: () => void,\n  onDidHide?: () => void;\n  onDidTriggerButton?: (button: QuickInputButton) => void,\n  onDidTriggerItemButton?: (ItemButtonEvent: QuickPickItemButtonContext<T>) => void\n}\n\nexport const QuickInputService = Symbol('QuickInputService');\n\nexport interface QuickInputService {\n  readonly backButton: QuickInputButton;\n  readonly onShow: Event<void>;\n  readonly onHide: Event<void>;\n\n  open(filter: string): void;\n\n  createInputBox(): InputBox;\n\n  input(options?: InputOptions, token?: CancellationToken): Promise<string | undefined>;\n\n  pick<T extends QuickPickItem, O extends PickOptions<T>>(picks: Promise<T[]> | T[], options?: O, token?: CancellationToken):\n      Promise<(O extends { canPickMany: true } ? T[] : T) | undefined>;\n\n  showQuickPick<T extends QuickPickItem>(items: Array<T>, options?: QuickPickOptions<T>): Promise<T>;\n\n  hide(): void;\n\n  /**\n   * Provides raw access to the quick pick controller.\n   */\n  createQuickPick<T extends QuickPickItem>(): QuickPick<T>;\n}\n\n/**\n * Filter the list of quick pick items based on the provided filter.\n * Items are filtered based on if:\n * - their `label` satisfies the filter using `fuzzy`.\n * - their `description` satisfies the filter using `fuzzy`.\n * - their `detail` satisfies the filter using `fuzzy`.\n * Filtered items are also updated to display proper highlights based on how they were filtered.\n * @param items the list of quick pick items.\n * @param filter the filter to search for.\n * @returns the list of quick pick items that satisfy the filter.\n */\nexport function filterItems(items: QuickPickItem[], filter: string): QuickPickItem[] {\n  filter = filter.trim().toLowerCase();\n\n  if (filter.length === 0) {\n    for (const item of items) {\n      item.highlights = undefined; // reset highlights from previous filtering.\n    }\n    return items;\n  }\n\n  const filteredItems: QuickPickItem[] = [];\n  for (const item of items) {\n    if (\n        fuzzy.test(filter, item.label) ||\n        (item.description && fuzzy.test(filter, item.description)) ||\n        (item.detail && fuzzy.test(filter, item.detail))\n    ) {\n      item.highlights = {\n        label: findMatches(item.label, filter),\n        description: item.description ? findMatches(item.description, filter) : undefined,\n        detail: item.detail ? findMatches(item.detail, filter) : undefined\n      };\n      filteredItems.push(item);\n    }\n  }\n  return filteredItems;\n}\n\n/**\n * Find match highlights when testing a word against a pattern.\n * @param word the word to test.\n * @param pattern the word to match against.\n * @returns the list of highlights if present.\n */\nexport function findMatches(word: string, pattern: string): Array<{ start: number, end: number }> | undefined {\n  word = word.toLocaleLowerCase();\n  pattern = pattern.toLocaleLowerCase();\n\n  if (pattern.trim().length === 0) {\n    return undefined;\n  }\n\n  const delimiter = '\\u0000'; // null byte that shouldn't appear in the input and is used to denote matches.\n  const matchResult = fuzzy.match(pattern.replace(/\\u0000/gu, ''), word, {pre: delimiter, post: delimiter});\n  if (!matchResult) {\n    return undefined;\n  }\n\n  const match = matchResult.rendered;\n  const highlights: { start: number, end: number }[] = [];\n\n  let lastIndex = 0;\n  /** We need to account for the extra markers by removing them from the range */\n  let offset = 0;\n\n  while (true) {\n    const start = match.indexOf(delimiter, lastIndex);\n    if (start === -1) {\n      break;\n    }\n    const end = match.indexOf(delimiter, start + 1);\n    if (end === -1) {\n      break;\n    }\n    highlights.push({\n      start: start - offset++,\n      end: end - offset++\n    });\n    lastIndex = end + 1;\n  }\n\n  return highlights.length > 0 ? highlights : undefined;\n}\n"]}
{"version":3,"sources":["common/preferences/preference-scope.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAElF,uDAAuD;AAEvD,MAAM,CAAN,IAAY,eAKX;AALD,WAAY,eAAe;IACzB,2DAAO,CAAA;IACP,QAAQ;IACR,aAAa;IACb,SAAS;AACX,CAAC,EALW,eAAe,KAAf,eAAe,QAK1B;AAED,WAAiB,eAAe;IAC9B,SAAgB,EAAE,CAAC,KAAU;QAC3B,OAAO,OAAO,KAAK,KAAK,QAAQ,IAAI,SAAS,EAAE,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,KAAK,CAAC,IAAI,CAAC,CAAC;IACnF,CAAC;IAFe,kBAAE,KAEjB,CAAA;IAED;;OAEG;IACH,SAAgB,SAAS;QACvB,OAAO,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;aAC9B,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,eAAe,CAAC,CAAQ,CAAC,KAAK,QAAQ,CAAC;aAC1D,GAAG,CAAC,CAAC,CAAC,EAAE,CAAkB,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;IAC5C,CAAC;IAJe,yBAAS,YAIxB,CAAA;IAED;;OAEG;IACH,SAAgB,iBAAiB;QAC/B,OAAO,SAAS,EAAE,CAAC,OAAO,EAAE,CAAC;IAC/B,CAAC;IAFe,iCAAiB,oBAEhC,CAAA;IAED,SAAgB,aAAa,CAAC,KAAuB;QACnD,MAAM,KAAK,GAAa,EAAE,CAAC;QAC3B,MAAM,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC;aACxC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,OAAO,eAAe,CAAC,CAAQ,CAAC,KAAK,QAAQ,CAAC,CAAC;QAChE,IAAI,KAAK,EAAE;YACT,KAAK,MAAM,IAAI,IAAI,QAAQ,EAAE;gBAC3B,IAAU,eAAgB,CAAC,IAAI,CAAC,IAAI,KAAK,EAAE;oBACzC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;iBAClB;aACF;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAZe,6BAAa,gBAY5B,CAAA;IAED,SAAgB,UAAU,CAAC,QAAgB;QACzC,QAAQ,QAAQ,EAAE;YACd,sBAAsB;YACtB,mCAAmC;YACnC,iBAAiB;YACjB,qCAAqC;YACrC,mBAAmB;YACnB,qCAAqC;YACrC,+BAA+B;YAC/B,qCAAqC;SACxC;QACD,OAAO,eAAe,CAAC,OAAO,CAAC;IACjC,CAAC;IAZe,0BAAU,aAYzB,CAAA;AACH,CAAC,EAhDgB,eAAe,KAAf,eAAe,QAgD/B","file":"../../../src/common/preferences/preference-scope.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nexport enum PreferenceScope {\n  Default,\n  // User,\n  // Workspace,\n  // Folder\n}\n\nexport namespace PreferenceScope {\n  export function is(scope: any): scope is PreferenceScope {\n    return typeof scope === 'number' && getScopes().findIndex(s => s === scope) >= 0;\n  }\n\n  /**\n   * @returns preference scopes from broadest to narrowest: Default -> Folder.\n   */\n  export function getScopes(): PreferenceScope[] {\n    return Object.keys(PreferenceScope)\n        .filter(k => typeof PreferenceScope[k as any] === 'string')\n        .map(v => <PreferenceScope>Number(v));\n  }\n\n  /**\n   * @returns preference scopes from narrowest to broadest. Folder -> Default.\n   */\n  export function getReversedScopes(): PreferenceScope[] {\n    return getScopes().reverse();\n  }\n\n  export function getScopeNames(scope?: PreferenceScope): string[] {\n    const names: string[] = [];\n    const allNames = Object.keys(PreferenceScope)\n        .filter(k => typeof PreferenceScope[k as any] === 'number');\n    if (scope) {\n      for (const name of allNames) {\n        if ((<any>PreferenceScope)[name] <= scope) {\n          names.push(name);\n        }\n      }\n    }\n    return names;\n  }\n\n  export function fromString(strScope: string): PreferenceScope | undefined {\n    switch (strScope) {\n        // case 'application':\n        //     return PreferenceScope.User;\n        // case 'window':\n        //     return PreferenceScope.Folder;\n        // case 'resource':\n        //     return PreferenceScope.Folder;\n        // case 'language-overridable':\n        //     return PreferenceScope.Folder;\n    }\n    return PreferenceScope.Default;\n  }\n}\n"]}
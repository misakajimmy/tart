{"version":3,"sources":["browser/quick-input/quick-view-service.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAGlF,OAAO,EAAC,iBAAiB,EAAE,UAAU,EAAC,MAAM,cAAc,CAAC;AAC3D,OAAO,EAAC,iBAAiB,EAAC,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAAC,uBAAuB,EAAE,mBAAmB,EAAE,mBAAmB,EAAC,MAAM,gBAAgB,CAAC;AACjG,OAAO,EAAc,aAAa,EAAE,UAAU,EAAC,MAAM,iCAAiC,CAAC;AAEvF,MAAM,WAAW,aAAa;IAC5B,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC;IACvB,QAAQ,CAAC,IAAI,CAAC,EAAE,MAAM,CAAC;IACvB,QAAQ,CAAC,IAAI,EAAE,MAAM,IAAI,CAAC;CAC3B;AAED,qBACa,gBAAiB,YAAW,uBAAuB,EAAE,mBAAmB;IACnF,MAAM,CAAC,MAAM,SAAW;IAExB,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC,aAAa,GAAG;QAAE,IAAI,CAAC,EAAE,MAAM,CAAA;KAAE,CAAC,EAAE,CAAM;IAErE,SAAS,CAAC,QAAQ,CAAC,mBAAmB,EAAE,mBAAmB,CAAC;IAE5D,SAAS,CAAC,QAAQ,CAAC,iBAAiB,EAAE,iBAAiB,CAAC;IACxD,OAAO,CAAC,gBAAgB,CAAiC;IAEzD,YAAY,CAAC,IAAI,EAAE,aAAa,GAAG,UAAU;IAiB7C,QAAQ,CAAC,KAAK,EAAE,MAAM,GAAG,IAAI;IAI7B,QAAQ,CAAC,KAAK,EAAE,MAAM,GAAG,IAAI;IAI7B,2BAA2B,IAAI,IAAI;IASnC,QAAQ,CAAC,MAAM,EAAE,MAAM,EAAE,KAAK,EAAE,iBAAiB,GAAG,UAAU;CAO/D","file":"../../../src/browser/quick-input/quick-view-service.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (c) 2021 SAP SE or an SAP affiliate company and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {inject, injectable} from 'inversify';\nimport {CancellationToken, Disposable} from '../../common';\nimport {ContextKeyService} from '../context-key-service';\nimport {QuickAccessContribution, QuickAccessProvider, QuickAccessRegistry} from './quick-access';\nimport {filterItems, QuickPickItem, QuickPicks} from '../../common/quick-pick-service';\n\nexport interface QuickViewItem {\n  readonly label: string;\n  readonly when?: string;\n  readonly open: () => void;\n}\n\n@injectable()\nexport class QuickViewService implements QuickAccessContribution, QuickAccessProvider {\n  static PREFIX = 'view ';\n\n  protected readonly items: (QuickPickItem & { when?: string })[] = [];\n  @inject(QuickAccessRegistry)\n  protected readonly quickAccessRegistry: QuickAccessRegistry;\n  @inject(ContextKeyService)\n  protected readonly contextKexService: ContextKeyService;\n  private hiddenItemLabels = new Set<string | undefined>();\n\n  registerItem(item: QuickViewItem): Disposable {\n    const quickOpenItem = {\n      label: item.label,\n      execute: () => item.open(),\n      when: item.when\n    };\n    this.items.push(quickOpenItem);\n    this.items.sort((a, b) => a.label!.localeCompare(b.label!));\n\n    return Disposable.create(() => {\n      const index = this.items.indexOf(quickOpenItem);\n      if (index !== -1) {\n        this.items.splice(index, 1);\n      }\n    });\n  }\n\n  hideItem(label: string): void {\n    this.hiddenItemLabels.add(label);\n  }\n\n  showItem(label: string): void {\n    this.hiddenItemLabels.delete(label);\n  }\n\n  registerQuickAccessProvider(): void {\n    this.quickAccessRegistry.registerQuickAccessProvider({\n      getInstance: () => this,\n      prefix: QuickViewService.PREFIX,\n      placeholder: '',\n      helpEntries: [{description: 'Open View', needsEditor: false}]\n    });\n  }\n\n  getPicks(filter: string, token: CancellationToken): QuickPicks {\n    const items = this.items.filter(item =>\n        (item.when === undefined || this.contextKexService.match(item.when)) &&\n        (!this.hiddenItemLabels.has(item.label))\n    );\n    return filterItems(items, filter);\n  }\n}\n"]}
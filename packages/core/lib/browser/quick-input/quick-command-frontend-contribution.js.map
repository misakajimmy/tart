{"version":3,"sources":["browser/quick-input/quick-command-frontend-contribution.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAC,MAAM,WAAW,CAAC;AAGvD,OAAO,EAAC,YAAY,EAAE,mBAAmB,EAAC,MAAM,yBAAyB,CAAC;AAC1E,OAAO,EAAC,WAAW,EAAC,MAAM,iCAAiC,CAAC;AAC5D,OAAO,EAAC,iBAAiB,EAAC,MAAM,iCAAiC,CAAC;AAClE,OAAO,EAAC,GAAG,EAAC,MAAM,kBAAkB,CAAC;AAGrC,IAAa,gCAAgC,GAA7C,MAAa,gCAAgC;IAGxB,iBAAiB,CAAoB;IAIrC,mBAAmB,CAAsB;IAE5D,gBAAgB,CAAC,QAAyB;QACxC,QAAQ,CAAC,eAAe,CAAC,YAAY,EAAE;YACrC,OAAO,EAAE,GAAG,EAAE;gBACZ,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;YACpC,CAAC;SACF,CAAC,CAAC;IACL,CAAC;IAED,aAAa,CAAC,KAAwB;QACpC,KAAK,CAAC,kBAAkB,CAAC,WAAW,CAAC,YAAY,EAAE;YACjD,SAAS,EAAE,YAAY,CAAC,EAAE;YAC1B,KAAK,EAAE,GAAG,CAAC,iBAAiB,CAAC,oBAAoB,CAAC;SACnD,CAAC,CAAC;IACL,CAAC;IAED,mBAAmB,CAAC,WAA+B;QACjD,WAAW,CAAC,kBAAkB,CAAC;YAC7B,OAAO,EAAE,YAAY,CAAC,EAAE;YACxB,UAAU,EAAE,IAAI;SACjB,CAAC,CAAC;IACL,CAAC;CACF,CAAA;AA3BC;IADC,MAAM,CAAC,iBAAiB,CAAC;IAAE,QAAQ,EAAE;2EACkB;AAIxD;IADC,MAAM,CAAC,mBAAmB,CAAC;IAAE,QAAQ,EAAE;6EACoB;AAPjD,gCAAgC;IAD5C,UAAU,EAAE;GACA,gCAAgC,CA8B5C;SA9BY,gCAAgC","file":"../../../src/browser/quick-input/quick-command-frontend-contribution.js","sourcesContent":["import {inject, injectable, optional} from 'inversify';\nimport {CommandContribution, CommandRegistry, MenuContribution, MenuModelRegistry} from '../../common';\nimport {KeybindingContribution, KeybindingRegistry} from '../keybinding';\nimport {quickCommand, QuickCommandService} from './quick-command-service';\nimport {CommonMenus} from '../common-frontend-contribution';\nimport {QuickInputService} from '../../common/quick-pick-service';\nimport {nls} from '../../common/nls';\n\n@injectable()\nexport class QuickCommandFrontendContribution implements CommandContribution, KeybindingContribution, MenuContribution {\n\n  @inject(QuickInputService) @optional()\n  protected readonly quickInputService: QuickInputService;\n\n\n  @inject(QuickCommandService) @optional()\n  protected readonly quickCommandService: QuickCommandService;\n\n  registerCommands(commands: CommandRegistry): void {\n    commands.registerCommand(quickCommand, {\n      execute: () => {\n        this.quickInputService?.open('>');\n      }\n    });\n  }\n\n  registerMenus(menus: MenuModelRegistry): void {\n    menus.registerMenuAction(CommonMenus.VIEW_PRIMARY, {\n      commandId: quickCommand.id,\n      label: nls.localizeByDefault('Command Palette...')\n    });\n  }\n\n  registerKeybindings(keybindings: KeybindingRegistry): void {\n    keybindings.registerKeybinding({\n      command: quickCommand.id,\n      keybinding: 'f1'\n    });\n  }\n}\n"]}
{"version":3,"sources":["browser/quick-input/quick-pick-service-impl.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAIlF,OAAO,EAAC,gBAAgB,EAAC,MAAM,iCAAiC,CAAC;AACjE,OAAO,EACL,sBAAsB,EACtB,iBAAiB,EACjB,SAAS,EACT,aAAa,EACb,gBAAgB,EACjB,MAAM,uBAAuB,CAAC;AAE/B,qBACa,oBAAqB,YAAW,gBAAgB;IAG3D,SAAS,CAAC,QAAQ,CAAC,iBAAiB,EAAE,iBAAiB,CAAC;IAExD,OAAO,CAAC,QAAQ,CAAC,gBAAgB,CAAuB;IACxD,QAAQ,CAAC,SAAS,qCAA+B;IAEjD,OAAO,CAAC,QAAQ,CAAC,uBAAuB,CAA0E;IAClH,QAAQ,CAAC,gBAAgB;mBAD2C,UAAU,aAAa,CAAC;gBAAU,MAAM;OAC7C;IAE/D,OAAO,CAAC,QAAQ,CAAC,kBAAkB,CAAuB;IAC1D,QAAQ,CAAC,WAAW,qCAAiC;IAErD,OAAO,CAAC,QAAQ,CAAC,wBAAwB,CAA6F;IACtI,QAAQ,CAAC,iBAAiB;mBAD2C,UAAU,aAAa,CAAC;qBAAe,MAAM,aAAa,CAAC;OAC/D;IAEjE,OAAO,CAAC,QAAQ,CAAC,2BAA2B,CAA+F;IAC3I,QAAQ,CAAC,oBAAoB;mBAD2C,UAAU,aAAa,CAAC;uBAAiB,MAAM,aAAa,CAAC;OAC9D;IAEvE,OAAO,CAAC,QAAQ,CAAC,yBAAyB,CAAyC;IACnF,QAAQ,CAAC,kBAAkB,uDAAwC;IAGnE,OAAO,CAAC,KAAK,CAAkB;IAEzB,IAAI,CAAC,CAAC,SAAS,aAAa,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC;IAsB/F,IAAI,IAAI,IAAI;IAIZ,QAAQ,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,CAAC,aAAa,CAAC,GAAG,IAAI;CAG/C","file":"../../../src/browser/quick-input/quick-pick-service-impl.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {inject, injectable, optional} from 'inversify';\nimport {Emitter} from '../../common';\nimport {QuickPickService} from '../../common/quick-pick-service';\nimport {\n  QuickInputButtonHandle,\n  QuickInputService,\n  QuickPick,\n  QuickPickItem,\n  QuickPickOptions\n} from './quick-input-service';\n\n@injectable()\nexport class QuickPickServiceImpl implements QuickPickService {\n\n  @inject(QuickInputService) @optional()\n  protected readonly quickInputService: QuickInputService;\n\n  private readonly onDidHideEmitter = new Emitter<void>();\n  readonly onDidHide = this.onDidHideEmitter.event;\n\n  private readonly onDidChangeValueEmitter = new Emitter<{ quickPick: QuickPick<QuickPickItem>, filter: string }>();\n  readonly onDidChangeValue = this.onDidChangeValueEmitter.event;\n\n  private readonly onDidAcceptEmitter = new Emitter<void>();\n  readonly onDidAccept = this.onDidAcceptEmitter.event;\n\n  private readonly onDidChangeActiveEmitter = new Emitter<{ quickPick: QuickPick<QuickPickItem>, activeItems: Array<QuickPickItem> }>();\n  readonly onDidChangeActive = this.onDidChangeActiveEmitter.event;\n\n  private readonly onDidChangeSelectionEmitter = new Emitter<{ quickPick: QuickPick<QuickPickItem>, selectedItems: Array<QuickPickItem> }>();\n  readonly onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n\n  private readonly onDidTriggerButtonEmitter = new Emitter<QuickInputButtonHandle>();\n  readonly onDidTriggerButton = this.onDidTriggerButtonEmitter.event;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private items: Array<any> = [];\n\n  async show<T extends QuickPickItem>(items: Array<T>, options?: QuickPickOptions<T>): Promise<T> {\n    this.items = items;\n    const opts = Object.assign({}, options, {\n      onDidAccept: () => this.onDidAcceptEmitter.fire(),\n      onDidChangeActive: (quickPick: QuickPick<T>, activeItems: Array<QuickPickItem>) => this.onDidChangeActiveEmitter.fire({\n        quickPick,\n        activeItems\n      }),\n      onDidChangeSelection: (quickPick: QuickPick<T>, selectedItems: Array<QuickPickItem>) => this.onDidChangeSelectionEmitter.fire({\n        quickPick,\n        selectedItems\n      }),\n      onDidChangeValue: (quickPick: QuickPick<T>, filter: string) => this.onDidChangeValueEmitter.fire({\n        quickPick,\n        filter\n      }),\n      onDidHide: () => this.onDidHideEmitter.fire(),\n      onDidTriggerButton: (btn: QuickInputButtonHandle) => this.onDidTriggerButtonEmitter.fire(btn),\n    });\n    return this.quickInputService?.showQuickPick(this.items, opts);\n  }\n\n  hide(): void {\n    this.quickInputService?.hide();\n  }\n\n  setItems<T>(items: Array<QuickPickItem>): void {\n    this.items = items;\n  }\n}\n"]}
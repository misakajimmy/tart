{"version":3,"sources":["browser/quick-input/quick-pick-service-impl.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;AAElF,OAAO,EAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAC,MAAM,WAAW,CAAC;AACvD,OAAO,EAAC,OAAO,EAAC,MAAM,cAAc,CAAC;AAErC,OAAO,EAEL,iBAAiB,EAIlB,MAAM,uBAAuB,CAAC;AAG/B,IAAa,oBAAoB,GAAjC,MAAa,oBAAoB;IAGZ,iBAAiB,CAAoB;IAEvC,gBAAgB,GAAG,IAAI,OAAO,EAAQ,CAAC;IAC/C,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;IAEhC,uBAAuB,GAAG,IAAI,OAAO,EAA2D,CAAC;IACzG,gBAAgB,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC;IAE9C,kBAAkB,GAAG,IAAI,OAAO,EAAQ,CAAC;IACjD,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IAEpC,wBAAwB,GAAG,IAAI,OAAO,EAA8E,CAAC;IAC7H,iBAAiB,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;IAEhD,2BAA2B,GAAG,IAAI,OAAO,EAAgF,CAAC;IAClI,oBAAoB,GAAG,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC;IAEtD,yBAAyB,GAAG,IAAI,OAAO,EAA0B,CAAC;IAC1E,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,KAAK,CAAC;IAEnE,8DAA8D;IACtD,KAAK,GAAe,EAAE,CAAC;IAE/B,KAAK,CAAC,IAAI,CAA0B,KAAe,EAAE,OAA6B;QAChF,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;QACnB,MAAM,IAAI,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE;YACtC,WAAW,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,kBAAkB,CAAC,IAAI,EAAE;YACjD,iBAAiB,EAAE,CAAC,SAAuB,EAAE,WAAiC,EAAE,EAAE,CAAC,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC;gBACpH,SAAS;gBACT,WAAW;aACZ,CAAC;YACF,oBAAoB,EAAE,CAAC,SAAuB,EAAE,aAAmC,EAAE,EAAE,CAAC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC;gBAC5H,SAAS;gBACT,aAAa;aACd,CAAC;YACF,gBAAgB,EAAE,CAAC,SAAuB,EAAE,MAAc,EAAE,EAAE,CAAC,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC;gBAC/F,SAAS;gBACT,MAAM;aACP,CAAC;YACF,SAAS,EAAE,GAAG,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE;YAC7C,kBAAkB,EAAE,CAAC,GAA2B,EAAE,EAAE,CAAC,IAAI,CAAC,yBAAyB,CAAC,IAAI,CAAC,GAAG,CAAC;SAC9F,CAAC,CAAC;QACH,OAAO,IAAI,CAAC,iBAAiB,EAAE,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC;IAED,IAAI;QACF,IAAI,CAAC,iBAAiB,EAAE,IAAI,EAAE,CAAC;IACjC,CAAC;IAED,QAAQ,CAAI,KAA2B;QACrC,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;IACrB,CAAC;CACF,CAAA;AApDC;IADC,MAAM,CAAC,iBAAiB,CAAC;IAAE,QAAQ,EAAE;+DACkB;AAH7C,oBAAoB;IADhC,UAAU,EAAE;GACA,oBAAoB,CAuDhC;SAvDY,oBAAoB","file":"../../../src/browser/quick-input/quick-pick-service-impl.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {inject, injectable, optional} from 'inversify';\nimport {Emitter} from '../../common';\nimport {QuickPickService} from '../../common/quick-pick-service';\nimport {\n  QuickInputButtonHandle,\n  QuickInputService,\n  QuickPick,\n  QuickPickItem,\n  QuickPickOptions\n} from './quick-input-service';\n\n@injectable()\nexport class QuickPickServiceImpl implements QuickPickService {\n\n  @inject(QuickInputService) @optional()\n  protected readonly quickInputService: QuickInputService;\n\n  private readonly onDidHideEmitter = new Emitter<void>();\n  readonly onDidHide = this.onDidHideEmitter.event;\n\n  private readonly onDidChangeValueEmitter = new Emitter<{ quickPick: QuickPick<QuickPickItem>, filter: string }>();\n  readonly onDidChangeValue = this.onDidChangeValueEmitter.event;\n\n  private readonly onDidAcceptEmitter = new Emitter<void>();\n  readonly onDidAccept = this.onDidAcceptEmitter.event;\n\n  private readonly onDidChangeActiveEmitter = new Emitter<{ quickPick: QuickPick<QuickPickItem>, activeItems: Array<QuickPickItem> }>();\n  readonly onDidChangeActive = this.onDidChangeActiveEmitter.event;\n\n  private readonly onDidChangeSelectionEmitter = new Emitter<{ quickPick: QuickPick<QuickPickItem>, selectedItems: Array<QuickPickItem> }>();\n  readonly onDidChangeSelection = this.onDidChangeSelectionEmitter.event;\n\n  private readonly onDidTriggerButtonEmitter = new Emitter<QuickInputButtonHandle>();\n  readonly onDidTriggerButton = this.onDidTriggerButtonEmitter.event;\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  private items: Array<any> = [];\n\n  async show<T extends QuickPickItem>(items: Array<T>, options?: QuickPickOptions<T>): Promise<T> {\n    this.items = items;\n    const opts = Object.assign({}, options, {\n      onDidAccept: () => this.onDidAcceptEmitter.fire(),\n      onDidChangeActive: (quickPick: QuickPick<T>, activeItems: Array<QuickPickItem>) => this.onDidChangeActiveEmitter.fire({\n        quickPick,\n        activeItems\n      }),\n      onDidChangeSelection: (quickPick: QuickPick<T>, selectedItems: Array<QuickPickItem>) => this.onDidChangeSelectionEmitter.fire({\n        quickPick,\n        selectedItems\n      }),\n      onDidChangeValue: (quickPick: QuickPick<T>, filter: string) => this.onDidChangeValueEmitter.fire({\n        quickPick,\n        filter\n      }),\n      onDidHide: () => this.onDidHideEmitter.fire(),\n      onDidTriggerButton: (btn: QuickInputButtonHandle) => this.onDidTriggerButtonEmitter.fire(btn),\n    });\n    return this.quickInputService?.showQuickPick(this.items, opts);\n  }\n\n  hide(): void {\n    this.quickInputService?.hide();\n  }\n\n  setItems<T>(items: Array<QuickPickItem>): void {\n    this.items = items;\n  }\n}\n"]}
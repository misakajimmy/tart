{"version":3,"sources":["browser/progress-bar.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAElF,OAAO,EAAC,UAAU,EAAE,oBAAoB,EAAC,MAAM,WAAW,CAAC;AAE3D,OAAO,EAAC,kBAAkB,EAAC,MAAM,wBAAwB,CAAC;AAE1D,qBACa,WAAY,YAAW,UAAU;IAE5C,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,kBAAkB,CAAC;IAE/C,SAAS,CAAC,QAAQ,CAAC,SAAS,uBAA8B;IAC1D,SAAS,CAAC,WAAW,EAAE,cAAc,CAAC;IACtC,SAAS,CAAC,oBAAoB,EAAE,cAAc,CAAC;;IAW/C,OAAO,IAAI,IAAI;IAKf,SAAS,CAAC,IAAI,IAAI,IAAI;IAWtB,SAAS,CAAC,UAAU,CAAC,KAAK,EAAE,GAAG,GAAG,IAAI;IAOtC,SAAS,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,GAAG,IAAI;CAI7C","file":"../../src/browser/progress-bar.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {Disposable, DisposableCollection} from '../common';\nimport {inject, injectable, postConstruct} from 'inversify';\nimport {ProgressBarOptions} from './progress-bar-factory';\n\n@injectable()\nexport class ProgressBar implements Disposable {\n  @inject(ProgressBarOptions)\n  protected readonly options: ProgressBarOptions;\n\n  protected readonly toDispose = new DisposableCollection();\n  protected progressBar: HTMLDivElement;\n  protected progressBarContainer: HTMLDivElement;\n\n  constructor() {\n    this.progressBar = document.createElement('div');\n    this.progressBar.className = 'tart-progress-bar';\n    this.progressBar.style.display = 'none';\n    this.progressBarContainer = document.createElement('div');\n    this.progressBarContainer.className = 'tart-progress-bar-container';\n    this.progressBarContainer.append(this.progressBar);\n  }\n\n  dispose(): void {\n    this.toDispose.dispose();\n  }\n\n  @postConstruct()\n  protected init(): void {\n    const {container, insertMode, locationId} = this.options;\n    if (insertMode === 'prepend') {\n      container.prepend(this.progressBarContainer);\n    } else {\n      container.append(this.progressBarContainer);\n    }\n    this.toDispose.push(Disposable.create(() => this.progressBarContainer.remove()));\n\n  }\n\n  protected onProgress(event: any): void {\n    if (this.toDispose.disposed) {\n      return;\n    }\n    this.setVisible(event.show);\n  }\n\n  protected setVisible(visible: boolean): void {\n    this.progressBar.style.display = visible ? 'block' : 'none';\n  }\n\n}\n"]}
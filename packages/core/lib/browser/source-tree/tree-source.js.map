{"version":3,"sources":["browser/source-tree/tree-source.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;;;;AAKlF,OAAO,EAAC,UAAU,EAAE,SAAS,EAAC,MAAM,WAAW,CAAC;AAChD,OAAO,EAAC,OAAO,EAAQ,MAAM,cAAc,CAAC;AAE5C,OAAO,EAAa,oBAAoB,EAAC,MAAM,yBAAyB,CAAC;AAoBzE,MAAM,KAAW,oBAAoB,CASpC;AATD,WAAiB,oBAAoB;IACnC,uDAAuD;IACvD,SAAgB,EAAE,CAAC,OAAmC;QACpD,OAAO,CAAC,CAAC,OAAO,IAAI,aAAa,IAAI,OAAO,CAAC;IAC/C,CAAC;IAFe,uBAAE,KAEjB,CAAA;IAED,SAAgB,WAAW,CAAC,OAAmC;QAC7D,OAAO,EAAE,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,WAAW,KAAK,KAAK,CAAC;IACtD,CAAC;IAFe,gCAAW,cAE1B,CAAA;AACH,CAAC,EATgB,oBAAoB,KAApB,oBAAoB,QASpC;AAGD,IAAsB,UAAU,GAAhC,MAAsB,UAAU;IACrB,EAAE,CAAqB;IACvB,WAAW,CAAqB;IACtB,kBAAkB,GAAG,IAAI,OAAO,EAAQ,CAAC;IACnD,WAAW,GAAgB,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IAC/C,SAAS,GAAG,IAAI,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IAEjF,YAAyB,UAA6B,EAAE;QACtD,IAAI,CAAC,EAAE,GAAG,OAAO,CAAC,EAAE,CAAC;QACrB,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC,WAAW,CAAC;IACzC,CAAC;IAED,OAAO;QACL,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;IAC3B,CAAC;IAIS,aAAa;QACrB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;CACF,CAAA;AArBqB,UAAU;IAD/B,UAAU,EAAE;IAQE,WAAA,SAAS,EAAE,CAAA;GAPJ,UAAU,CAqB/B;SArBqB,UAAU","file":"../../../src/browser/source-tree/tree-source.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport {ReactNode} from 'react';\nimport {injectable, unmanaged} from 'inversify';\nimport {Emitter, Event} from '../../common';\nimport {MaybePromise} from '../../common/types';\nimport {Disposable, DisposableCollection} from '../../common/disposable';\n\nexport interface TreeElement {\n  /** default: parent id + position among siblings */\n  readonly id?: number | string | undefined\n  /** default: true */\n  readonly visible?: boolean\n\n  render(): ReactNode\n\n  open?(): MaybePromise<any>\n}\n\nexport interface CompositeTreeElement extends TreeElement {\n  /** default: true */\n  readonly hasElements?: boolean\n\n  getElements(): MaybePromise<IterableIterator<TreeElement>>\n}\n\nexport namespace CompositeTreeElement {\n  /* eslint-disable @typescript-eslint/no-explicit-any */\n  export function is(element: CompositeTreeElement | any): element is CompositeTreeElement {\n    return !!element && 'getElements' in element;\n  }\n\n  export function hasElements(element: CompositeTreeElement | any): element is CompositeTreeElement {\n    return is(element) && element.hasElements !== false;\n  }\n}\n\n@injectable()\nexport abstract class TreeSource implements Disposable {\n  readonly id: string | undefined;\n  readonly placeholder: string | undefined;\n  protected readonly onDidChangeEmitter = new Emitter<void>();\n  readonly onDidChange: Event<void> = this.onDidChangeEmitter.event;\n  protected readonly toDispose = new DisposableCollection(this.onDidChangeEmitter);\n\n  constructor(@unmanaged() options: TreeSourceOptions = {}) {\n    this.id = options.id;\n    this.placeholder = options.placeholder;\n  }\n\n  dispose(): void {\n    this.toDispose.dispose();\n  }\n\n  abstract getElements(): MaybePromise<IterableIterator<TreeElement>>;\n\n  protected fireDidChange(): void {\n    this.onDidChangeEmitter.fire(undefined);\n  }\n}\n\nexport interface TreeSourceOptions {\n  id?: string\n  placeholder?: string\n}\n"]}
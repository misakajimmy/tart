{"version":3,"sources":["browser/source-tree/source-tree.ts"],"names":[],"mappings":"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","file":"../../../src/browser/source-tree/source-tree.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {injectable} from 'inversify';\nimport {MaybePromise} from '../../common/types';\nimport {CompositeTreeNode, ExpandableTreeNode, SelectableTreeNode, TreeImpl, TreeNode} from '../tree';\nimport {CompositeTreeElement, TreeElement, TreeSource} from './tree-source';\n\n@injectable()\nexport class SourceTree extends TreeImpl {\n\n  async resolveChildren(parent: TreeElementNodeParent): Promise<TreeNode[]> {\n    const elements = await this.resolveElements(parent);\n    const nodes: TreeNode[] = [];\n    let index = 0;\n    for (const element of elements) {\n      if (element.visible !== false) {\n        nodes.push(this.toNode(element, index++, parent));\n      }\n    }\n    return nodes;\n  }\n\n  protected resolveElements(parent: TreeElementNodeParent): MaybePromise<IterableIterator<TreeElement>> {\n    if (TreeSourceNode.is(parent)) {\n      return parent.source.getElements();\n    }\n    return parent.element.getElements();\n  }\n\n  protected toNode(element: TreeElement, index: number, parent: TreeElementNodeParent): TreeElementNode {\n    const id = element.id ? String(element.id) : (parent.id + ':' + index);\n    const name = id;\n    const existing = this.getNode(id);\n    const updated = existing && <TreeElementNode>Object.assign(existing, {element, parent});\n    if (CompositeTreeElement.hasElements(element)) {\n      if (updated) {\n        if (!ExpandableTreeNode.is(updated)) {\n          Object.assign(updated, {expanded: false});\n        }\n        if (!CompositeTreeNode.is(updated)) {\n          Object.assign(updated, {children: []});\n        }\n        return updated;\n      }\n      return {\n        element,\n        parent,\n        id,\n        name,\n        selected: false,\n        expanded: false,\n        children: []\n      } as TreeElementNode;\n    }\n    if (CompositeTreeElementNode.is(updated)) {\n      delete updated.expanded;\n      delete updated.children;\n    }\n    if (updated) {\n      if (ExpandableTreeNode.is(updated)) {\n        delete updated.expanded;\n      }\n      if (CompositeTreeNode.is(updated)) {\n        delete updated.children;\n      }\n      return updated;\n    }\n    return {\n      element,\n      parent,\n      id,\n      name,\n      selected: false\n    };\n  }\n\n}\n\nexport type TreeElementNodeParent = CompositeTreeElementNode | TreeSourceNode;\n\nexport interface TreeElementNode extends TreeNode, SelectableTreeNode {\n  element: TreeElement\n  parent: TreeElementNodeParent\n}\n\nexport namespace TreeElementNode {\n  export function is(node: TreeNode | undefined): node is TreeElementNode {\n    return SelectableTreeNode.is(node) && 'element' in node;\n  }\n}\n\nexport interface CompositeTreeElementNode extends TreeElementNode, CompositeTreeNode, ExpandableTreeNode {\n  element: CompositeTreeElement\n  children: TreeElementNode[]\n  parent: TreeElementNodeParent\n}\n\nexport namespace CompositeTreeElementNode {\n  export function is(node: TreeNode | undefined): node is CompositeTreeElementNode {\n    return TreeElementNode.is(node) && CompositeTreeNode.is(node) && ExpandableTreeNode.is(node) && !!node.visible;\n  }\n}\n\nexport interface TreeSourceNode extends CompositeTreeNode, SelectableTreeNode {\n  visible: false\n  children: TreeElementNode[]\n  parent: undefined\n  source: TreeSource\n}\n\nexport namespace TreeSourceNode {\n  export function is(node: TreeNode | undefined): node is TreeSourceNode {\n    return CompositeTreeNode.is(node) && !node.visible && 'source' in node;\n  }\n\n  export function to(source: undefined): undefined;\n  export function to(source: TreeSource): TreeSourceNode;\n  export function to(source: TreeSource | undefined): TreeSourceNode | undefined;\n  export function to(source: TreeSource | undefined): TreeSourceNode | undefined {\n    if (source === undefined) {\n      return undefined;\n    }\n    const id = source.id || '__source__';\n    return {\n      id,\n      name: id,\n      visible: false,\n      children: [],\n      source,\n      parent: undefined,\n      selected: false\n    };\n  }\n}\n"]}
{"version":3,"sources":["browser/source-tree/source-tree-widget.tsx"],"names":[],"mappings":"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","file":"../../../src/browser/source-tree/source-tree-widget.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as React from 'react';\nimport {Container, injectable, interfaces, postConstruct} from 'inversify';\nimport {DisposableCollection} from '../../common/disposable';\nimport {createTreeContainer, Tree, TreeImpl, TreeModel, TreeNode, TreeProps, TreeWidget} from '../tree';\nimport {TreeElement, TreeSource} from './tree-source';\nimport {SourceTree, TreeElementNode, TreeSourceNode} from './source-tree';\n\n@injectable()\nexport class SourceTreeWidget extends TreeWidget {\n\n  protected readonly toDisposeOnSource = new DisposableCollection();\n\n  get source(): TreeSource | undefined {\n    const root = this.model.root;\n    return TreeSourceNode.is(root) ? root.source : undefined;\n  }\n\n  set source(source: TreeSource | undefined) {\n    if (this.source === source) {\n      return;\n    }\n    this.toDisposeOnSource.dispose();\n    this.toDispose.push(this.toDisposeOnSource);\n    this.model.root = TreeSourceNode.to(source);\n    if (source) {\n      this.toDisposeOnSource.push(source.onDidChange(() => this.model.refresh()));\n    }\n  }\n\n  get selectedElement(): TreeElement | undefined {\n    const node = this.model.selectedNodes[0];\n    return TreeElementNode.is(node) && node.element || undefined;\n  }\n\n  static createContainer(parent: interfaces.Container, props?: Partial<TreeProps>): Container {\n    const child = createTreeContainer(parent, props);\n\n    child.unbind(TreeImpl);\n    child.bind(SourceTree).toSelf();\n    child.rebind(Tree).toService(SourceTree);\n\n    child.unbind(TreeWidget);\n    child.bind(SourceTreeWidget).toSelf();\n\n    return child;\n  }\n\n  storeState(): object {\n    // no-op\n    return {};\n  }\n\n  restoreState(state: object): void {\n    // no-op\n  }\n\n  @postConstruct()\n  protected init(): void {\n    super.init();\n    this.addClass('tart-source-tree');\n    this.toDispose.push(this.model.onOpenNode(node => {\n      if (TreeElementNode.is(node) && node.element.open) {\n        node.element.open();\n      }\n    }));\n  }\n\n  protected renderTree(model: TreeModel): React.ReactNode {\n    if (TreeSourceNode.is(model.root) && model.root.children.length === 0) {\n      const {placeholder} = model.root.source;\n      if (placeholder) {\n        return <div className='tart-tree-source-node-placeholder noselect'>{placeholder}</div>;\n      }\n    }\n    return super.renderTree(model);\n\n  }\n\n  protected renderCaption(node: TreeNode): React.ReactNode {\n    if (TreeElementNode.is(node)) {\n      const classNames = this.createTreeElementNodeClassNames(node);\n      return <div className={classNames.join(' ')}>{node.element.render()}</div>;\n    }\n    return undefined;\n  }\n\n  protected createTreeElementNodeClassNames(node: TreeElementNode): string[] {\n    return ['tart-tree-element-node'];\n  }\n\n  protected superStoreState(): object {\n    return super.storeState();\n  }\n\n  protected superRestoreState(state: object): void {\n    super.restoreState(state);\n    return;\n  }\n\n}\n"]}
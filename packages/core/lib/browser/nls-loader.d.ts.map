{"version":3,"sources":["browser/nls-loader.ts"],"names":[],"mappings":"AAGA,wBAAsB,gBAAgB,IAAI,OAAO,CAAC,IAAI,CAAC,CAOtD","file":"../../src/browser/nls-loader.d.ts","sourcesContent":["import {nls} from '../common/nls';\nimport zhcn from '../assets/i18n/vscode-language-pack-zh-hans/translations/main.i18n.json';\n\nexport async function loadTranslations(): Promise<void> {\n  zhcn['vscode'] = zhcn['contents'];\n  delete zhcn['contents'];\n  nls.localization = {\n    languageId: 'zh-cn',\n    translations: flattenTranslations(zhcn),\n  };\n}\n\n\nfunction flattenTranslations(localization: unknown): Record<string, string> {\n  if (typeof localization === 'object' && localization) {\n    const record: Record<string, string> = {};\n    for (const [key, value] of Object.entries(localization)) {\n      if (typeof value === 'string') {\n        record[key] = value;\n      } else if (value && typeof value === 'object') {\n        const flattened = flattenTranslations(value);\n        for (const [flatKey, flatValue] of Object.entries(flattened)) {\n          // @ts-ignore\n          record[`${key}/${flatKey}`] = flatValue;\n        }\n      }\n    }\n    return record;\n  } else {\n    return {};\n  }\n}\n"]}
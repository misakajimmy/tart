{"version":3,"sources":["browser/navigatable.ts"],"names":[],"mappings":"AACA,OAAO,EAAsB,iBAAiB,EAAC,MAAM,uBAAuB,CAAC;AAG7E,cAAc,oBAAoB,CAAC;AAEnC,MAAM,OAAgB,4BAA0D,SAAQ,iBAAoB;IAEhG,mBAAmB,CAAC,GAAQ,EAAE,OAA6B;QACnE,OAAO;YACL,IAAI,EAAE,aAAa;YACnB,GAAG,EAAE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC;SAC5B,CAAC;IACJ,CAAC;IAES,YAAY,CAAC,GAAQ;QAC7B,IAAI,GAAG,CAAC,MAAM,KAAK,MAAM,EAAE;YACzB,OAAO,GAAG,CAAC,eAAe,EAAE,CAAC,aAAa,EAAE,CAAC,QAAQ,EAAE,CAAC;SACzD;aAAM;YACL,OAAO,GAAG,CAAC,eAAe,EAAE,CAAC,QAAQ,EAAE,CAAC;SACzC;IACH,CAAC;IAES,IAAI;QACZ,KAAK,CAAC,IAAI,EAAE,CAAC;IACf,CAAC;CACF","file":"../../src/browser/navigatable.js","sourcesContent":["import {NavigatableWidget, NavigatableWidgetOptions} from './navigatable-type';\nimport {WidgetOpenerOptions, WidgetOpenHandler} from './widget-open-handler';\nimport URI from '../common/uri';\n\nexport * from './navigatable-type';\n\nexport abstract class NavigatableWidgetOpenHandler<W extends NavigatableWidget> extends WidgetOpenHandler<W> {\n\n  protected createWidgetOptions(uri: URI, options?: WidgetOpenerOptions): NavigatableWidgetOptions {\n    return {\n      kind: 'navigatable',\n      uri: this.serializeUri(uri)\n    };\n  }\n\n  protected serializeUri(uri: URI): string {\n    if (uri.scheme === 'file') {\n      return uri.withoutFragment().normalizePath().toString();\n    } else {\n      return uri.withoutFragment().toString();\n    }\n  }\n\n  protected init() {\n    super.init();\n  }\n}\n"]}
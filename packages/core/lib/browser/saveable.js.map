{"version":3,"sources":["browser/saveable.ts"],"names":[],"mappings":"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","file":"../../src/browser/saveable.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {Widget} from '@lumino/widgets';\nimport {Message} from '@lumino/messaging';\nimport {Event} from '../common/event';\nimport {MaybePromise} from '../common/types';\nimport {Key} from './keyboard/keys';\nimport {AbstractDialog} from './dialogs';\nimport {waitForClosed} from './widgets';\n\nexport interface Saveable {\n  readonly dirty: boolean;\n  readonly onDirtyChanged: Event<void>;\n  readonly autoSave: 'on' | 'off';\n\n  /**\n   * Saves dirty changes.\n   */\n  save(options?: SaveOptions): MaybePromise<void>;\n\n  /**\n   * Reverts dirty changes.\n   */\n  revert?(options?: Saveable.RevertOptions): Promise<void>;\n\n  /**\n   * Creates a snapshot of the dirty state.\n   */\n  createSnapshot?(): object;\n\n  /**\n   * Applies the given snapshot to the dirty state.\n   */\n  applySnapshot?(snapshot: object): void;\n}\n\nexport interface SaveableSource {\n  readonly saveable: Saveable;\n}\n\nexport namespace Saveable {\n  export interface RevertOptions {\n    /**\n     * If soft then only dirty flag should be updated, otherwise\n     * the underlying data should be reverted as well.\n     */\n    soft?: boolean\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  export function isSource(arg: any): arg is SaveableSource {\n    return !!arg && ('saveable' in arg) && is(arg.saveable);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  export function is(arg: any): arg is Saveable {\n    return !!arg && ('dirty' in arg) && ('onDirtyChanged' in arg);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  export function get(arg: any): Saveable | undefined {\n    if (is(arg)) {\n      return arg;\n    }\n    if (isSource(arg)) {\n      return arg.saveable;\n    }\n    return undefined;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  export function getDirty(arg: any): Saveable | undefined {\n    const saveable = get(arg);\n    if (saveable && saveable.dirty) {\n      return saveable;\n    }\n    return undefined;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  export function isDirty(arg: any): boolean {\n    return !!getDirty(arg);\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  export async function save(arg: any, options?: SaveOptions): Promise<void> {\n    const saveable = get(arg);\n    if (saveable) {\n      await saveable.save(options);\n    }\n  }\n\n  export function apply(widget: Widget): SaveableWidget | undefined {\n    if (SaveableWidget.is(widget)) {\n      return widget;\n    }\n    const saveable = Saveable.get(widget);\n    if (!saveable) {\n      return undefined;\n    }\n    setDirty(widget, saveable.dirty);\n    saveable.onDirtyChanged(() => setDirty(widget, saveable.dirty));\n    const closeWidget = widget.close.bind(widget);\n    const closeWithoutSaving: SaveableWidget['closeWithoutSaving'] = async () => {\n      if (saveable.dirty && saveable.revert) {\n        await saveable.revert();\n      }\n      closeWidget();\n      return waitForClosed(widget);\n    };\n    let closing = false;\n    const closeWithSaving: SaveableWidget['closeWithSaving'] = async options => {\n      if (closing) {\n        return;\n      }\n      closing = true;\n      try {\n        const result = await shouldSave(saveable, () => {\n          if (options && options.shouldSave) {\n            return options.shouldSave();\n          }\n          return new ShouldSaveDialog(widget).open();\n        });\n        if (typeof result === 'boolean') {\n          if (result) {\n            await Saveable.save(widget);\n          }\n          await closeWithoutSaving();\n        }\n      } finally {\n        closing = false;\n      }\n    };\n    return Object.assign(widget, {\n      closeWithoutSaving,\n      closeWithSaving,\n      close: () => closeWithSaving()\n    });\n  }\n\n  export async function shouldSave(saveable: Saveable, cb: () => MaybePromise<boolean | undefined>): Promise<boolean | undefined> {\n    if (!saveable.dirty) {\n      return false;\n    }\n\n    if (saveable.autoSave === 'on') {\n      return true;\n    }\n\n    return cb();\n  }\n}\n\nexport interface SaveableWidget extends Widget {\n  closeWithoutSaving(): Promise<void>;\n\n  closeWithSaving(options?: SaveableWidget.CloseOptions): Promise<void>;\n}\n\nexport namespace SaveableWidget {\n  export function is(widget: Widget | undefined): widget is SaveableWidget {\n    return !!widget && 'closeWithoutSaving' in widget;\n  }\n\n  export function getDirty<T extends Widget>(widgets: Iterable<T>): IterableIterator<SaveableWidget & T> {\n    return get(widgets, Saveable.isDirty);\n  }\n\n  export function* get<T extends Widget>(\n      widgets: Iterable<T>,\n      filter: (widget: T) => boolean = () => true\n  ): IterableIterator<SaveableWidget & T> {\n    for (const widget of widgets) {\n      if (SaveableWidget.is(widget) && filter(widget)) {\n        yield widget;\n      }\n    }\n  }\n\n  export interface CloseOptions {\n    shouldSave?(): MaybePromise<boolean | undefined>\n  }\n}\n\n/**\n * Possible formatting types when saving.\n */\nexport const enum FormatType {\n  /**\n   * Formatting should occur (default).\n   */\n  ON = 1,\n  /**\n   * Formatting should not occur.\n   */\n  OFF,\n  /**\n   * Formatting should only occur if the resource is dirty.\n   */\n  DIRTY\n}\n\nexport interface SaveOptions {\n  /**\n   * Formatting type to apply when saving.\n   */\n  readonly formatType?: FormatType;\n}\n\n/**\n * The class name added to the dirty widget's title.\n */\nconst DIRTY_CLASS = 'tart-mod-dirty';\n\nexport function setDirty(widget: Widget, dirty: boolean): void {\n  const dirtyClass = ` ${DIRTY_CLASS}`;\n  widget.title.className = widget.title.className.replace(dirtyClass, '');\n  if (dirty) {\n    widget.title.className += dirtyClass;\n  }\n}\n\nexport class ShouldSaveDialog extends AbstractDialog<boolean> {\n\n  protected shouldSave = true;\n\n  protected readonly dontSaveButton: HTMLButtonElement;\n\n  constructor(widget: Widget) {\n    super({\n      title: `Do you want to save the changes you made to ${widget.title.label || widget.title.caption}?`\n    });\n\n    const messageNode = document.createElement('div');\n    messageNode.textContent = \"Your changes will be lost if you don't save them.\";\n    messageNode.setAttribute('style', 'flex: 1 100%; padding-bottom: calc(var(--tart-ui-padding)*3);');\n    this.contentNode.appendChild(messageNode);\n    this.dontSaveButton = this.appendDontSaveButton();\n    this.appendCloseButton();\n    this.appendAcceptButton('Save');\n  }\n\n  get value(): boolean {\n    return this.shouldSave;\n  }\n\n  protected appendDontSaveButton(): HTMLButtonElement {\n    const button = this.createButton(\"Don't save\");\n    this.controlPanel.appendChild(button);\n    button.classList.add('secondary');\n    return button;\n  }\n\n  protected onAfterAttach(msg: Message): void {\n    super.onAfterAttach(msg);\n    this.addKeyListener(this.dontSaveButton, Key.ENTER, () => {\n      this.shouldSave = false;\n      this.accept();\n    }, 'click');\n  }\n\n}\n"]}
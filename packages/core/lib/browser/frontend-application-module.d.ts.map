{"version":3,"sources":["browser/frontend-application-module.ts"],"names":[],"mappings":"AAAA,OAAO,2BAA2B,CAAC;AACnC,OAAO,uCAAuC,CAAC;AAC/C,OAAO,6BAA6B,CAAC;AACrC,OAAO,mCAAmC,CAAC;AAE3C,OAAO,EAAC,eAAe,EAAC,MAAM,WAAW,CAAC;AAkE1C,OAAO,EAAwB,oBAAoB,EAAC,MAAM,iCAAiC,CAAC;AAgB5F,OAAO,oCAAoC,CAAC;AAI5C,OAAO,EAAC,oBAAoB,EAAC,CAAC;AAI9B,eAAO,MAAM,yBAAyB,iBA6LpC,CAAC;AAEH,eAAe,yBAAyB,CAAC","file":"../../src/browser/frontend-application-module.d.ts","sourcesContent":["import '../assets/style/index.css';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\nimport 'file-icons-js/css/style.css';\r\nimport '@vscode/codicons/dist/codicon.css';\r\n\r\nimport {ContainerModule} from 'inversify';\r\nimport {FrontendApplication, FrontendApplicationContribution} from './frontend-application';\r\nimport {\r\n  ApplicationShell,\r\n  ApplicationShellMouseTracker,\r\n  ApplicationShellOptions,\r\n  SidePanelHandler,\r\n  SidePanelHandlerFactory,\r\n  TabBarRenderer,\r\n  TabBarRendererFactory\r\n} from './shell';\r\nimport {StatusBar, StatusBarImpl} from './status-bar';\r\nimport {CommandContribution, CommandRegistry, CommandService} from '../common/command';\r\nimport {\r\n  bindContributionProvider,\r\n  InMemoryResources,\r\n  InMemoryTextResourceResolver,\r\n  MenuContribution,\r\n  MenuModelRegistry,\r\n  MessageClient,\r\n  MessageService,\r\n  ResourceResolver,\r\n  SelectionService\r\n} from '../common';\r\nimport {LabelParser} from './label-parser';\r\nimport {FrontendApplicationStateService} from './frontend-application-state';\r\nimport {\r\n  TabBarToolbar,\r\n  TabBarToolbarContribution,\r\n  TabBarToolbarFactory,\r\n  TabBarToolbarRegistry\r\n} from './shell/tab-bar-toolbar';\r\nimport {ContextKeyService} from './context-key-service';\r\nimport {\r\n  SidebarBottomMenuWidgetFactory,\r\n  SidebarMenuWidget,\r\n  SidebarTopMenuWidgetFactory\r\n} from './shell/sidebar-menu-widget';\r\n// import {TabBarRenderer, TabBarRendererFactory} from './shell/tab-bars';\r\nimport {ContextMenuRenderer} from './context-menu-renderer';\r\nimport {TabBarDecorator, TabBarDecoratorService} from './shell/tab-bar-decorator';\r\nimport {IconThemeService, NoneIconTheme} from './icon-theme-service';\r\nimport {SidebarBottomMenuWidget} from './shell/sidebar-bottom-menu-widget';\r\nimport {SplitPositionHandler} from './shell/split-panels';\r\nimport {ContextMenuContext} from './menu';\r\nimport {KeybindingContext, KeybindingContribution, KeybindingRegistry} from './keybinding';\r\nimport {KeyboardLayoutService} from './keyboard';\r\nimport {LocalStorageService, StorageService} from './storage-service';\r\nimport {DefaultUriLabelProviderContribution, LabelProvider, LabelProviderContribution} from './label-provider';\r\nimport {WidgetFactory, WidgetManager} from './widget-manager';\r\nimport {LanguageService} from './language-service';\r\nimport {ApplicationShellLayoutMigration, ShellLayoutRestorer} from './shell/shell-layout-restorer';\r\nimport {AboutDialog, AboutDialogProps} from './about-dialog';\r\nimport {CommonFrontendContribution} from './common-frontend-contribution';\r\nimport {ViewContainer, ViewContainerIdentifier} from './view-container';\r\nimport {ColorRegistry} from './color-registry';\r\nimport {ColorApplicationContribution, ColorContribution} from './color-application-contribution';\r\nimport {ThemeService} from './theming';\r\nimport {\r\n  DefaultQuickAccessRegistry,\r\n  QuickAccessContribution,\r\n  QuickCommandFrontendContribution,\r\n  QuickCommandService,\r\n  QuickViewService\r\n} from './quick-input';\r\nimport {DefaultOpenerService, OpenerService, OpenHandler} from './opener-service';\r\nimport {bindPreferenceService, bindResourceProvider} from './frontend-application-bindings';\r\nimport {PreferenceService} from './preferences/preference-service';\r\nimport {bindCorePreferences} from './core-preferences';\r\nimport {QuickInputFrontendContribution} from './quick-input/quick-input-frontend-contribution';\r\nimport {EncodingService} from '../common/encoding-service';\r\nimport {EncodingRegistry} from './encoding-registry';\r\nimport {ProgressBarFactory, ProgressBarOptions} from './progress-bar-factory';\r\nimport {ProgressBar} from './progress-bar';\r\nimport {TreeLabelProvider} from './tree/tree-label-provider';\r\nimport {DiffUriLabelProviderContribution} from './diff-uris';\r\nimport {DialogOverlayService} from './dialogs';\r\nimport {LocalizationContribution, LocalizationRegistry} from '../common/i18n/localization-contribution';\r\nimport {LocalizationProvider} from '../common/i18n/localization-provider';\r\nimport {HttpOpenHandler} from './http-open-handler';\r\nimport {ExternalUriService} from './external-uri-service';\r\n\r\nimport '../assets/style/materialcolors.css';\r\n\r\n// FrontendApplicationConfigProvider.set();\r\n\r\nexport {bindResourceProvider};\r\n\r\nColorApplicationContribution.initBackground();\r\n\r\nexport const FrontendApplicationModule = new ContainerModule((bind, unbind, isBound, rebind) => {\r\n  bind(NoneIconTheme).toSelf().inSingletonScope();\r\n  bind(LabelProviderContribution).toService(NoneIconTheme);\r\n  bind(IconThemeService).toSelf().inSingletonScope();\r\n\r\n  // bind(QuickAccessRegistry).toService(DefaultQuickAccessRegistry);\r\n\r\n  bind(ColorRegistry).toSelf().inSingletonScope();\r\n  bindContributionProvider(bind, ColorContribution);\r\n  bind(ColorApplicationContribution).toSelf().inSingletonScope();\r\n  bind(FrontendApplicationContribution).toService(ColorApplicationContribution);\r\n\r\n  bindContributionProvider(bind, LabelProviderContribution);\r\n  bind(LabelProvider).toSelf().inSingletonScope();\r\n  bind(FrontendApplicationContribution).toService(LabelProvider);\r\n\r\n  bind(DefaultUriLabelProviderContribution).toSelf().inSingletonScope();\r\n  bind(LabelProviderContribution).toService(DefaultUriLabelProviderContribution);\r\n  bind(LabelProviderContribution).to(DiffUriLabelProviderContribution).inSingletonScope();\r\n\r\n  bind(TreeLabelProvider).toSelf().inSingletonScope();\r\n  bind(LabelProviderContribution).toService(TreeLabelProvider);\r\n\r\n  bind(ApplicationShell).toSelf().inSingletonScope();\r\n  bind(SidePanelHandlerFactory).toAutoFactory(SidePanelHandler);\r\n  bind(SidePanelHandler).toSelf();\r\n\r\n  bind(AboutDialog).toSelf().inSingletonScope();\r\n  bind(AboutDialogProps).toConstantValue({title: 'Tart'});\r\n\r\n  bindContributionProvider(bind, ApplicationShellLayoutMigration);\r\n\r\n  bind(ContextKeyService).toSelf().inSingletonScope();\r\n\r\n  bind(MenuModelRegistry).toSelf().inSingletonScope();\r\n  bindContributionProvider(bind, MenuContribution);\r\n\r\n  bindContributionProvider(bind, OpenHandler);\r\n\r\n  bind(ExternalUriService).toSelf().inSingletonScope();\r\n  bind(HttpOpenHandler).toSelf().inSingletonScope();\r\n  bind(OpenHandler).toService(HttpOpenHandler);\r\n\r\n  bindContributionProvider(bind, WidgetFactory);\r\n  bind(WidgetManager).toSelf().inSingletonScope();\r\n\r\n  bind(ShellLayoutRestorer).toSelf().inSingletonScope();\r\n  bind(CommandContribution).toService(ShellLayoutRestorer);\r\n\r\n  bindResourceProvider(bind);\r\n  bind(InMemoryResources).toSelf().inSingletonScope();\r\n  bind(ResourceResolver).toService(InMemoryResources);\r\n\r\n  bind(EncodingService).toSelf().inSingletonScope();\r\n  bind(EncodingRegistry).toSelf().inSingletonScope();\r\n\r\n  bind(InMemoryTextResourceResolver).toSelf().inSingletonScope();\r\n  bind(ResourceResolver).toService(InMemoryTextResourceResolver);\r\n\r\n  bind(KeyboardLayoutService).toSelf().inSingletonScope();\r\n  bind(KeybindingRegistry).toSelf().inSingletonScope();\r\n  bindContributionProvider(bind, KeybindingContext);\r\n  bindContributionProvider(bind, KeybindingContribution);\r\n\r\n  bindContributionProvider(bind, TabBarDecorator);\r\n\r\n  bind(LanguageService).toSelf().inSingletonScope();\r\n\r\n  bind(TabBarDecoratorService).toSelf().inSingletonScope();\r\n  bind(FrontendApplicationContribution).toService(TabBarDecoratorService);\r\n\r\n  bind(FrontendApplication).toSelf().inSingletonScope();\r\n  bind(ApplicationShellOptions).toConstantValue({});\r\n\r\n  bind(FrontendApplicationStateService).toSelf().inSingletonScope();\r\n\r\n  bind(TabBarToolbarRegistry).toSelf().inSingletonScope();\r\n  bind(FrontendApplicationContribution).toService(TabBarToolbarRegistry);\r\n\r\n  bind(SidebarTopMenuWidgetFactory).toAutoFactory(SidebarMenuWidget);\r\n  bind(SidebarMenuWidget).toSelf();\r\n\r\n  bind(TabBarToolbarFactory).toFactory(context => () => {\r\n    const container = context.container.createChild();\r\n    container.bind(TabBarToolbar).toSelf().inSingletonScope();\r\n    return container.get(TabBarToolbar);\r\n  });\r\n\r\n  bind(SidebarBottomMenuWidget).toSelf();\r\n  bind(SidebarBottomMenuWidgetFactory).toAutoFactory(SidebarBottomMenuWidget);\r\n  bind(SplitPositionHandler).toSelf().inSingletonScope();\r\n\r\n  bind(ThemeService).toDynamicValue(() => ThemeService.get());\r\n\r\n  bind(CommonFrontendContribution).toSelf().inSingletonScope();\r\n  [FrontendApplicationContribution, CommandContribution, KeybindingContribution, MenuContribution, ColorContribution, LocalizationContribution].forEach(serviceIdentifier =>\r\n      bind(serviceIdentifier).toService(CommonFrontendContribution)\r\n  );\r\n\r\n  bind(DefaultOpenerService).toSelf().inSingletonScope();\r\n  bind(OpenerService).toService(DefaultOpenerService);\r\n\r\n  bind(QuickCommandFrontendContribution).toSelf().inSingletonScope();\r\n  [CommandContribution, KeybindingContribution, MenuContribution].forEach(serviceIdentifier =>\r\n      bind(serviceIdentifier).toService(QuickCommandFrontendContribution)\r\n  );\r\n\r\n  bind(QuickCommandService).toSelf().inSingletonScope();\r\n  bind(QuickAccessContribution).toService(QuickCommandService);\r\n\r\n  // bind(EnvVariablesServer).toDynamicValue(ctx => {\r\n  //     const connection = ctx.container.get(WebSocketConnectionProvider);\r\n  //     return connection.createProxy<EnvVariablesServer>(envVariablesPath);\r\n  // }).inSingletonScope();\r\n\r\n  // bind(QuickPickService).to(QuickPickServiceImpl).inSingletonScope().onActivation(({ container }, quickPickService: QuickPickService) => {\r\n  //     WebSocketConnectionProvider.createProxy(container, quickPickServicePath, quickPickService);\r\n  //     return quickPickService;\r\n  // });\r\n\r\n  bindContributionProvider(bind, QuickAccessContribution);\r\n  bind(QuickInputFrontendContribution).toSelf().inSingletonScope();\r\n  bind(FrontendApplicationContribution).toService(QuickInputFrontendContribution);\r\n\r\n  bind(TabBarRendererFactory).toFactory(context => () => {\r\n    const contextMenuRenderer = context.container.get<ContextMenuRenderer>(ContextMenuRenderer);\r\n    const decoratorService = context.container.get<TabBarDecoratorService>(TabBarDecoratorService);\r\n    const iconThemeService = context.container.get<IconThemeService>(IconThemeService);\r\n    return new TabBarRenderer(contextMenuRenderer, decoratorService, iconThemeService);\r\n  });\r\n\r\n  bind(ProgressBarFactory).toFactory(context => (options: ProgressBarOptions) => {\r\n    const childContainer = context.container.createChild();\r\n    childContainer.bind(ProgressBarOptions).toConstantValue(options);\r\n    childContainer.bind(ProgressBar).toSelf().inSingletonScope();\r\n    return childContainer.get(ProgressBar);\r\n  });\r\n\r\n  bind(LabelParser).toSelf().inSingletonScope();\r\n\r\n  bind(ContextMenuContext).toSelf().inSingletonScope();\r\n\r\n  bind(SelectionService).toSelf().inSingletonScope();\r\n  bind(CommandRegistry).toSelf().inSingletonScope().onActivation(({container}, registry) => {\r\n    return registry;\r\n  });\r\n  bind(CommandService).toService(CommandRegistry);\r\n  bindContributionProvider(bind, CommandContribution);\r\n\r\n  bind(LocalStorageService).toSelf().inSingletonScope();\r\n  bind(StorageService).toService(LocalStorageService);\r\n\r\n  bind(MessageClient).toSelf().inSingletonScope();\r\n  bind(MessageService).toSelf().inSingletonScope();\r\n\r\n  bind(ApplicationShellMouseTracker).toSelf().inSingletonScope();\r\n  bind(FrontendApplicationContribution).toService(ApplicationShellMouseTracker);\r\n\r\n  bind(ViewContainer.Factory).toFactory(context => (options: ViewContainerIdentifier) => {\r\n    const container = context.container.createChild();\r\n    container.bind(ViewContainerIdentifier).toConstantValue(options);\r\n    container.bind(ViewContainer).toSelf().inSingletonScope();\r\n    return container.get(ViewContainer);\r\n  });\r\n\r\n  bind(QuickViewService).toSelf().inSingletonScope();\r\n  bind(QuickAccessContribution).toService(QuickViewService);\r\n\r\n  bind(StatusBarImpl).toSelf().inSingletonScope();\r\n  bind(StatusBar).toService(StatusBarImpl);\r\n\r\n  bindContributionProvider(bind, TabBarToolbarContribution);\r\n  bindContributionProvider(bind, FrontendApplicationContribution);\r\n\r\n  bindContributionProvider(bind, LocalizationContribution);\r\n  bind(LocalizationRegistry).toSelf().inSingletonScope();\r\n  bind(FrontendApplicationContribution).toService(LocalizationRegistry);\r\n\r\n  bindPreferenceService(bind);\r\n  bind(FrontendApplicationContribution).toService(PreferenceService);\r\n\r\n  bind(DialogOverlayService).toSelf().inSingletonScope();\r\n  bind(FrontendApplicationContribution).toService(DialogOverlayService);\r\n\r\n  bind(LocalizationProvider).toSelf().inSingletonScope();\r\n  bindCorePreferences(bind);\r\n\r\n  bind(DefaultQuickAccessRegistry).toSelf().inSingletonScope();\r\n\r\n});\r\n\r\nexport default FrontendApplicationModule;\r\n"]}
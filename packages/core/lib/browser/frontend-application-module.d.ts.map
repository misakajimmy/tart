{"version":3,"sources":["browser/frontend-application-module.ts"],"names":[],"mappings":"AAAA,OAAO,2BAA2B,CAAC;AACnC,OAAO,uCAAuC,CAAC;AAC/C,OAAO,6BAA6B,CAAC;AACrC,OAAO,mCAAmC,CAAC;AAE3C,OAAO,EAAC,eAAe,EAAC,MAAM,WAAW,CAAC;AAkE1C,OAAO,EAAwB,oBAAoB,EAAC,MAAM,iCAAiC,CAAC;AAgB5F,OAAO,oCAAoC,CAAC;AAI5C,OAAO,EAAC,oBAAoB,EAAC,CAAC;AAI9B,eAAO,MAAM,yBAAyB,iBA6LpC,CAAC;AAEH,eAAe,yBAAyB,CAAC","file":"../../src/browser/frontend-application-module.d.ts","sourcesContent":["import '../assets/style/index.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'file-icons-js/css/style.css';\nimport '@vscode/codicons/dist/codicon.css';\n\nimport {ContainerModule} from 'inversify';\nimport {FrontendApplication, FrontendApplicationContribution} from './frontend-application';\nimport {\n  ApplicationShell,\n  ApplicationShellMouseTracker,\n  ApplicationShellOptions,\n  SidePanelHandler,\n  SidePanelHandlerFactory,\n  TabBarRenderer,\n  TabBarRendererFactory\n} from './shell';\nimport {StatusBar, StatusBarImpl} from './status-bar';\nimport {CommandContribution, CommandRegistry, CommandService} from '../common/command';\nimport {\n  bindContributionProvider,\n  InMemoryResources,\n  InMemoryTextResourceResolver,\n  MenuContribution,\n  MenuModelRegistry,\n  MessageClient,\n  MessageService,\n  ResourceResolver,\n  SelectionService\n} from '../common';\nimport {LabelParser} from './label-parser';\nimport {FrontendApplicationStateService} from './frontend-application-state';\nimport {\n  TabBarToolbar,\n  TabBarToolbarContribution,\n  TabBarToolbarFactory,\n  TabBarToolbarRegistry\n} from './shell/tab-bar-toolbar';\nimport {ContextKeyService} from './context-key-service';\nimport {\n  SidebarBottomMenuWidgetFactory,\n  SidebarMenuWidget,\n  SidebarTopMenuWidgetFactory\n} from './shell/sidebar-menu-widget';\n// import {TabBarRenderer, TabBarRendererFactory} from './shell/tab-bars';\nimport {ContextMenuRenderer} from './context-menu-renderer';\nimport {TabBarDecorator, TabBarDecoratorService} from './shell/tab-bar-decorator';\nimport {IconThemeService, NoneIconTheme} from './icon-theme-service';\nimport {SidebarBottomMenuWidget} from './shell/sidebar-bottom-menu-widget';\nimport {SplitPositionHandler} from './shell/split-panels';\nimport {ContextMenuContext} from './menu';\nimport {KeybindingContext, KeybindingContribution, KeybindingRegistry} from './keybinding';\nimport {KeyboardLayoutService} from './keyboard';\nimport {LocalStorageService, StorageService} from './storage-service';\nimport {DefaultUriLabelProviderContribution, LabelProvider, LabelProviderContribution} from './label-provider';\nimport {WidgetFactory, WidgetManager} from './widget-manager';\nimport {LanguageService} from './language-service';\nimport {ApplicationShellLayoutMigration, ShellLayoutRestorer} from './shell/shell-layout-restorer';\nimport {AboutDialog, AboutDialogProps} from './about-dialog';\nimport {CommonFrontendContribution} from './common-frontend-contribution';\nimport {ViewContainer, ViewContainerIdentifier} from './view-container';\nimport {ColorRegistry} from './color-registry';\nimport {ColorApplicationContribution, ColorContribution} from './color-application-contribution';\nimport {ThemeService} from './theming';\nimport {\n  DefaultQuickAccessRegistry,\n  QuickAccessContribution,\n  QuickCommandFrontendContribution,\n  QuickCommandService,\n  QuickViewService\n} from './quick-input';\nimport {DefaultOpenerService, OpenerService, OpenHandler} from './opener-service';\nimport {bindPreferenceService, bindResourceProvider} from './frontend-application-bindings';\nimport {PreferenceService} from './preferences/preference-service';\nimport {bindCorePreferences} from './core-preferences';\nimport {QuickInputFrontendContribution} from './quick-input/quick-input-frontend-contribution';\nimport {EncodingService} from '../common/encoding-service';\nimport {EncodingRegistry} from './encoding-registry';\nimport {ProgressBarFactory, ProgressBarOptions} from './progress-bar-factory';\nimport {ProgressBar} from './progress-bar';\nimport {TreeLabelProvider} from './tree/tree-label-provider';\nimport {DiffUriLabelProviderContribution} from './diff-uris';\nimport {DialogOverlayService} from './dialogs';\nimport {LocalizationContribution, LocalizationRegistry} from '../common/i18n/localization-contribution';\nimport {LocalizationProvider} from '../common/i18n/localization-provider';\nimport {HttpOpenHandler} from './http-open-handler';\nimport {ExternalUriService} from './external-uri-service';\n\nimport '../assets/style/materialcolors.css';\n\n// FrontendApplicationConfigProvider.set();\n\nexport {bindResourceProvider};\n\nColorApplicationContribution.initBackground();\n\nexport const FrontendApplicationModule = new ContainerModule((bind, unbind, isBound, rebind) => {\n  bind(NoneIconTheme).toSelf().inSingletonScope();\n  bind(LabelProviderContribution).toService(NoneIconTheme);\n  bind(IconThemeService).toSelf().inSingletonScope();\n\n  // bind(QuickAccessRegistry).toService(DefaultQuickAccessRegistry);\n\n  bind(ColorRegistry).toSelf().inSingletonScope();\n  bindContributionProvider(bind, ColorContribution);\n  bind(ColorApplicationContribution).toSelf().inSingletonScope();\n  bind(FrontendApplicationContribution).toService(ColorApplicationContribution);\n\n  bindContributionProvider(bind, LabelProviderContribution);\n  bind(LabelProvider).toSelf().inSingletonScope();\n  bind(FrontendApplicationContribution).toService(LabelProvider);\n\n  bind(DefaultUriLabelProviderContribution).toSelf().inSingletonScope();\n  bind(LabelProviderContribution).toService(DefaultUriLabelProviderContribution);\n  bind(LabelProviderContribution).to(DiffUriLabelProviderContribution).inSingletonScope();\n\n  bind(TreeLabelProvider).toSelf().inSingletonScope();\n  bind(LabelProviderContribution).toService(TreeLabelProvider);\n\n  bind(ApplicationShell).toSelf().inSingletonScope();\n  bind(SidePanelHandlerFactory).toAutoFactory(SidePanelHandler);\n  bind(SidePanelHandler).toSelf();\n\n  bind(AboutDialog).toSelf().inSingletonScope();\n  bind(AboutDialogProps).toConstantValue({title: 'Tart'});\n\n  bindContributionProvider(bind, ApplicationShellLayoutMigration);\n\n  bind(ContextKeyService).toSelf().inSingletonScope();\n\n  bind(MenuModelRegistry).toSelf().inSingletonScope();\n  bindContributionProvider(bind, MenuContribution);\n\n  bindContributionProvider(bind, OpenHandler);\n\n  bind(ExternalUriService).toSelf().inSingletonScope();\n  bind(HttpOpenHandler).toSelf().inSingletonScope();\n  bind(OpenHandler).toService(HttpOpenHandler);\n\n  bindContributionProvider(bind, WidgetFactory);\n  bind(WidgetManager).toSelf().inSingletonScope();\n\n  bind(ShellLayoutRestorer).toSelf().inSingletonScope();\n  bind(CommandContribution).toService(ShellLayoutRestorer);\n\n  bindResourceProvider(bind);\n  bind(InMemoryResources).toSelf().inSingletonScope();\n  bind(ResourceResolver).toService(InMemoryResources);\n\n  bind(EncodingService).toSelf().inSingletonScope();\n  bind(EncodingRegistry).toSelf().inSingletonScope();\n\n  bind(InMemoryTextResourceResolver).toSelf().inSingletonScope();\n  bind(ResourceResolver).toService(InMemoryTextResourceResolver);\n\n  bind(KeyboardLayoutService).toSelf().inSingletonScope();\n  bind(KeybindingRegistry).toSelf().inSingletonScope();\n  bindContributionProvider(bind, KeybindingContext);\n  bindContributionProvider(bind, KeybindingContribution);\n\n  bindContributionProvider(bind, TabBarDecorator);\n\n  bind(LanguageService).toSelf().inSingletonScope();\n\n  bind(TabBarDecoratorService).toSelf().inSingletonScope();\n  bind(FrontendApplicationContribution).toService(TabBarDecoratorService);\n\n  bind(FrontendApplication).toSelf().inSingletonScope();\n  bind(ApplicationShellOptions).toConstantValue({});\n\n  bind(FrontendApplicationStateService).toSelf().inSingletonScope();\n\n  bind(TabBarToolbarRegistry).toSelf().inSingletonScope();\n  bind(FrontendApplicationContribution).toService(TabBarToolbarRegistry);\n\n  bind(SidebarTopMenuWidgetFactory).toAutoFactory(SidebarMenuWidget);\n  bind(SidebarMenuWidget).toSelf();\n\n  bind(TabBarToolbarFactory).toFactory(context => () => {\n    const container = context.container.createChild();\n    container.bind(TabBarToolbar).toSelf().inSingletonScope();\n    return container.get(TabBarToolbar);\n  });\n\n  bind(SidebarBottomMenuWidget).toSelf();\n  bind(SidebarBottomMenuWidgetFactory).toAutoFactory(SidebarBottomMenuWidget);\n  bind(SplitPositionHandler).toSelf().inSingletonScope();\n\n  bind(ThemeService).toDynamicValue(() => ThemeService.get());\n\n  bind(CommonFrontendContribution).toSelf().inSingletonScope();\n  [FrontendApplicationContribution, CommandContribution, KeybindingContribution, MenuContribution, ColorContribution, LocalizationContribution].forEach(serviceIdentifier =>\n      bind(serviceIdentifier).toService(CommonFrontendContribution)\n  );\n\n  bind(DefaultOpenerService).toSelf().inSingletonScope();\n  bind(OpenerService).toService(DefaultOpenerService);\n\n  bind(QuickCommandFrontendContribution).toSelf().inSingletonScope();\n  [CommandContribution, KeybindingContribution, MenuContribution].forEach(serviceIdentifier =>\n      bind(serviceIdentifier).toService(QuickCommandFrontendContribution)\n  );\n\n  bind(QuickCommandService).toSelf().inSingletonScope();\n  bind(QuickAccessContribution).toService(QuickCommandService);\n\n  // bind(EnvVariablesServer).toDynamicValue(ctx => {\n  //     const connection = ctx.container.get(WebSocketConnectionProvider);\n  //     return connection.createProxy<EnvVariablesServer>(envVariablesPath);\n  // }).inSingletonScope();\n\n  // bind(QuickPickService).to(QuickPickServiceImpl).inSingletonScope().onActivation(({ container }, quickPickService: QuickPickService) => {\n  //     WebSocketConnectionProvider.createProxy(container, quickPickServicePath, quickPickService);\n  //     return quickPickService;\n  // });\n\n  bindContributionProvider(bind, QuickAccessContribution);\n  bind(QuickInputFrontendContribution).toSelf().inSingletonScope();\n  bind(FrontendApplicationContribution).toService(QuickInputFrontendContribution);\n\n  bind(TabBarRendererFactory).toFactory(context => () => {\n    const contextMenuRenderer = context.container.get<ContextMenuRenderer>(ContextMenuRenderer);\n    const decoratorService = context.container.get<TabBarDecoratorService>(TabBarDecoratorService);\n    const iconThemeService = context.container.get<IconThemeService>(IconThemeService);\n    return new TabBarRenderer(contextMenuRenderer, decoratorService, iconThemeService);\n  });\n\n  bind(ProgressBarFactory).toFactory(context => (options: ProgressBarOptions) => {\n    const childContainer = context.container.createChild();\n    childContainer.bind(ProgressBarOptions).toConstantValue(options);\n    childContainer.bind(ProgressBar).toSelf().inSingletonScope();\n    return childContainer.get(ProgressBar);\n  });\n\n  bind(LabelParser).toSelf().inSingletonScope();\n\n  bind(ContextMenuContext).toSelf().inSingletonScope();\n\n  bind(SelectionService).toSelf().inSingletonScope();\n  bind(CommandRegistry).toSelf().inSingletonScope().onActivation(({container}, registry) => {\n    return registry;\n  });\n  bind(CommandService).toService(CommandRegistry);\n  bindContributionProvider(bind, CommandContribution);\n\n  bind(LocalStorageService).toSelf().inSingletonScope();\n  bind(StorageService).toService(LocalStorageService);\n\n  bind(MessageClient).toSelf().inSingletonScope();\n  bind(MessageService).toSelf().inSingletonScope();\n\n  bind(ApplicationShellMouseTracker).toSelf().inSingletonScope();\n  bind(FrontendApplicationContribution).toService(ApplicationShellMouseTracker);\n\n  bind(ViewContainer.Factory).toFactory(context => (options: ViewContainerIdentifier) => {\n    const container = context.container.createChild();\n    container.bind(ViewContainerIdentifier).toConstantValue(options);\n    container.bind(ViewContainer).toSelf().inSingletonScope();\n    return container.get(ViewContainer);\n  });\n\n  bind(QuickViewService).toSelf().inSingletonScope();\n  bind(QuickAccessContribution).toService(QuickViewService);\n\n  bind(StatusBarImpl).toSelf().inSingletonScope();\n  bind(StatusBar).toService(StatusBarImpl);\n\n  bindContributionProvider(bind, TabBarToolbarContribution);\n  bindContributionProvider(bind, FrontendApplicationContribution);\n\n  bindContributionProvider(bind, LocalizationContribution);\n  bind(LocalizationRegistry).toSelf().inSingletonScope();\n  bind(FrontendApplicationContribution).toService(LocalizationRegistry);\n\n  bindPreferenceService(bind);\n  bind(FrontendApplicationContribution).toService(PreferenceService);\n\n  bind(DialogOverlayService).toSelf().inSingletonScope();\n  bind(FrontendApplicationContribution).toService(DialogOverlayService);\n\n  bind(LocalizationProvider).toSelf().inSingletonScope();\n  bindCorePreferences(bind);\n\n  bind(DefaultQuickAccessRegistry).toSelf().inSingletonScope();\n\n});\n\nexport default FrontendApplicationModule;\n"]}
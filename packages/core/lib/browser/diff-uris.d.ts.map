{"version":3,"sources":["browser/diff-uris.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAGlF,OAAO,GAAG,MAAM,eAAe,CAAC;AAChC,OAAO,EAAC,mBAAmB,EAAE,aAAa,EAAE,yBAAyB,EAAC,MAAM,kBAAkB,CAAC;AAG/F,yBAAiB,QAAQ,CAAC;IAEjB,MAAM,WAAW,SAAS,CAAC;IAElC,SAAgB,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,MAAM,GAAG,GAAG,CASjE;IAED,SAAgB,MAAM,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,CAMtC;IAED,SAAgB,SAAS,CAAC,GAAG,EAAE,GAAG,GAAG,OAAO,CAE3C;CAEF;AAED,qBACa,gCAAiC,YAAW,yBAAyB;IAE7C,SAAS,CAAC,aAAa,EAAE,aAAa;gBAA5B,aAAa,EAAE,aAAa;IAGzE,SAAS,CAAC,OAAO,EAAE,MAAM,GAAG,MAAM;IAOlC,WAAW,CAAC,GAAG,EAAE,GAAG,GAAG,MAAM;IAc7B,OAAO,CAAC,GAAG,EAAE,GAAG,GAAG,MAAM;IA2BzB,OAAO,CAAC,GAAG,EAAE,GAAG,GAAG,MAAM;IAIzB,OAAO,CAAC,OAAO,EAAE,GAAG,EAAE,KAAK,EAAE,mBAAmB,GAAG,OAAO;CAS3D","file":"../../src/browser/diff-uris.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {inject, injectable} from 'inversify';\nimport URI from '../common/uri';\nimport {DidChangeLabelEvent, LabelProvider, LabelProviderContribution} from './label-provider';\nimport {codicon} from './widgets';\n\nexport namespace DiffUris {\n\n  export const DIFF_SCHEME = 'diff';\n\n  export function encode(left: URI, right: URI, label?: string): URI {\n    const diffUris = [\n      left.toString(),\n      right.toString()\n    ];\n\n    const diffUriStr = JSON.stringify(diffUris);\n\n    return new URI().withScheme(DIFF_SCHEME).withPath(label || '').withQuery(diffUriStr);\n  }\n\n  export function decode(uri: URI): URI[] {\n    if (uri.scheme !== DIFF_SCHEME) {\n      throw new Error((`The URI must have scheme \"diff\". The URI was: ${uri}.`));\n    }\n    const diffUris: string[] = JSON.parse(uri.query);\n    return diffUris.map(s => new URI(s));\n  }\n\n  export function isDiffUri(uri: URI): boolean {\n    return uri.scheme === DIFF_SCHEME;\n  }\n\n}\n\n@injectable()\nexport class DiffUriLabelProviderContribution implements LabelProviderContribution {\n\n  constructor(@inject(LabelProvider) protected labelProvider: LabelProvider) {\n  }\n\n  canHandle(element: object): number {\n    if (element instanceof URI && DiffUris.isDiffUri(element)) {\n      return 20;\n    }\n    return 0;\n  }\n\n  getLongName(uri: URI): string {\n    const label = uri.path.toString();\n    if (label) {\n      return label;\n    }\n    const [left, right] = DiffUris.decode(uri);\n    const leftLongName = this.labelProvider.getLongName(left);\n    const rightLongName = this.labelProvider.getLongName(right);\n    if (leftLongName === rightLongName) {\n      return leftLongName;\n    }\n    return `${leftLongName} ⟷ ${rightLongName}`;\n  }\n\n  getName(uri: URI): string {\n    const label = uri.path.toString();\n    if (label) {\n      return label;\n    }\n    const [left, right] = DiffUris.decode(uri);\n\n    if (left.path.toString() === right.path.toString() && left.query && right.query) {\n      const prefix = left.displayName ? `${left.displayName}: ` : '';\n      return `${prefix}${left.query} ⟷ ${right.query}`;\n    } else {\n      let title;\n      if (uri.displayName && left.path.toString() !== right.path.toString() && left.displayName !== uri.displayName) {\n        title = `${uri.displayName}: `;\n      } else {\n        title = '';\n      }\n\n      const leftLongName = this.labelProvider.getName(left);\n      const rightLongName = this.labelProvider.getName(right);\n      if (leftLongName === rightLongName) {\n        return leftLongName;\n      }\n      return `${title}${leftLongName} ⟷ ${rightLongName}`;\n    }\n  }\n\n  getIcon(uri: URI): string {\n    return codicon('split-horizontal');\n  }\n\n  affects(diffUri: URI, event: DidChangeLabelEvent): boolean {\n    for (const uri of DiffUris.decode(diffUri)) {\n      if (event.affects(uri)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n}\n"]}
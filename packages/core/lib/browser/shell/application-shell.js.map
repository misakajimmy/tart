{"version":3,"sources":["browser/shell/application-shell.ts"],"names":[],"mappings":";;;;;;;;;;AAAA,OAAO,EAAC,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,aAAa,EAAC,MAAM,WAAW,CAAC;AACtE,OAAO,EACL,SAAS,EACT,QAAQ,EAGR,YAAY,EAEZ,KAAK,EACL,WAAW,EACX,UAAU,EACV,MAAM,EAEN,MAAM,EACP,MAAM,iBAAiB,CAAC;AACzB,OAAO,EAAC,cAAc,EAAE,YAAY,EAAE,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAC9E,OAAO,EAAC,UAAU,EAAE,oBAAoB,EAAE,OAAO,EAAyC,MAAM,cAAc,CAAC;AAC/G,OAAO,EAAC,SAAS,EAAoB,uBAAuB,EAAC,MAAM,sBAAsB,CAAC;AAC1F,OAAO,EAAC,kBAAkB,EAAkB,aAAa,EAAC,MAAM,eAAe,CAAC;AAChF,OAAO,EAAC,QAAQ,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAC,MAAM,mBAAmB,CAAC;AAChE,OAAO,EAAC,QAAQ,EAAE,cAAc,EAAc,MAAM,aAAa,CAAC;AAElE,OAAO,EAAC,aAAa,EAAE,eAAe,EAAC,MAAM,YAAY,CAAC;AAC1D,OAAO,EAAC,+BAA+B,EAAC,MAAM,+BAA+B,CAAC;AAC9E,OAAO,EAAC,oBAAoB,EAAuB,MAAM,gBAAgB,CAAC;AAC1E,OAAO,EAAC,cAAc,EAAC,MAAM,YAAY,CAAC;AAC1C,OAAO,EAAC,MAAM,EAAC,MAAM,mBAAmB,CAAC;AACzC,OAAO,EAAC,iBAAiB,EAAC,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAAC,gBAAgB,EAAC,MAAM,YAAY,CAAC;AAgB5C;;GAEG;AACH,MAAM,CAAC,MAAM,6BAA6B,GAAkC,GAAG,CAAC;AAEhF,0DAA0D;AAC1D,MAAM,uBAAuB,GAAG,uBAAuB,CAAC;AACxD,+DAA+D;AAC/D,MAAM,sBAAsB,GAAG,kBAAkB,CAAC;AAClD,sEAAsE;AACtE,MAAM,sBAAsB,GAAG,qBAAqB,CAAC;AACrD,mDAAmD;AACnD,MAAM,eAAe,GAAG,eAAe,CAAC;AACxC,qDAAqD;AACrD,MAAM,iBAAiB,GAAG,iBAAiB,CAAC;AAE5C,MAAM,CAAC,MAAM,uBAAuB,GAAG,MAAM,CAAC,yBAAyB,CAAC,CAAC;AACzE,MAAM,CAAC,MAAM,wBAAwB,GAAG,MAAM,CAAC,0BAA0B,CAAC,CAAC;AAG3E;;GAEG;AACH,gBAAgB;AAChB,mEAAmE;AACnE,EAAE;AACF,6CAA6C;AAC7C,EAAE;AACF,mBAAmB;AACnB,yGAAyG;AACzG,0GAA0G;AAC1G,sGAAsG;AACtG,yHAAyH;AACzH,YAAY;AACZ,EAAE;AACF,uCAAuC;AACvC,yDAAyD;AACzD,iDAAiD;AACjD,0CAA0C;AAC1C,yCAAyC;AACzC,+CAA+C;AAC/C,gBAAgB;AAChB,4BAA4B;AAC5B,wCAAwC;AACxC,0EAA0E;AAC1E,0CAA0C;AAC1C,0CAA0C;AAC1C,wCAAwC;AACxC,kBAAkB;AAClB,+DAA+D;AAC/D,oCAAoC;AACpC,6DAA6D;AAC7D,gEAAgE;AAChE,yEAAyE;AACzE,yBAAyB;AACzB,QAAQ;AACR,EAAE;AACF,uCAAuC;AACvC,2DAA2D;AAC3D,QAAQ;AACR,EAAE;AACF,8HAA8H;AAC9H,mCAAmC;AACnC,8CAA8C;AAC9C,YAAY;AACZ,QAAQ;AACR,IAAI;AAGJ,IAAa,gBAAgB,wBAA7B,MAAa,gBAAiB,SAAQ,MAAM;IAyEI;IAEkB;IACpB;IA3E5C;;OAEG;IACH,SAAS,CAAgB;IAEzB;;;OAGG;IACH,WAAW,CAAgB;IAE3B;;;OAGG;IACH,gBAAgB,CAAmB;IAEnC;;;OAGG;IACH,iBAAiB,CAAmB;IACpC;;OAEG;IACM,QAAQ,CAAQ;IACzB;;;;OAIG;IACM,cAAc,GAAG,IAAI,MAAM,CAA0C,IAAI,CAAC,CAAC;IACpF;;;;OAIG;IACM,aAAa,GAAG,IAAI,MAAM,CAA0C,IAAI,CAAC,CAAC;IACnF;;OAEG;IACO,OAAO,CAA2B;IAC5C;;OAEG;IACgB,gBAAgB,GAAoB;QACrD,KAAK,EAAE,IAAI;QACX,SAAS,EAAE,SAAS,CAAC,cAAc,CAAC,SAAS;QAC7C,aAAa,EAAE,OAAO,CAAC,OAAO,EAAE;KACjC,CAAC;IAEiB,iBAAiB,CAAoB;IACrC,qBAAqB,GAAG,IAAI,OAAO,EAAU,CAAC;IACxD,cAAc,GAAG,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC;IACxC,8BAA8B,GAAG,IAAI,OAAO,EAAqC,CAAC;IAC5F,uBAAuB,GAAG,IAAI,CAAC,8BAA8B,CAAC,KAAK,CAAC;IAE1D,+BAA+B,GAAG,IAAI,OAAO,EAAqC,CAAC;IAC7F,wBAAwB,GAAG,IAAI,CAAC,+BAA+B,CAAC,KAAK,CAAC;IAE5D,wBAAwB,GAAG,IAAI,OAAO,EAAU,CAAC;IAC3D,iBAAiB,GAAG,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC;IAC9C,wBAAwB,GAAG,IAAI,oBAAoB,EAAE,CAAC;IACxD,OAAO,GAAG,IAAI,YAAY,EAAU,CAAC;IACrC,iBAAiB,GAAG,IAAI,CAAC;IACzB,0BAA0B,GAAG,IAAI,oBAAoB,EAAE,CAAC;IAEzE;;OAEG;IACH;IACI,iGAAiG;IACvD,SAAwB,EACjC,uBAA+C,EACpB,uBAAwD,EAC5E,oBAA0C,EACrC,UAAsD,EAAE;QAEvG,KAAK,EAAE,CAAC;QANoC,cAAS,GAAT,SAAS,CAAe;QAEN,4BAAuB,GAAvB,uBAAuB,CAAiC;QAC5E,yBAAoB,GAApB,oBAAoB,CAAsB;QAIpF,IAAI,CAAC,QAAQ,CAAC,uBAAuB,CAAC,CAAC;QACvC,IAAI,CAAC,EAAE,GAAG,gBAAgB,CAAC;QAE3B,sEAAsE;QACtE,IAAI,CAAC,OAAO,GAAG;YACb,WAAW,EAAE;gBACX,GAAG,kBAAgB,CAAC,eAAe,CAAC,WAAW;gBAC/C,GAAG,OAAO,EAAE,WAAW,IAAI,EAAE;aAC9B;YACD,SAAS,EAAE;gBACT,GAAG,kBAAgB,CAAC,eAAe,CAAC,SAAS;gBAC7C,GAAG,OAAO,EAAE,SAAS;aACtB;YACD,UAAU,EAAE;gBACV,GAAG,kBAAgB,CAAC,eAAe,CAAC,UAAU;gBAC9C,GAAG,OAAO,EAAE,UAAU,IAAI,EAAE;aAC7B;SACF,CAAC;QAEF,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;QACtC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAE5C,IAAI,CAAC,gBAAgB,GAAG,uBAAuB,EAAE,CAAC;QAClD,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QAC7D,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;QAClG,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC;QAEvG,IAAI,CAAC,iBAAiB,GAAG,uBAAuB,EAAE,CAAC;QACnD,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;QAChE,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;QACnG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC;QAExG,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;QAClC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,CAAC;QACjE,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;IACjE,CAAC;IAED;;;OAGG;IACH,IAAI,eAAe;QACjB,OAAO,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED;;;OAGG;IACH,IAAI,iBAAiB;QACnB,OAAO,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;IAC7C,CAAC;IAED;;OAEG;IACH,IAAI,UAAU;QACZ,OAAO,CAAC,GAAG,IAAI,CAAC,eAAe,EAAE,GAAG,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC;IAC3H,CAAC;IAED;;OAEG;IACH,IAAI,cAAc;QAChB,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACzC,IAAI,aAAa,EAAE;YACjB,OAAO,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;SACvC;IACH,CAAC;IAED;;OAEG;IACH,IAAI,OAAO;QACT,OAAO,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACnC,CAAC;IAED;;OAEG;IACH,IAAI,cAAc;QAChB,OAAO,OAAO,CAAC,GAAG,CAAC;YACjB,IAAI,CAAC,gBAAgB,CAAC,aAAa;YACnC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,aAAa;YACzC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,aAAa;YAC1C,8DAA8D;SAC/D,CAAiB,CAAC;IACrB,CAAC;IAED;;;OAGG;IACH,IAAI,aAAa;QACf,OAAO,IAAI,CAAC,OAAO,CAAC,aAAa,IAAI,SAAS,CAAC;IACjD,CAAC;IAED;;OAEG;IACH,IAAI,aAAa;QACf,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;QACzC,IAAI,aAAa,EAAE;YACjB,OAAO,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,CAAC;SACzC;IACH,CAAC;IAED;;;;;;;OAOG;IACH,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,OAAO,CAAC,YAAY,IAAI,SAAS,CAAC;IAChD,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,IAAI,CAAC,OAAqB;QAC9B,MAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC;IACnD,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,IAA2B;QACpC,QAAQ,IAAI,EAAE;YACZ,KAAK,MAAM;gBACT,OAAO,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;YAC3C,KAAK,KAAK;gBACR,OAAO,OAAO,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;YACxC,KAAK,QAAQ;gBACX,OAAO,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;YAC7C,KAAK,MAAM;gBACT,OAAO,OAAO,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;YAC5D,KAAK,OAAO;gBACV,OAAO,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;YAC7D;gBACE,MAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,IAAI,CAAC,CAAC;SAChD;IACH,CAAC;IAED;;;;OAIG;IACH,oBAAoB,CAAC,OAAoB;QACvC,IAAI,UAAU,GAAuB,OAAO,CAAC;QAC7C,OAAO,UAAU,IAAI,CAAC,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC/D,UAAU,GAAG,UAAU,CAAC,aAAa,CAAC;SACvC;QACD,IAAI,UAAU,EAAE;YACd,OAAO,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,IAAI,CAAC,CAAC;SACjD;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;;OAIG;IACH,SAAS,CAAC,MAAsB,EAAE,KAAa;QAC7C,IAAI,KAAK,EAAE,MAAM,YAAY,WAAW,EAAE;YACxC,IAAI,OAAO,GAAuB,KAAK,CAAC,MAAM,CAAC;YAC/C,OAAO,OAAO,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;gBAC7D,OAAO,GAAG,OAAO,CAAC,aAAa,CAAC;aACjC;YACD,IAAI,OAAO,IAAI,OAAO,CAAC,KAAK,EAAE;gBAC5B,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,OAAO,KAAK,OAAQ,CAAC,KAAK,CAAC,CAAC;gBAClE,IAAI,KAAK,EAAE;oBACT,OAAO,KAAK,CAAC;iBACd;gBACD,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,OAAQ,CAAC,KAAK,CAAC,CAAC;gBAC5D,IAAI,KAAK,EAAE;oBACT,OAAO,KAAK,CAAC;iBACd;aACF;SACF;QACD,OAAO,MAAM,CAAC,YAAY,IAAI,SAAS,CAAC;IAC1C,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,KAAa;QACtB,IAAI,KAAK,EAAE,MAAM,YAAY,WAAW,EAAE;YACxC,MAAM,MAAM,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YACvD,IAAI,MAAM,YAAY,MAAM,EAAE;gBAC5B,OAAO,MAAM,CAAC;aACf;SACF;QACD,OAAO,IAAI,CAAC,aAAa,CAAC;IAC5B,CAAC;IAED;;OAEG;IACH,kBAAkB,CAAC,KAAa;QAC9B,IAAI,KAAK,EAAE;YACT,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;YACnC,MAAM,KAAK,GAAG,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;YAChD,OAAO,KAAK,IAAI,KAAK,CAAC,KAAK,CAAC;SAC7B;IACH,CAAC;IAED;;;;;;;OAOG;IACH,KAAK,CAAC,SAAS,CAAC,MAAc,EAAE,UAAoD,EAAE;QACpF,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE;YACd,OAAO,CAAC,KAAK,CAAC,wEAAwE,CAAC,CAAC;YACxF,OAAO;SACR;QACD,IAAI,GAAG,GAAuB,OAAO,CAAC,GAAG,CAAC;QAC1C,IAAI,IAAI,GAA0B,OAAO,CAAC,IAAI,IAAI,MAAM,CAAC;QACzD,IAAI,CAAC,GAAG,IAAI,CAAC,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,QAAQ,CAAC,EAAE;YAClD,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;YACvC,GAAG,GAAG,MAAM,IAAI,MAAM,CAAC,YAAY,IAAI,MAAM,CAAC,YAAY,CAAC,KAAK,IAAI,SAAS,CAAC;SAC/E;QACD,qCAAqC;QACrC,IAAI,GAAG,GAAG,IAAI,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,IAAI,CAAC;QAC3C,MAAM,UAAU,GAA0B,EAAE,CAAC;QAC7C,IAAI,kBAAgB,CAAC,gBAAgB,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;YACnD,MAAM,SAAS,GAAG,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC;YACtG,MAAM,OAAO,GAAG,SAAS,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC;gBAClE,SAAS,CAAC,oBAAoB,CAAC,GAAG,CAAC,CAAC,CAAC;gBACrC,SAAS,CAAC,gBAAgB,CAAC,GAAG,CAAC,CAAC,CAAC;YACrC,IAAI,OAAO,EAAE;gBACX,UAAU,CAAC,GAAG,GAAG,OAAO,CAAC;aAC1B;iBAAM;gBACL,UAAU,CAAC,GAAG,GAAG,GAAG,CAAC;gBACrB,UAAU,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,KAAK,cAAc,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC,aAAa,CAAC;aAClF;SACF;aAAM;YACL,UAAU,CAAC,GAAG,GAAG,GAAG,CAAC;YACrB,UAAU,CAAC,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC;SAChC;QACD,MAAM,gBAAgB,GAA4B,EAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAC,CAAC;QACvE,QAAQ,IAAI,EAAE;YACZ,KAAK,MAAM;gBACT,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;gBAC7C,MAAM;YACR,KAAK,KAAK;gBACR,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;gBAChC,MAAM;YACR,KAAK,QAAQ;gBACX,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,MAAM,EAAE,UAAU,CAAC,CAAC;gBAC/C,MAAM;YACR,KAAK,MAAM;gBACT,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;gBAC1D,MAAM;YACR,KAAK,OAAO;gBACV,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;gBAC3D,MAAM;YACR;gBACE,MAAM,IAAI,KAAK,CAAC,mBAAmB,GAAG,OAAO,CAAC,IAAI,CAAC,CAAC;SACvD;QACD,IAAI,IAAI,KAAK,KAAK,EAAE;YAClB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SACpB;IACH,CAAC;IAED;;OAEG;IACH,YAAY,CAAC,YAA4C;QACvD,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;YACpC,QAAQ,YAAY,EAAE;gBACpB,KAAK,MAAM;oBACT,OAAO,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC;gBACtC,KAAK,QAAQ;oBACX,OAAO,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC;gBACxC,KAAK,MAAM;oBACT,OAAO,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;gBACtC,KAAK,OAAO;oBACV,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;gBACvC;oBACE,MAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,YAAY,CAAC,CAAC;aACxD;SACF;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;QAC1D,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,SAAS,CAAC;SAClB;QACD,MAAM,WAAW,GAAG,MAAM,CAAC,KAAK,CAAC;QACjC,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QAC/D,IAAI,eAAe,EAAE;YACnB,OAAO,eAAe,CAAC;SACxB;QACD,MAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;QACnE,IAAI,iBAAiB,EAAE;YACrB,OAAO,iBAAiB,CAAC;SAC1B;QACD,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC;QACrD,IAAI,QAAQ,CAAC,YAAY,CAAC,eAAe,CAAC,MAAM,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE;YACnE,OAAO,eAAe,CAAC;SACxB;QACD,MAAM,gBAAgB,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;QACvD,IAAI,QAAQ,CAAC,YAAY,CAAC,gBAAgB,CAAC,MAAM,EAAE,WAAW,CAAC,GAAG,CAAC,CAAC,EAAE;YACpE,OAAO,gBAAgB,CAAC;SACzB;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;OAGG;IACH,UAAU,CAAC,KAA8B;QACvC,IAAI,KAAK,YAAY,MAAM,EAAE;YAC3B,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE;gBACtD,OAAO,MAAM,CAAC;aACf;YACD,IAAI,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,EAAE,KAAK,KAAK,CAAC,EAAE;gBACxD,OAAO,QAAQ,CAAC;aACjB;YACD,IAAI,IAAI,CAAC,gBAAgB,CAAC,MAAM,KAAK,KAAK,EAAE;gBAC1C,OAAO,MAAM,CAAC;aACf;YACD,IAAI,IAAI,CAAC,iBAAiB,CAAC,MAAM,KAAK,KAAK,EAAE;gBAC3C,OAAO,OAAO,CAAC;aAChB;SACF;QACD,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;QACnD,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,SAAS,CAAC;SAClB;QACD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC3B,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACzD,IAAI,eAAe,EAAE;YACnB,OAAO,MAAM,CAAC;SACf;QACD,MAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7D,IAAI,iBAAiB,EAAE;YACrB,OAAO,QAAQ,CAAC;SACjB;QACD,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;YAC1E,OAAO,MAAM,CAAC;SACf;QACD,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;YAC3E,OAAO,OAAO,CAAC;SAChB;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;OAGG;IACH,aAAa;QACX,OAAO;YACL,OAAO,EAAE,6BAA6B;YACtC,SAAS,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,EAAE;YACtC,WAAW,EAAE;gBACX,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,EAAE;gBACrC,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,CAAC,kBAAkB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa;gBAClG,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;aACpC;YACD,SAAS,EAAE,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE;YAChD,UAAU,EAAE,IAAI,CAAC,iBAAiB,CAAC,aAAa,EAAE;YAClD,cAAc,EAAE,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC,CAAC,SAAS;SACrE,CAAC;IACJ,CAAC;IAED;;;OAGG;IACH,aAAa,CAAC,IAA2B;QACvC,QAAQ,IAAI,EAAE;YACZ,KAAK,QAAQ;gBACX,OAAO,IAAI,CAAC,mBAAmB,EAAE,CAAC;YACpC,KAAK,MAAM;gBACT,OAAO,IAAI,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC;YAC1C,KAAK,OAAO;gBACV,OAAO,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,CAAC;YAC3C;gBACE,MAAM,IAAI,KAAK,CAAC,4BAA4B,GAAG,IAAI,CAAC,CAAC;SACxD;IACH,CAAC;IAED;;;;;OAKG;IACH,KAAK,CAAC,YAAY,CAAC,EAAU;QAC3B,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QAC1B,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YAC/C,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,OAAO,IAAI,KAAK,CAAC,MAAM,EAAE;YAC9B,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;YAC3B,IAAI,kBAAgB,CAAC,uBAAuB,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,YAAY,EAAE;gBAChF,OAAO,GAAG,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC1C;iBAAM;gBACL,OAAO,GAAG,KAAK,CAAC;aACjB;SACF;QACD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,SAAS,CAAC;SAClB;QACD,MAAM,OAAO,CAAC,GAAG,CAAC;YAChB,eAAe,CAAC,OAAO,CAAC;YACxB,IAAI,CAAC,cAAc;SACpB,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;IAED;;;;;OAKG;IACH,WAAW,CAAC,IAA2B;QACrC,QAAQ,IAAI,EAAE;YACZ,KAAK,QAAQ;gBACX,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBACzB,MAAM;YACR,KAAK,MAAM;gBACT,IAAI,CAAC,gBAAgB,CAAC,MAAM,EAAE,CAAC;gBAC/B,MAAM;YACR,KAAK,OAAO;gBACV,IAAI,CAAC,iBAAiB,CAAC,MAAM,EAAE,CAAC;gBAChC,MAAM;YACR;gBACE,MAAM,IAAI,KAAK,CAAC,2BAA2B,GAAG,IAAI,CAAC,CAAC;SACvD;IACH,CAAC;IAED;;;;;OAKG;IACH,MAAM,CAAC,IAAY,EAAE,IAA2B;QAC9C,QAAQ,IAAI,EAAE;YACZ,KAAK,QAAQ;gBACX,IAAI,IAAI,CAAC,WAAW,CAAC,QAAQ,EAAE;oBAC7B,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC;iBAC5C;qBAAM;oBACL,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC;iBAC/B;gBACD,MAAM;YACR,KAAK,MAAM;gBACT,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACnC,MAAM;YACR,KAAK,OAAO;gBACV,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;gBACpC,MAAM;YACR;gBACE,MAAM,IAAI,KAAK,CAAC,0BAA0B,GAAG,IAAI,CAAC,CAAC;SACtD;IACH,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,aAAa,CAAC,UAAuC;QACzD,MAAM,EAAC,SAAS,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAC,GAAG,UAAU,CAAC;QACnF,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YAC/C,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,CAAC;SAC1C;QACD,IAAI,UAAU,EAAE;YACd,IAAI,CAAC,iBAAiB,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;YACjD,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAC;SAC3C;QACD,gEAAgE;QAChE,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,aAAa,EAAE,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC,CAAC;QAC3G,IAAI,WAAW,EAAE;YACf,IAAI,WAAW,CAAC,MAAM,EAAE;gBACtB,IAAI,CAAC,WAAW,CAAC,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;gBACnD,IAAI,CAAC,wBAAwB,CAAC,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;aACxD;YACD,IAAI,WAAW,CAAC,IAAI,EAAE;gBACpB,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,WAAW,CAAC,IAAI,CAAC;aACxD;YACD,IAAI,WAAW,CAAC,QAAQ,EAAE;gBACxB,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;iBAAM;gBACL,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC5B;YACD,IAAI,CAAC,8BAA8B,EAAE,CAAC;SACvC;QACD,yDAAyD;QACzD,MAAM,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;QAC1C,IAAI,SAAS,EAAE;YACb,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;YACxC,IAAI,CAAC,wBAAwB,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;SAC/C;QACD,IAAI,cAAc,EAAE;YAClB,IAAI,CAAC,cAAc,CAAC,cAAc,CAAC,CAAC;SACrC;IACH,CAAC;IAED;;;;;;;;;OASG;IACH,KAAK,CAAC,cAAc,CAAC,EAAU;QAC7B,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACtC,IAAI,OAAO,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QAC1B,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;YACjD,OAAO,SAAS,CAAC;SAClB;QACD,OAAO,OAAO,IAAI,KAAK,CAAC,MAAM,EAAE;YAC9B,MAAM,KAAK,GAAG,KAAK,CAAC,GAAG,EAAG,CAAC;YAC3B,IAAI,kBAAgB,CAAC,uBAAuB,CAAC,EAAE,CAAC,OAAO,CAAC,IAAI,OAAO,CAAC,cAAc,EAAE;gBAClF,OAAO,GAAG,OAAO,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC5C;iBAAM;gBACL,KAAK,CAAC,QAAQ,EAAE,CAAC;gBACjB,OAAO,GAAG,KAAK,CAAC;aACjB;SACF;QACD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,SAAS,CAAC;SAClB;QACD,MAAM,OAAO,CAAC,GAAG,CAAC;YAChB,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC;YAClC,eAAe,CAAC,OAAO,CAAC;YACxB,IAAI,CAAC,cAAc;SACpB,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,WAAW,CAAC,EAAU,EAAE,OAAuC;QACnE,mFAAmF;QACnF,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;QACtC,MAAM,OAAO,GAAG,KAAK,CAAC,GAAG,EAAE,CAAC;QAC5B,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,SAAS,CAAC;SAClB;QACD,IAAI,YAAY,CAAC;QACjB,IAAI,cAAc,CAAC,EAAE,CAAC,OAAO,CAAC,EAAE;YAC9B,IAAI,UAAU,CAAC;YACf,IAAI,OAAO,IAAI,MAAM,IAAI,OAAO,EAAE;gBAChC,UAAU,GAAG,GAAG,EAAE,CAAC,OAAO,CAAC,IAAI,CAAC;aACjC;YACD,YAAY,GAAG,OAAO,CAAC,eAAe,CAAC,EAAC,UAAU,EAAC,CAAC,CAAC;SACtD;aAAM;YACL,OAAO,CAAC,KAAK,EAAE,CAAC;YAChB,YAAY,GAAG,aAAa,CAAC,OAAO,CAAC,CAAC;SACvC;QACD,MAAM,OAAO,CAAC,GAAG,CAAC;YAChB,YAAY;YACZ,IAAI,CAAC,cAAc;SACpB,CAAC,CAAC;QACH,OAAO,KAAK,CAAC,CAAC,CAAC,IAAI,OAAO,CAAC;IAC7B,CAAC;IAED;;OAEG;IACH,KAAK,CAAC,OAAO,CAAC,OAAqB;QACjC,MAAM,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE;YAClD,IAAI,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,EAAE;gBAC5B,QAAQ,CAAC,IAAI,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;aAChC;QACH,CAAC,CAAC,CAAC,CAAC;IACN,CAAC;IAED,aAAa,CAAC,EAAU;QACtB,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACzC,IAAI,MAAM,CAAC,EAAE,KAAK,EAAE,EAAE;gBACpB,OAAO,MAAM,CAAC;aACf;SACF;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,kBAAkB;QAChB,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QACvE,OAAO,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,QAAQ,CAAC;IAC9C,CAAC;IAED,eAAe;QACb,MAAM,IAAI,GAAG,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAC5E,IAAI,IAAI,YAAY,aAAa,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,SAAS,IAAI,IAAI,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE;YAC3F,IAAI,CAAC,eAAe,EAAE,CAAC;SACxB;IACH,CAAC;IAED,iBAAiB,CAAC,EAAU;QAC1B,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,EAAE;YACpD,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;QACD,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,EAAE;YAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,EAAE;gBAClD,IAAI,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,KAAK,EAAE,EAAE;oBACpD,SAAS,CAAC,OAAO,EAAE,CAAC;oBACpB,OAAO,EAAE,CAAC;iBACX;YACH,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;QACnC,IAAI,OAAO,EAAE;YACX,MAAM,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC;YAChC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE;gBACb,IAAI,EAAE,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAClC,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC;oBAC1B,IAAI,OAAO,CAAC,YAAY,EAAE;wBACxB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;qBACpD;oBACD,OAAO,IAAI,CAAC;iBACb;qBAAM,IAAI,EAAE,KAAK,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC3C,OAAO,IAAI,CAAC,kBAAkB,CAAC,OAAO,CAAC,CAAC;iBACzC;aACF;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,kBAAkB,CAAC,UAAsC,IAAI,CAAC,aAAa;QACzE,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QACzC,IAAI,OAAO,EAAE;YACX,OAAO,CAAC,YAAY,GAAG,CAAC,CAAC;YACzB,IAAI,OAAO,CAAC,YAAY,EAAE;gBACxB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aACpD;YACD,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED,mBAAmB;QACjB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC;QACnC,IAAI,OAAO,EAAE;YACX,MAAM,EAAE,GAAG,OAAO,CAAC,YAAY,CAAC;YAChC,IAAI,EAAE,KAAK,CAAC,CAAC,EAAE;gBACb,IAAI,EAAE,GAAG,CAAC,EAAE;oBACV,OAAO,CAAC,YAAY,IAAI,CAAC,CAAC;oBAC1B,IAAI,OAAO,CAAC,YAAY,EAAE;wBACxB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;qBACpD;oBACD,OAAO,IAAI,CAAC;iBACb;qBAAM,IAAI,EAAE,KAAK,CAAC,EAAE;oBACnB,OAAO,IAAI,CAAC,sBAAsB,CAAC,OAAO,CAAC,CAAC;iBAC7C;aACF;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,UAAsC,IAAI,CAAC,aAAa;QACjE,IAAI,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,CAAC,CAAC;QAC/C,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;QACtB,IAAI,EAAE,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAC9C,IAAI,EAAE,GAAG,CAAC,EAAE;YACV,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;YACzC,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;YAClB,EAAE,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;SAC3C;QACD,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE;YAC3B,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;SACrB;aAAM,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,KAAK,GAAG,GAAG,CAAC,EAAE;YACpC,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;SAChB;aAAM;YACL,OAAO,OAAO,CAAC;SAChB;IACH,CAAC;IAED;;IAEA;IACA,2BAA2B,CAAC,UAAsC,IAAI,CAAC,aAAa;QAClF,MAAM,KAAK,GAAG,IAAI,CAAC,wBAAwB,CAAC,OAAO,CAAC,CAAC;QACrD,IAAI,CAAC,OAAO,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAC5B,OAAO,KAAK,CAAC;SACd;QACD,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC;QAC7B,IAAI,OAAO,CAAC,YAAY,EAAE;YACxB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SACpD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,wBAAwB,CAAC,UAAsC,IAAI,CAAC,aAAa;QAC/E,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;YAC1C,OAAO,CAAC,CAAC,CAAC;SACX;QACD,MAAM,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC;QACnC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,OAAO,CAAC,CAAC,CAAC;SACX;QACD,IAAI,KAAK,GAAG,CAAC,EAAE;YACb,OAAO,KAAK,GAAG,CAAC,CAAC;SAClB;QACD,OAAO,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;IACnC,CAAC;IAED,sBAAsB,CAAC,UAAsC,IAAI,CAAC,aAAa;QAC7E,MAAM,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;QAC7C,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,KAAK,CAAC;SACd;QACD,MAAM,GAAG,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC;QAClC,OAAO,CAAC,YAAY,GAAG,GAAG,GAAG,CAAC,CAAC;QAC/B,IAAI,OAAO,CAAC,YAAY,EAAE;YACxB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SACpD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED;;OAEG;IACH,cAAc,CAAC,UAAsC,IAAI,CAAC,aAAa;QACrE,MAAM,IAAI,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC,CAAC;QAC/C,MAAM,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;QACxB,MAAM,EAAE,GAAG,QAAQ,CAAC,YAAY,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;QAChD,IAAI,EAAE,GAAG,CAAC,EAAE;YACV,OAAO,IAAI,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;SACrB;aAAM,IAAI,EAAE,KAAK,CAAC,EAAE;YACnB,OAAO,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;SACtB;aAAM;YACL,OAAO,OAAO,CAAC;SAChB;IACH,CAAC;IAED;;OAEG;IACH,uBAAuB,CAAC,UAAsC,IAAI,CAAC,aAAa;QAC9E,MAAM,KAAK,GAAG,IAAI,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC;QACjD,IAAI,CAAC,OAAO,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAC5B,OAAO,KAAK,CAAC;SACd;QACD,OAAO,CAAC,YAAY,GAAG,KAAK,CAAC;QAC7B,IAAI,OAAO,CAAC,YAAY,EAAE;YACxB,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SACpD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,oBAAoB,CAAC,UAAsC,IAAI,CAAC,aAAa;QAC3E,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,CAAC,EAAE;YAC1C,OAAO,CAAC,CAAC,CAAC;SACX;QACD,MAAM,KAAK,GAAG,OAAO,CAAC,YAAY,CAAC;QACnC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;YAChB,OAAO,CAAC,CAAC,CAAC;SACX;QACD,IAAI,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACrC,OAAO,KAAK,GAAG,CAAC,CAAC;SAClB;QACD,OAAO,CAAC,CAAC;IACX,CAAC;IAED;;OAEG;IACH,UAAU,CAAC,IAA2B;QACpC,QAAQ,IAAI,EAAE;YACZ,KAAK,QAAQ;gBACX,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,KAAK,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;YAC/E,KAAK,MAAM;gBACT,OAAO,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,SAAS,KAAK,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;YACrF,KAAK,OAAO;gBACV,OAAO,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,SAAS,KAAK,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;YACtF;gBACE,OAAO,IAAI,CAAC;SACf;IACH,CAAC;IAED;;;;;;;OAOG;IACH,SAAS,CAAC,YAAoD,EACpD,MAAyD;QACjE,IAAI,YAAY,KAAK,MAAM,EAAE;YAC3B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;SAChE;aAAM,IAAI,YAAY,KAAK,QAAQ,EAAE;YACpC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,SAAS,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;SAClE;aAAM,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;YAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAC/C,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;aAChC;SACF;aAAM,IAAI,YAAY,EAAE;YACvB,MAAM,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;oBAChD,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;iBACzB;aACF;SACF;IACH,CAAC;IAED,QAAQ,CAAC,YAAoD,EACpD,MAAyD;QAChE,IAAI,YAAY,KAAK,MAAM,EAAE;YAC3B,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;SAC/D;aAAM,IAAI,YAAY,KAAK,QAAQ,EAAE;YACpC,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC,CAAC;SACjE;aAAM,IAAI,OAAO,YAAY,KAAK,QAAQ,EAAE;YAC3C,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,CAAC;YAC/C,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;aAC/B;SACF;aAAM,IAAI,YAAY,EAAE;YACvB,MAAM,MAAM,GAAG,OAAO,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YAC5C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,MAAM,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;gBACtC,IAAI,MAAM,KAAK,SAAS,IAAI,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,EAAE;oBAChD,MAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;oBAC/B,MAAM,QAAQ,GAAG,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;oBACtC,QAAQ,EAAE,IAAI,EAAE,CAAC;iBAClB;aACF;SACF;IACH,CAAC;IAED;;OAEG;IACH,gBAAgB,CAAC,IAA2B;QAC1C,IAAI,KAAuC,CAAC;QAC5C,QAAQ,IAAI,EAAE;YACZ,KAAK,MAAM;gBACT,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;gBACpC,MAAM;YACR,KAAK,QAAQ;gBACX,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC;gBACtC,MAAM;YACR,KAAK,MAAM;gBACT,KAAK,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,YAAY,CAAC;gBAClD,MAAM;YACR,KAAK,OAAO;gBACV,KAAK,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,YAAY,CAAC;gBACnD,MAAM;YACR;gBACE,MAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,IAAI,CAAC,CAAC;SAChD;QACD,OAAO,KAAK,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,SAAS,CAAC;IACzC,CAAC;IAES,gBAAgB,CAAC,MAAc;QACvC,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC1C,CAAC;IAES,mBAAmB,CAAC,MAAc;QAC1C,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IAC7C,CAAC;IAGS,IAAI;QACZ,uCAAuC;QACvC,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC5B,IAAI,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;IAED;;OAEG;IACO,eAAe;QACvB,oDAAoD;QACpD,uDAAuD;QACvD,gDAAgD;QAChD,MAAM,SAAS,GAAG,IAAI,aAAa,CAAC;YAClC,IAAI,EAAE,mBAAmB;YACzB,OAAO,EAAE,CAAC;SACX,CAAC,CAAC;QACH,SAAS,CAAC,EAAE,GAAG,YAAY,CAAC;QAC5B,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;OAEG;IACO,iBAAiB;QACzB,MAAM,SAAS,GAAG,IAAI,aAAa,CAAC;YAClC,IAAI,EAAE,mBAAmB;YACzB,OAAO,EAAE,CAAC;SACX,CAAC,CAAC;QACH,SAAS,CAAC,EAAE,GAAG,cAAc,CAAC;QAC9B,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;YAC/C,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;YACjD,IAAI,MAAM,CAAC,OAAO,EAAE;gBAClB,IAAI,CAAC,mBAAmB,EAAE,CAAC;aAC5B;YACD,IAAI,CAAC,8BAA8B,EAAE,CAAC;QACxC,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE,KAAK,CAAC,EAAE;YACrD,oFAAoF;YACpF,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjC,CAAC,CAAC,CAAC;QACH,SAAS,CAAC,IAAI,EAAE,CAAC;QACjB,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC;QAC5E,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,MAAM,EAAE,EAAE,CAAC,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,CAAC,CAAC;QACjF,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;OAEG;IACO,cAAc;QACtB,MAAM,QAAQ,GAAG,IAAI,KAAK,EAAE,CAAC;QAC7B,QAAQ,CAAC,EAAE,GAAG,gBAAgB,CAAC;QAC/B,QAAQ,CAAC,IAAI,EAAE,CAAC;QAChB,OAAO,QAAQ,CAAC;IAClB,CAAC;IAED;;OAEG;IACO,eAAe,CAAC,OAAiB,EAAE,OAAkB,EAAE,OAA2B;QAC1F,MAAM,SAAS,GAAG,IAAI,SAAS,CAAC,OAAO,CAAC,CAAC;QACzC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,OAAO,KAAK,SAAS,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE;gBAC/C,QAAQ,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7C;YACD,SAAS,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SACjC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;OAEG;IACO,iBAAiB,CAAC,OAAiB,EAAE,OAAkB,EAAE,OAAuC;QACxG,IAAI,QAAQ,GAAyB,EAAC,QAAQ,EAAE,UAAU,CAAC,eAAe,GAAE,CAAC;QAC7E,IAAI,OAAO,EAAE;YACX,QAAQ,GAAG,EAAC,GAAG,QAAQ,EAAE,GAAG,OAAO,EAAC,CAAC;SACtC;QACD,MAAM,WAAW,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC;QAC9C,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YACvC,IAAI,OAAO,KAAK,SAAS,IAAI,CAAC,GAAG,OAAO,CAAC,MAAM,EAAE;gBAC/C,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;aAC/C;YACD,WAAW,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;SACnC;QACD,OAAO,WAAW,CAAC;IACrB,CAAC;IAED;;OAEG;IACO,KAAK,CAAC,MAAc;QAC5B,IAAI,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;YAC/C,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QACzB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC7B,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;QACvB,IAAI,kBAAgB,CAAC,uBAAuB,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE;YACvD,KAAK,MAAM,OAAO,IAAI,MAAM,CAAC,mBAAmB,EAAE,EAAE;gBAClD,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;aACrB;YACD,IAAI,MAAM,CAAC,2BAA2B,EAAE;gBACtC,MAAM,CAAC,2BAA2B,CAAC,OAAO,CAAC,EAAE,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;aACpF;SACF;IACH,CAAC;IAES,oBAAoB;QAC5B,MAAM,YAAY,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QAC7E,MAAM,UAAU,GAAG,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QACzE,MAAM,sBAAsB,GAAG,GAAG,EAAE;YAClC,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACrE,YAAY,CAAC,GAAG,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC;YAClC,UAAU,CAAC,GAAG,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC;QAClC,CAAC,CAAC;QACF,sBAAsB,EAAE,CAAC;QACzB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC;IACrD,CAAC;IAES,cAAc,CAAC,EAAU;QACjC,MAAM,OAAO,GAAG,IAAI,GAAG,CAAiB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAqB,CAAC,CAAC,CAAC;QACtG,IAAI,OAAO,GAAG,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;QAC9B,MAAM,KAAK,GAAa,EAAE,CAAC;QAC3B,OAAO,OAAO,EAAE;YACd,IAAI,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE;gBAC3B,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;aACrB;YACD,OAAO,GAAG,OAAO,CAAC,MAAM,IAAI,SAAS,CAAC;SACvC;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAES,qBAAqB,CAAC,UAAkB;QAChD,MAAM,iBAAiB,GAAG,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,iBAAiB,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC;IAClE,CAAC;IAED;;OAEG;IACO,wBAAwB,CAAC,IAA2F;QAC5H,IAAI,IAAI,EAAE;YACR,IAAI,IAAI,CAAC,IAAI,KAAK,UAAU,EAAE;gBAC5B,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,OAAO,EAAE;oBACjC,IAAI,MAAM,EAAE;wBACV,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;qBACpB;iBACF;aACF;iBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,YAAY,EAAE;gBACrC,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE;oBACjC,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;iBACtC;aACF;iBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,WAAW,IAAI,IAAI,CAAC,KAAK,EAAE;gBAClD,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;oBAC7B,IAAI,IAAI,CAAC,MAAM,EAAE;wBACf,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;qBACzB;iBACF;aACF;SACF;IACH,CAAC;IAED;;OAEG;IACO,iBAAiB;QACzB,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,WAAW,CAAC,QAAQ,EAAE;YACxB,IAAI,aAAmC,CAAC;YACxC,MAAM,MAAM,GAAG,WAAW,CAAC,MAAM,CAAC;YAClC,IAAI,MAAM,YAAY,UAAU,EAAE;gBAChC,aAAa,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;aACxC;YACD,WAAW,CAAC,IAAI,EAAE,CAAC;YACnB,IAAI,aAAa,IAAI,MAAM,YAAY,UAAU,EAAE;gBACjD,8EAA8E;gBAC9E,MAAM,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;aACxC;YAED,IAAI,IAAwB,CAAC;YAC7B,IAAI,WAAW,CAAC,OAAO,EAAE;gBACvB,WAAW,CAAC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,CAAC;gBACvC,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS,CAAC;aAC3C;iBAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE;gBAC9C,IAAI,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC;aAC5C;iBAAM;gBACL,IAAI,GAAG,IAAI,CAAC,yBAAyB,EAAE,CAAC;aACzC;YACD,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC;gBACrE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBACtC,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,KAAK,SAAS,CAAC,cAAc,CAAC,SAAS,EAAE;wBAC1E,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;qBACrE;gBACH,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;aACrE;SACF;IACH,CAAC;IAED;;OAEG;IACO,yBAAyB;QACjC,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;YAC9B,OAAO,MAAM,CAAC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,gBAAgB,CAAC;SAC7E;IACH,CAAC;IAED;;;OAGG;IACO,kBAAkB,CAAC,IAAY;QACvC,MAAM,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,KAAK,OAAO,CAAC;QACvE,MAAM,OAAO,GAAyB;YACpC,IAAI,EAAE,QAAQ;YACd,QAAQ,EAAE,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YACvE,eAAe,EAAE,IAAI,CAAC,WAAW;SAClC,CAAC;QACF,MAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC5F,MAAM,MAAM,GAAG,IAAI,OAAO,CAAO,OAAO,CAAC,EAAE;YACzC,2FAA2F;YAC3F,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;QAC7F,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;OAEG;IACO,cAAc,CAAC,EAAU;QACjC,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAC9D,IAAI,CAAC,MAAM,EAAE;YACX,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YAC5D,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,iBAAiB,EAAE,CAAC;aAC1B;SACF;QACD,IAAI,MAAM,EAAE;YACV,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,CAAC,CAAC;YACzC,IAAI,MAAM,EAAE;gBACV,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC;aACpC;YACD,OAAO,MAAM,CAAC;SACf;QACD,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC1C,IAAI,MAAM,EAAE;YACV,OAAO,MAAM,CAAC;SACf;QACD,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IAC3C,CAAC;IAED;;;OAGG;IACO,mBAAmB;QAC3B,MAAM,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC;QACrC,IAAI,WAAW,CAAC,QAAQ,EAAE;YACxB,OAAO,OAAO,CAAC,OAAO,EAAE,CAAC;SAC1B;QACD,IAAI,IAAI,CAAC,gBAAgB,CAAC,SAAS,KAAK,SAAS,CAAC,cAAc,CAAC,QAAQ,EAAE;YACzE,MAAM,IAAI,GAAG,IAAI,CAAC,kBAAkB,EAAE,CAAC;YACvC,IAAI,IAAI,EAAE;gBACR,IAAI,CAAC,gBAAgB,CAAC,aAAa,GAAG,IAAI,CAAC;aAC5C;SACF;QACD,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC;QACrE,WAAW,CAAC,IAAI,EAAE,CAAC;QACnB,OAAO,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACO,8BAA8B;QACtC,IAAI,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE;YAC5B,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,sBAAsB,CAAC,CAAC;SACtD;aAAM;YACL,MAAM,OAAO,GAAmB;gBAC9B,IAAI,EAAE,mBAAmB;gBACzB,SAAS,EAAE,kBAAkB,CAAC,KAAK;gBACnC,OAAO,EAAE,qBAAqB;gBAC9B,OAAO,EAAE,0BAA0B;gBACnC,QAAQ,EAAE,CAAC,IAAI;aAChB,CAAC;YACF,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,sBAAsB,EAAE,OAAO,CAAC,CAAC;SAC5D;IACH,CAAC;IAED;;OAEG;IACO,gBAAgB,CAAC,EAAU;QACnC,IAAI,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAC9D,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,SAAS,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YACtC,OAAO,MAAM,CAAC;SACf;QACD,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;QAC5D,IAAI,MAAM,EAAE;YACV,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;YACxC,OAAO,MAAM,CAAC;SACf;QACD,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC5C,IAAI,MAAM,EAAE;YACV,OAAO,MAAM,CAAC;SACf;QACD,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QAC7C,IAAI,MAAM,EAAE;YACV,OAAO,MAAM,CAAC;SACf;IACH,CAAC;IAES,eAAe,CAAC,KAAa;QACrC,MAAM,MAAM,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,CAAC;QACnD,IAAI,CAAC,MAAM,EAAE;YACX,OAAO,SAAS,CAAC;SAClB;QACD,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;QAC3B,MAAM,eAAe,GAAG,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QACzD,IAAI,eAAe,EAAE;YACnB,OAAO,IAAI,CAAC,SAAS,CAAC;SACvB;QACD,MAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;QAC7D,IAAI,iBAAiB,EAAE;YACrB,OAAO,IAAI,CAAC,WAAW,CAAC;SACzB;QACD,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;YAC1E,OAAO,IAAI,CAAC,gBAAgB,CAAC,SAAS,CAAC;SACxC;QACD,IAAI,QAAQ,CAAC,YAAY,CAAC,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;YAC3E,OAAO,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC;SACzC;QACD,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;OAGG;IACO,kBAAkB;QAC1B,MAAM,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC;QACvC,IAAI,MAAM,YAAY,UAAU,IAAI,MAAM,CAAC,SAAS,EAAE;YACpD,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC;YAC3D,IAAI,KAAK,IAAI,CAAC,EAAE;gBACd,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACrC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;oBAC9C,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,YAAY,CAAC;oBAC9C,OAAO,YAAY,GAAG,MAAM,CAAC,SAAS,CAAC;iBACxC;aACF;SACF;IACH,CAAC;IAED;;;OAGG;IACO,YAAY;QACpB,MAAM,iBAAiB,GAAG,IAAI,CAAC,iBAAiB,CAC5C,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,WAAW,CAAC,EAClC,CAAC,CAAC,EAAE,CAAC,CAAC,EACN,EAAC,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,CAAC,EAAC,CACxC,CAAC;QACF,MAAM,kBAAkB,GAAG,IAAI,UAAU,CAAC,EAAC,MAAM,EAAE,iBAAiB,EAAC,CAAC,CAAC;QACvE,kBAAkB,CAAC,EAAE,GAAG,yBAAyB,CAAC;QAElD,MAAM,oBAAoB,GAAG,IAAI,CAAC,iBAAiB,CAC/C,CAAC,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,kBAAkB,EAAE,IAAI,CAAC,iBAAiB,CAAC,SAAS,CAAC,EACvF,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,EAAC,WAAW,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,EAAC,CAC1C,CAAC;QACF,MAAM,iBAAiB,GAAG,IAAI,UAAU,CAAC,EAAC,MAAM,EAAE,oBAAoB,EAAC,CAAC,CAAC;QACzE,iBAAiB,CAAC,EAAE,GAAG,6BAA6B,CAAC;QAErD,OAAO,IAAI,CAAC,eAAe,CACvB,CAAC,IAAI,CAAC,QAAQ,EAAE,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,EAClD,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,EACT,EAAC,SAAS,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC,EAAC,CAC3C,CAAC;IACJ,CAAC;IAEO,iBAAiB,CAAC,UAAuB,EAAE,MAAc;QAC/D,IAAI,MAAM,CAAC,IAAI,KAAK,UAAU,EAAE;YAC9B,OAAO,MAAM,CAAC;SACf;QACD,IAAI,MAA0B,CAAC;QAC/B,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE,EAAE,KAAK,CAAC,EAAE;YAC9B,MAAM,GAAG,IAAI,CAAC,iBAAiB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;YACnD,OAAO,CAAC,MAAM,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACK,eAAe,CAAC,MAAc;QACpC,MAAM,iBAAiB,GAAG,MAAM,CAAC,mBAAmB,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QACnE,MAAM,CAAC,mBAAmB,CAAC,GAAG,CAAC,GAAY,EAAE,EAAE;YAC7C,iBAAiB,CAAC,GAAG,CAAC,CAAC;YACvB,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC/B,CAAC,CAAC;QACF,OAAO,MAAM,CAAC;IAChB,CAAC;IAEO,eAAe,CAAC,MAAc;QACpC,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,CAAC;QAE1C,MAAM,SAAS,GAAG,GAAG,EAAE,CAAC,IAAI,CAAC,0BAA0B,CAAC,OAAO,EAAE,CAAC;QAClE,MAAM,CAAC,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;QACnC,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;QAErG,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,MAAM,IAAI,GAAyB,SAAS,CAAC,EAAE;YAC7C,IAAI,QAAQ,CAAC,aAAa,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE;gBAC1E,OAAO;aACR;YACD,IAAI,CAAC,KAAK,EAAE;gBACV,KAAK,GAAG,SAAS,CAAC;aACnB;YACD,MAAM,KAAK,GAAG,SAAS,GAAG,KAAK,CAAC;YAChC,IAAI,KAAK,GAAG,IAAI,CAAC,iBAAiB,EAAE;gBAClC,OAAO,GAAG,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;aAC9C;iBAAM;gBACL,OAAO,CAAC,IAAI,CAAC,wDAAwD,IAAI,CAAC,iBAAiB,OAAO,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC;aAChH;QACH,CAAC,CAAC;QACF,IAAI,OAAO,GAAG,MAAM,CAAC,qBAAqB,CAAC,IAAI,CAAC,CAAC;QACjD,IAAI,CAAC,0BAA0B,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IACtG,CAAC;IAED;;OAEG;IACK,gBAAgB,CAAC,MAA4B,EAAE,IAAuC;QAC5F,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC/B,IAAI,CAAC,+BAA+B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAClD,CAAC;IAED;;OAEG;IACK,SAAS,CAAC,OAAoB,EAAE,CAAgB;QACtD,OAAO,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,IAAI,EAAE,CAAC;QAC/B,MAAM,MAAM,GAAG,OAAO,CAAC,aAAa,CAAC;QACrC,IAAI,MAAM,IAAI,MAAM,KAAK,IAAI,CAAC,IAAI,EAAE;YAClC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;SAC3B;IACH,CAAC;IAED;;OAEG;IACK,eAAe,CAAC,MAA4B,EAAE,IAAuC;QAC3F,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE,CAAC;QACxC,MAAM,EAAC,QAAQ,EAAE,QAAQ,EAAC,GAAG,IAAI,CAAC;QAClC,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,GAAkB,QAAQ,CAAC;YAChC,OAAO,CAAC,EAAE;gBACR,kDAAkD;gBAClD,CAAC,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,OAAO,CAAC,kBAAkB,EAAE,EAAE,CAAC,CAAC;gBACtE,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;aACd;YACD,mCAAmC;YACnC,2CAA2C;YAC3C,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC;SACrC;QACD,IAAI,QAAQ,EAAE;YACZ,IAAI,CAAC,GAAkB,QAAQ,CAAC;YAChC,OAAO,CAAC,EAAE;gBACR,oCAAoC;gBACpC,CAAC,CAAC,KAAK,CAAC,SAAS,IAAI,kBAAkB,CAAC;gBACxC,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;aACd;YACD,uDAAuD;YACvD,MAAM,MAAM,GAAG,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;YAC3C,IAAI,MAAM,YAAY,gBAAgB,EAAE;gBACtC,MAAM,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;gBACpD,IAAI,KAAK,IAAI,CAAC,EAAE;oBACd,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;iBACzB;aACF;YACD,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;YAC7C,IAAI,KAAK,YAAY,aAAa,EAAE;gBAClC,KAAK,CAAC,aAAa,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;aACrC;YACD,4GAA4G;YAC5G,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC;YAEnC,6DAA6D;YAC7D,MAAM,cAAc,GAAG,QAAQ,CAAC,gBAAgB,CAAC,CAAC;YAClD,QAAQ,CAAC,gBAAgB,CAAC,GAAG,GAAG,CAAC,EAAE;gBACjC,MAAM,aAAa,GAAG,IAAI,CAAC,aAAa,CAAC;gBACzC,IAAI,aAAa,EAAE;oBACjB,MAAM,oBAAoB,GAAG,aAAa,CAAC,gBAAgB,CAAmC,CAAC;oBAC/F,IAAI,oBAAoB,IAAI,oBAAoB,CAAC,KAAK,KAAK,QAAQ,EAAE;wBACnE,aAAa,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,aAAa,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;wBAC/F,IAAI,aAAa,CAAC,YAAY,EAAE;4BAC9B,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;yBAC1D;qBACF;yBAAM,IAAI,CAAC,IAAI,CAAC,uBAAuB,CAAC,aAAa,CAAC,EAAE;wBACvD,IAAI,CAAC,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,EAAE;4BAC/C,IAAI,CAAC,kBAAkB,CAAC,aAAa,CAAC,CAAC;yBACxC;qBACF;iBACF;gBACD,QAAQ,CAAC,gBAAgB,CAAC,GAAG,cAAc,CAAC;gBAC5C,QAAQ,CAAC,gBAAgB,CAAC,CAAC,GAAG,CAAC,CAAC;YAClC,CAAC,CAAC;YACF,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,gBAAgB,CAAC,GAAG,cAAc,CAAC,CAAC,CAAC;SAC1G;QACD,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QAC9B,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACjD,CAAC;CAEF,CAAA;AA95CC;IADC,MAAM,CAAC,iBAAiB,CAAC;2DAC8B;AA24BxD;IADC,aAAa,EAAE;4CAKf;AAn8BU,gBAAgB;IAD5B,UAAU,EAAE;IA0EN,WAAA,MAAM,CAAC,aAAa,CAAC,CAAA;IACrB,WAAA,MAAM,CAAC,uBAAuB,CAAC,CAAA;IAC/B,WAAA,MAAM,CAAC,+BAA+B,CAAC,CAAA;IACvC,WAAA,MAAM,CAAC,oBAAoB,CAAC,CAAA;IAC5B,WAAA,MAAM,CAAC,uBAAuB,CAAC,CAAA;IAAE,WAAA,QAAQ,EAAE,CAAA;GA7ErC,gBAAgB,CAk9C5B;SAl9CY,gBAAgB;AAo9C7B;;GAEG;AACH,WAAiB,gBAAgB;IAM/B;;;OAGG;IACH,SAAgB,UAAU,CAAC,IAAa;QACtC,OAAO,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,OAAO,IAAI,IAAI,KAAK,QAAQ,CAAC;IAClE,CAAC;IAFe,2BAAU,aAEzB,CAAA;IAED,8DAA8D;IAC9D,SAAgB,WAAW,CAAC,IAAU;QACpC,MAAM,KAAK,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QACzD,OAAO,CAAC,IAAI,KAAK,SAAS,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,KAAK,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;IAClF,CAAC;IAHe,4BAAW,cAG1B,CAAA;IAWD;;OAEG;IACU,gCAAe,GAAG,MAAM,CAAC,MAAM,CAAU;QACpD,WAAW,EAAE,MAAM,CAAC,MAAM,CAAqB;YAC7C,SAAS,EAAE,GAAG;YACd,eAAe,EAAE,GAAG;YACpB,cAAc,EAAE,CAAC;YACjB,gBAAgB,EAAE,KAAK;SACxB,CAAC;QACF,SAAS,EAAE,MAAM,CAAC,MAAM,CAAoB;YAC1C,SAAS,EAAE,GAAG;YACd,eAAe,EAAE,GAAG;YACpB,cAAc,EAAE,CAAC;YACjB,gBAAgB,EAAE,KAAK;SACxB,CAAC;QACF,UAAU,EAAE,MAAM,CAAC,MAAM,CAAoB;YAC3C,SAAS,EAAE,GAAG;YACd,eAAe,EAAE,GAAG;YACpB,cAAc,EAAE,CAAC;YACjB,gBAAgB,EAAE,KAAK;SACxB,CAAC;KACH,CAAC,CAAC;IAQH,SAAgB,gBAAgB,CAAC,IAA0B;QACzD,OAAO,IAAI,KAAK,cAAc,IAAI,IAAI,KAAK,eAAe,CAAC;IAC7D,CAAC;IAFe,iCAAgB,mBAE/B,CAAA;IA8ED,IAAiB,uBAAuB,CAIvC;IAJD,WAAiB,uBAAuB;QACtC,SAAgB,EAAE,CAAC,MAA0B;YAC3C,OAAO,CAAC,CAAC,MAAM,IAAI,qBAAqB,IAAI,MAAM,CAAC;QACrD,CAAC;QAFe,0BAAE,KAEjB,CAAA;IACH,CAAC,EAJgB,uBAAuB,GAAvB,wCAAuB,KAAvB,wCAAuB,QAIvC;AAEH,CAAC,EAjJgB,gBAAgB,KAAhB,gBAAgB,QAiJhC","file":"../../../src/browser/shell/application-shell.js","sourcesContent":["import {inject, injectable, optional, postConstruct} from 'inversify';\nimport {\n  BoxLayout,\n  BoxPanel,\n  DockLayout,\n  DockPanel,\n  FocusTracker,\n  Layout,\n  Panel,\n  SplitLayout,\n  SplitPanel,\n  TabBar,\n  Title,\n  Widget\n} from '@lumino/widgets';\nimport {BOTTOM_AREA_ID, MAIN_AREA_ID, TartDockPanel} from './tart-dock-panel';\nimport {Disposable, DisposableCollection, Emitter, Event as CommonEvent, RecursivePartial} from '../../common';\nimport {SidePanel, SidePanelHandler, SidePanelHandlerFactory} from './side-panel-handler';\nimport {StatusBarAlignment, StatusBarEntry, StatusBarImpl} from '../status-bar';\nimport {ArrayExt, each, find, toArray} from '@lumino/algorithm';\nimport {Saveable, SaveableWidget, SaveOptions} from '../saveable';\nimport {Message} from '@lumino/messaging';\nimport {waitForClosed, waitForRevealed} from '../widgets';\nimport {FrontendApplicationStateService} from '../frontend-application-state';\nimport {SplitPositionHandler, SplitPositionOptions} from './split-panels';\nimport {animationFrame} from '../browser';\nimport {Signal} from '@lumino/signaling';\nimport {ContextKeyService} from '../context-key-service';\nimport {ScrollableTabBar} from './tab-bars';\n// import {TabBarRenderer, TabBarRendererFactory} from './tab-bars';\n// import {TabBarToolbar, TabBarToolbarFactory, TabBarToolbarRegistry} from './tab-bar-toolbar';\n\nexport type ApplicationShellLayoutVersion =\n/** layout versioning is introduced, unversioned layout are not compatible */\n    2.0 |\n    /** view containers are introduced, backward compatible to 2.0 */\n    3.0 |\n    /** git history view is replaced by a more generic scm history view, backward compatible to 3.0 */\n    4.0 |\n    /** Replace custom/font-awesome icons with codicons */\n    5.0 |\n    /** added the ability to drag and drop view parts between view containers */\n    6.0;\n\n/**\n * When a version is increased, make sure to introduce a migration (ApplicationShellLayoutMigration) to this version.\n */\nexport const applicationShellLayoutVersion: ApplicationShellLayoutVersion = 5.0;\n\n/** The class name added to ApplicationShell instances. */\nconst APPLICATION_SHELL_CLASS = 'tart-ApplicationShell';\n/** The class name added to the main and bottom area panels. */\nconst MAIN_BOTTOM_AREA_CLASS = 'tart-app-centers';\n/** Status bar entry identifier for the bottom panel toggle button. */\nconst BOTTOM_PANEL_TOGGLE_ID = 'bottom-panel-toggle';\n/** The class name added to the main area panel. */\nconst MAIN_AREA_CLASS = 'tart-app-main';\n/** The class name added to the bottom area panel. */\nconst BOTTOM_AREA_CLASS = 'tart-app-bottom';\n\nexport const ApplicationShellOptions = Symbol('ApplicationShellOptions');\nexport const DockPanelRendererFactory = Symbol('DockPanelRendererFactory');\n\n\n/**\n * A renderer for dock panels that supports context menus on tabs.\n */\n// @injectable()\n// export class DockPanelRenderer implements DockLayout.IRenderer {\n//\n//     readonly tabBarClasses: string[] = [];\n//\n//     constructor(\n//         @inject(TabBarRendererFactory) protected readonly tabBarRendererFactory: () => TabBarRenderer,\n//         @inject(TabBarToolbarRegistry) protected readonly tabBarToolbarRegistry: TabBarToolbarRegistry,\n//         @inject(TabBarToolbarFactory) protected readonly tabBarToolbarFactory: () => TabBarToolbar,\n//         @inject(BreadcrumbsRendererFactory) protected readonly breadcrumbsRendererFactory: BreadcrumbsRendererFactory,\n//     ) { }\n//\n//     createTabBar(): TabBar<Widget> {\n//         const renderer = this.tabBarRendererFactory();\n//         const tabBar = new ToolbarAwareTabBar(\n//             this.tabBarToolbarRegistry,\n//             this.tabBarToolbarFactory,\n//             this.breadcrumbsRendererFactory,\n//             {\n//                 renderer,\n//                 // Scroll bar options\n//                 handlers: ['drag-thumb', 'keyboard', 'wheel', 'touch'],\n//                 useBothWheelAxes: true,\n//                 scrollXMarginOffset: 4,\n//                 suppressScrollY: true\n//             });\n//         this.tabBarClasses.forEach(c => tabBar.addClass(c));\n//         renderer.tabBar = tabBar;\n//         tabBar.disposed.connect(() => renderer.dispose());\n//         renderer.contextMenuPath = SHELL_TABBAR_CONTEXT_MENU;\n//         tabBar.currentChanged.connect(this.onCurrentTabChanged, this);\n//         return tabBar;\n//     }\n//\n//     createHandle(): HTMLDivElement {\n//         return DockPanel.defaultRenderer.createHandle();\n//     }\n//\n//     protected onCurrentTabChanged(sender: ToolbarAwareTabBar, { currentIndex }: TabBar.ICurrentChangedArgs<Widget>): void {\n//         if (currentIndex >= 0) {\n//             sender.revealTab(currentIndex);\n//         }\n//     }\n// }\n\n@injectable()\nexport class ApplicationShell extends Widget {\n  /**\n   * The dock panel in the main shell area. This is where editors usually go to.\n   */\n  mainPanel: TartDockPanel;\n\n  /**\n   * The dock panel in the bottom shell area. In contrast to the main panel, the bottom panel\n   * can be collapsed and expanded.\n   */\n  bottomPanel: TartDockPanel;\n\n  /**\n   * Handler for the left side panel. The primary application views go here, such as the\n   * file explorer and the git view.\n   */\n  leftPanelHandler: SidePanelHandler;\n\n  /**\n   * Handler for the right side panel. The secondary application views go here, such as the\n   * outline view.\n   */\n  rightPanelHandler: SidePanelHandler;\n  /**\n   * The fixed-size panel shown on top. This one usually holds the main menu.\n   */\n  readonly topPanel: Panel;\n  /**\n   * A signal emitted whenever the `currentWidget` property is changed.\n   *\n   * @deprecated since 0.11.0, use `onDidChangeCurrentWidget` instead\n   */\n  readonly currentChanged = new Signal<this, FocusTracker.IChangedArgs<Widget>>(this);\n  /**\n   * A signal emitted whenever the `activeWidget` property is changed.\n   *\n   * @deprecated since 0.11.0, use `onDidChangeActiveWidget` instead\n   */\n  readonly activeChanged = new Signal<this, FocusTracker.IChangedArgs<Widget>>(this);\n  /**\n   * General options for the application shell.\n   */\n  protected options: ApplicationShell.Options;\n  /**\n   * The current state of the bottom panel.\n   */\n  protected readonly bottomPanelState: SidePanel.State = {\n    empty: true,\n    expansion: SidePanel.ExpansionState.collapsed,\n    pendingUpdate: Promise.resolve()\n  };\n  @inject(ContextKeyService)\n  protected readonly contextKeyService: ContextKeyService;\n  protected readonly onDidAddWidgetEmitter = new Emitter<Widget>();\n  readonly onDidAddWidget = this.onDidAddWidgetEmitter.event;\n  protected readonly onDidChangeActiveWidgetEmitter = new Emitter<FocusTracker.IChangedArgs<Widget>>();\n  readonly onDidChangeActiveWidget = this.onDidChangeActiveWidgetEmitter.event;\n\n  protected readonly onDidChangeCurrentWidgetEmitter = new Emitter<FocusTracker.IChangedArgs<Widget>>();\n  readonly onDidChangeCurrentWidget = this.onDidChangeCurrentWidgetEmitter.event;\n\n  protected readonly onDidRemoveWidgetEmitter = new Emitter<Widget>();\n  readonly onDidRemoveWidget = this.onDidRemoveWidgetEmitter.event;\n  protected readonly toDisposeOnActiveChanged = new DisposableCollection();\n  private readonly tracker = new FocusTracker<Widget>();\n  private readonly activationTimeout = 2000;\n  private readonly toDisposeOnActivationCheck = new DisposableCollection();\n\n  /**\n   * Construct a new application shell.\n   */\n  constructor(\n      // @inject(DockPanelRendererFactory) protected dockPanelRendererFactory: () => DockPanelRenderer,\n      @inject(StatusBarImpl) protected readonly statusBar: StatusBarImpl,\n      @inject(SidePanelHandlerFactory) sidePanelHandlerFactory: () => SidePanelHandler,\n      @inject(FrontendApplicationStateService) protected readonly applicationStateService: FrontendApplicationStateService,\n      @inject(SplitPositionHandler) protected splitPositionHandler: SplitPositionHandler,\n      @inject(ApplicationShellOptions) @optional() options: RecursivePartial<ApplicationShell.Options> = {},\n  ) {\n    super();\n    this.addClass(APPLICATION_SHELL_CLASS);\n    this.id = 'tart-app-shell';\n\n    // Merge the user-defined application options with the default options\n    this.options = {\n      bottomPanel: {\n        ...ApplicationShell.DEFAULT_OPTIONS.bottomPanel,\n        ...options?.bottomPanel || {}\n      },\n      leftPanel: {\n        ...ApplicationShell.DEFAULT_OPTIONS.leftPanel,\n        ...options?.leftPanel\n      },\n      rightPanel: {\n        ...ApplicationShell.DEFAULT_OPTIONS.rightPanel,\n        ...options?.rightPanel || {}\n      }\n    };\n\n    this.mainPanel = this.createMainPanel();\n    this.topPanel = this.createTopPanel();\n    this.bottomPanel = this.createBottomPanel();\n\n    this.leftPanelHandler = sidePanelHandlerFactory();\n    this.leftPanelHandler.create('left', this.options.leftPanel);\n    this.leftPanelHandler.dockPanel.widgetAdded.connect((_, widget) => this.fireDidAddWidget(widget));\n    this.leftPanelHandler.dockPanel.widgetRemoved.connect((_, widget) => this.fireDidRemoveWidget(widget));\n\n    this.rightPanelHandler = sidePanelHandlerFactory();\n    this.rightPanelHandler.create('right', this.options.rightPanel);\n    this.rightPanelHandler.dockPanel.widgetAdded.connect((_, widget) => this.fireDidAddWidget(widget));\n    this.rightPanelHandler.dockPanel.widgetRemoved.connect((_, widget) => this.fireDidRemoveWidget(widget));\n\n    this.layout = this.createLayout();\n    this.tracker.currentChanged.connect(this.onCurrentChanged, this);\n    this.tracker.activeChanged.connect(this.onActiveChanged, this);\n  }\n\n  /**\n   * The tab bars contained in the main shell area. If there is no widget in the main area, the\n   * returned array is empty.\n   */\n  get mainAreaTabBars(): TabBar<Widget>[] {\n    return toArray(this.mainPanel.tabBars());\n  }\n\n  /**\n   * The tab bars contained in the bottom shell area. If there is no widget in the bottom area,\n   * the returned array is empty.\n   */\n  get bottomAreaTabBars(): TabBar<Widget>[] {\n    return toArray(this.bottomPanel.tabBars());\n  }\n\n  /**\n   * The tab bars contained in all shell areas.\n   */\n  get allTabBars(): TabBar<Widget>[] {\n    return [...this.mainAreaTabBars, ...this.bottomAreaTabBars, this.leftPanelHandler.tabBar, this.rightPanelHandler.tabBar];\n  }\n\n  /**\n   * The shell area name of the currently active tab, or undefined.\n   */\n  get currentTabArea(): ApplicationShell.Area | undefined {\n    const currentWidget = this.currentWidget;\n    if (currentWidget) {\n      return this.getAreaFor(currentWidget);\n    }\n  }\n\n  /**\n   * Returns a snapshot of all tracked widgets to allow async modifications.\n   */\n  get widgets(): ReadonlyArray<Widget> {\n    return [...this.tracker.widgets];\n  }\n\n  /**\n   * A promise that is resolved when all currently pending updates are done.\n   */\n  get pendingUpdates(): Promise<void> {\n    return Promise.all([\n      this.bottomPanelState.pendingUpdate,\n      this.leftPanelHandler.state.pendingUpdate,\n      this.rightPanelHandler.state.pendingUpdate\n      // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ]) as Promise<any>;\n  }\n\n  /**\n   * The current widget in the application shell. The current widget is the last widget that\n   * was active and not yet closed. See the remarks to `activeWidget` on what _active_ means.\n   */\n  get currentWidget(): Widget | undefined {\n    return this.tracker.currentWidget || undefined;\n  }\n\n  /**\n   * Return the tab bar that has the currently active widget, or undefined.\n   */\n  get currentTabBar(): TabBar<Widget> | undefined {\n    const currentWidget = this.currentWidget;\n    if (currentWidget) {\n      return this.getTabBarFor(currentWidget);\n    }\n  }\n\n  /**\n   * The active widget in the application shell. The active widget is the one that has focus\n   * (either the widget itself or any of its contents).\n   *\n   * _Note:_ Focus is taken by a widget through the `onActivateRequest` method. It is up to the\n   * widget implementation which DOM element will get the focus. The default implementation\n   * does not take any focus; in that case the widget is never returned by this property.\n   */\n  get activeWidget(): Widget | undefined {\n    return this.tracker.activeWidget || undefined;\n  }\n\n  /**\n   * Save the current widget if it is dirty.\n   */\n  async save(options?: SaveOptions): Promise<void> {\n    await Saveable.save(this.currentWidget, options);\n  }\n\n  /**\n   * The widgets contained in the given shell area.\n   */\n  getWidgets(area: ApplicationShell.Area): Widget[] {\n    switch (area) {\n      case 'main':\n        return toArray(this.mainPanel.widgets());\n      case 'top':\n        return toArray(this.topPanel.widgets);\n      case 'bottom':\n        return toArray(this.bottomPanel.widgets());\n      case 'left':\n        return toArray(this.leftPanelHandler.dockPanel.widgets());\n      case 'right':\n        return toArray(this.rightPanelHandler.dockPanel.widgets());\n      default:\n        throw new Error('Illegal argument: ' + area);\n    }\n  }\n\n  /**\n   * Find the widget that contains the given HTML element. The returned widget may be one\n   * that is managed by the application shell, or one that is embedded in another widget and\n   * not directly managed by the shell, or a tab bar.\n   */\n  findWidgetForElement(element: HTMLElement): Widget | undefined {\n    let widgetNode: HTMLElement | null = element;\n    while (widgetNode && !widgetNode.classList.contains('p-Widget')) {\n      widgetNode = widgetNode.parentElement;\n    }\n    if (widgetNode) {\n      return this.findWidgetForNode(widgetNode, this);\n    }\n    return undefined;\n  }\n\n  /**\n   * Finds the title widget from the tab-bar.\n   * @param tabBar used for providing an array of titles.\n   * @returns the selected title widget, else returns the currentTitle or undefined.\n   */\n  findTitle(tabBar: TabBar<Widget>, event?: Event): Title<Widget> | undefined {\n    if (event?.target instanceof HTMLElement) {\n      let tabNode: HTMLElement | null = event.target;\n      while (tabNode && !tabNode.classList.contains('p-TabBar-tab')) {\n        tabNode = tabNode.parentElement;\n      }\n      if (tabNode && tabNode.title) {\n        let title = tabBar.titles.find(t => t.caption === tabNode!.title);\n        if (title) {\n          return title;\n        }\n        title = tabBar.titles.find(t => t.label === tabNode!.title);\n        if (title) {\n          return title;\n        }\n      }\n    }\n    return tabBar.currentTitle || undefined;\n  }\n\n  /**\n   * Finds the tab-bar widget.\n   * @returns the selected tab-bar, else returns the currentTabBar.\n   */\n  findTabBar(event?: Event): TabBar<Widget> | undefined {\n    if (event?.target instanceof HTMLElement) {\n      const tabBar = this.findWidgetForElement(event.target);\n      if (tabBar instanceof TabBar) {\n        return tabBar;\n      }\n    }\n    return this.currentTabBar;\n  }\n\n  /**\n   *  @returns the widget whose title has been targeted by a DOM event on a tabbar, or undefined if none can be found.\n   */\n  findTargetedWidget(event?: Event): Widget | undefined {\n    if (event) {\n      const tab = this.findTabBar(event);\n      const title = tab && this.findTitle(tab, event);\n      return title && title.owner;\n    }\n  }\n\n  /**\n   * Add a widget to the application shell. The given widget must have a unique `id` property,\n   * which will be used as the DOM id.\n   *\n   * Widgets are removed from the shell by calling their `close` or `dispose` methods.\n   *\n   * Widgets added to the top area are not tracked regarding the _current_ and _active_ states.\n   */\n  async addWidget(widget: Widget, options: Readonly<ApplicationShell.WidgetOptions> = {}): Promise<void> {\n    if (!widget.id) {\n      console.error('Widgets added to the application shell must have a unique id property.');\n      return;\n    }\n    let ref: Widget | undefined = options.ref;\n    let area: ApplicationShell.Area = options.area || 'main';\n    if (!ref && (area === 'main' || area === 'bottom')) {\n      const tabBar = this.getTabBarFor(area);\n      ref = tabBar && tabBar.currentTitle && tabBar.currentTitle.owner || undefined;\n    }\n    // make sure that ref belongs to area\n    area = ref && this.getAreaFor(ref) || area;\n    const addOptions: DockPanel.IAddOptions = {};\n    if (ApplicationShell.isOpenToSideMode(options.mode)) {\n      const areaPanel = area === 'main' ? this.mainPanel : area === 'bottom' ? this.bottomPanel : undefined;\n      const sideRef = areaPanel && ref && (options.mode === 'open-to-left' ?\n          areaPanel.previousTabBarWidget(ref) :\n          areaPanel.nextTabBarWidget(ref));\n      if (sideRef) {\n        addOptions.ref = sideRef;\n      } else {\n        addOptions.ref = ref;\n        addOptions.mode = options.mode === 'open-to-left' ? 'split-left' : 'split-right';\n      }\n    } else {\n      addOptions.ref = ref;\n      addOptions.mode = options.mode;\n    }\n    const sidePanelOptions: SidePanel.WidgetOptions = {rank: options.rank};\n    switch (area) {\n      case 'main':\n        this.mainPanel.addWidget(widget, addOptions);\n        break;\n      case 'top':\n        this.topPanel.addWidget(widget);\n        break;\n      case 'bottom':\n        this.bottomPanel.addWidget(widget, addOptions);\n        break;\n      case 'left':\n        this.leftPanelHandler.addWidget(widget, sidePanelOptions);\n        break;\n      case 'right':\n        this.rightPanelHandler.addWidget(widget, sidePanelOptions);\n        break;\n      default:\n        throw new Error('Unexpected area: ' + options.area);\n    }\n    if (area !== 'top') {\n      this.track(widget);\n    }\n  }\n\n  /**\n   * Return the tab bar in the given shell area, or the tab bar that has the given widget, or undefined.\n   */\n  getTabBarFor(widgetOrArea: Widget | ApplicationShell.Area): TabBar<Widget> | undefined {\n    if (typeof widgetOrArea === 'string') {\n      switch (widgetOrArea) {\n        case 'main':\n          return this.mainPanel.currentTabBar;\n        case 'bottom':\n          return this.bottomPanel.currentTabBar;\n        case 'left':\n          return this.leftPanelHandler.tabBar;\n        case 'right':\n          return this.rightPanelHandler.tabBar;\n        default:\n          throw new Error('Illegal argument: ' + widgetOrArea);\n      }\n    }\n    const widget = this.toTrackedStack(widgetOrArea.id).pop();\n    if (!widget) {\n      return undefined;\n    }\n    const widgetTitle = widget.title;\n    const mainPanelTabBar = this.mainPanel.findTabBar(widgetTitle);\n    if (mainPanelTabBar) {\n      return mainPanelTabBar;\n    }\n    const bottomPanelTabBar = this.bottomPanel.findTabBar(widgetTitle);\n    if (bottomPanelTabBar) {\n      return bottomPanelTabBar;\n    }\n    const leftPanelTabBar = this.leftPanelHandler.tabBar;\n    if (ArrayExt.firstIndexOf(leftPanelTabBar.titles, widgetTitle) > -1) {\n      return leftPanelTabBar;\n    }\n    const rightPanelTabBar = this.rightPanelHandler.tabBar;\n    if (ArrayExt.firstIndexOf(rightPanelTabBar.titles, widgetTitle) > -1) {\n      return rightPanelTabBar;\n    }\n    return undefined;\n  }\n\n  /**\n   * Determine the name of the shell area where the given widget resides. The result is\n   * undefined if the widget does not reside directly in the shell.\n   */\n  getAreaFor(input: TabBar<Widget> | Widget): ApplicationShell.Area | undefined {\n    if (input instanceof TabBar) {\n      if (find(this.mainPanel.tabBars(), tb => tb === input)) {\n        return 'main';\n      }\n      if (find(this.bottomPanel.tabBars(), tb => tb === input)) {\n        return 'bottom';\n      }\n      if (this.leftPanelHandler.tabBar === input) {\n        return 'left';\n      }\n      if (this.rightPanelHandler.tabBar === input) {\n        return 'right';\n      }\n    }\n    const widget = this.toTrackedStack(input.id).pop();\n    if (!widget) {\n      return undefined;\n    }\n    const title = widget.title;\n    const mainPanelTabBar = this.mainPanel.findTabBar(title);\n    if (mainPanelTabBar) {\n      return 'main';\n    }\n    const bottomPanelTabBar = this.bottomPanel.findTabBar(title);\n    if (bottomPanelTabBar) {\n      return 'bottom';\n    }\n    if (ArrayExt.firstIndexOf(this.leftPanelHandler.tabBar.titles, title) > -1) {\n      return 'left';\n    }\n    if (ArrayExt.firstIndexOf(this.rightPanelHandler.tabBar.titles, title) > -1) {\n      return 'right';\n    }\n    return undefined;\n  }\n\n  /**\n   * Create an object that describes the current shell layout. This object may contain references\n   * to widgets; these need to be transformed before the layout can be serialized.\n   */\n  getLayoutData(): ApplicationShell.LayoutData {\n    return {\n      version: applicationShellLayoutVersion,\n      mainPanel: this.mainPanel.saveLayout(),\n      bottomPanel: {\n        config: this.bottomPanel.saveLayout(),\n        size: this.bottomPanel.isVisible ? this.getBottomPanelSize() : this.bottomPanelState.lastPanelSize,\n        expanded: this.isExpanded('bottom')\n      },\n      leftPanel: this.leftPanelHandler.getLayoutData(),\n      rightPanel: this.rightPanelHandler.getLayoutData(),\n      activeWidgetId: this.activeWidget ? this.activeWidget.id : undefined\n    };\n  }\n\n  /**\n   * Collapse the named side panel area. This makes sure that the panel is hidden,\n   * increasing the space that is available for other shell areas.\n   */\n  collapsePanel(area: ApplicationShell.Area): Promise<void> {\n    switch (area) {\n      case 'bottom':\n        return this.collapseBottomPanel();\n      case 'left':\n        return this.leftPanelHandler.collapse();\n      case 'right':\n        return this.rightPanelHandler.collapse();\n      default:\n        throw new Error('Area cannot be collapsed: ' + area);\n    }\n  }\n\n  /**\n   * Reveal a widget in the application shell. This makes the widget visible,\n   * but does not activate it.\n   *\n   * @returns the revealed widget if it was found\n   */\n  async revealWidget(id: string): Promise<Widget | undefined> {\n    const stack = this.toTrackedStack(id);\n    let current = stack.pop();\n    if (current && !this.doRevealWidget(current.id)) {\n      return undefined;\n    }\n    while (current && stack.length) {\n      const child = stack.pop()!;\n      if (ApplicationShell.TrackableWidgetProvider.is(current) && current.revealWidget) {\n        current = current.revealWidget(child.id);\n      } else {\n        current = child;\n      }\n    }\n    if (!current) {\n      return undefined;\n    }\n    await Promise.all([\n      waitForRevealed(current),\n      this.pendingUpdates\n    ]);\n    return current;\n  }\n\n  /**\n   * Expand the named side panel area. This makes sure that the panel is visible, even if there\n   * are no widgets in it. If the panel is already visible, nothing happens. If the panel is currently\n   * collapsed (see `collapsePanel`) and it contains widgets, the widgets are revealed that were\n   * visible before it was collapsed.\n   */\n  expandPanel(area: ApplicationShell.Area): void {\n    switch (area) {\n      case 'bottom':\n        this.expandBottomPanel();\n        break;\n      case 'left':\n        this.leftPanelHandler.expand();\n        break;\n      case 'right':\n        this.rightPanelHandler.expand();\n        break;\n      default:\n        throw new Error('Area cannot be expanded: ' + area);\n    }\n  }\n\n  /**\n   * Adjusts the size of the given area in the application shell.\n   *\n   * @param size the desired size of the panel in pixels.\n   * @param area the area to resize.\n   */\n  resize(size: number, area: ApplicationShell.Area): void {\n    switch (area) {\n      case 'bottom':\n        if (this.bottomPanel.isHidden) {\n          this.bottomPanelState.lastPanelSize = size;\n        } else {\n          this.setBottomPanelSize(size);\n        }\n        break;\n      case 'left':\n        this.leftPanelHandler.resize(size);\n        break;\n      case 'right':\n        this.rightPanelHandler.resize(size);\n        break;\n      default:\n        throw new Error('Area cannot be resized: ' + area);\n    }\n  }\n\n  /**\n   * Apply a shell layout that has been previously created with `getLayoutData`.\n   */\n  async setLayoutData(layoutData: ApplicationShell.LayoutData): Promise<void> {\n    const {mainPanel, bottomPanel, leftPanel, rightPanel, activeWidgetId} = layoutData;\n    if (leftPanel) {\n      this.leftPanelHandler.setLayoutData(leftPanel);\n      this.registerWithFocusTracker(leftPanel);\n    }\n    if (rightPanel) {\n      this.rightPanelHandler.setLayoutData(rightPanel);\n      this.registerWithFocusTracker(rightPanel);\n    }\n    // Proceed with the bottom panel once the side panels are set up\n    await Promise.all([this.leftPanelHandler.state.pendingUpdate, this.rightPanelHandler.state.pendingUpdate]);\n    if (bottomPanel) {\n      if (bottomPanel.config) {\n        this.bottomPanel.restoreLayout(bottomPanel.config);\n        this.registerWithFocusTracker(bottomPanel.config.main);\n      }\n      if (bottomPanel.size) {\n        this.bottomPanelState.lastPanelSize = bottomPanel.size;\n      }\n      if (bottomPanel.expanded) {\n        this.expandBottomPanel();\n      } else {\n        this.collapseBottomPanel();\n      }\n      this.refreshBottomPanelToggleButton();\n    }\n    // Proceed with the main panel once all others are set up\n    await this.bottomPanelState.pendingUpdate;\n    if (mainPanel) {\n      this.mainPanel.restoreLayout(mainPanel);\n      this.registerWithFocusTracker(mainPanel.main);\n    }\n    if (activeWidgetId) {\n      this.activateWidget(activeWidgetId);\n    }\n  }\n\n  /**\n   * Activate a widget in the application shell. This makes the widget visible and usually\n   * also assigns focus to it.\n   *\n   * _Note:_ Focus is taken by a widget through the `onActivateRequest` method. It is up to the\n   * widget implementation which DOM element will get the focus. The default implementation\n   * does not take any focus.\n   *\n   * @returns the activated widget if it was found\n   */\n  async activateWidget(id: string): Promise<Widget | undefined> {\n    const stack = this.toTrackedStack(id);\n    let current = stack.pop();\n    if (current && !this.doActivateWidget(current.id)) {\n      return undefined;\n    }\n    while (current && stack.length) {\n      const child = stack.pop()!;\n      if (ApplicationShell.TrackableWidgetProvider.is(current) && current.activateWidget) {\n        current = current.activateWidget(child.id);\n      } else {\n        child.activate();\n        current = child;\n      }\n    }\n    if (!current) {\n      return undefined;\n    }\n    await Promise.all([\n      this.waitForActivation(current.id),\n      waitForRevealed(current),\n      this.pendingUpdates\n    ]);\n    return current;\n  }\n\n  async closeWidget(id: string, options?: ApplicationShell.CloseOptions): Promise<Widget | undefined> {\n    // TODO handle save for composite widgets, i.e. the preference widget has 2 editors\n    const stack = this.toTrackedStack(id);\n    const current = stack.pop();\n    if (!current) {\n      return undefined;\n    }\n    let pendingClose;\n    if (SaveableWidget.is(current)) {\n      let shouldSave;\n      if (options && 'save' in options) {\n        shouldSave = () => options.save;\n      }\n      pendingClose = current.closeWithSaving({shouldSave});\n    } else {\n      current.close();\n      pendingClose = waitForClosed(current);\n    }\n    await Promise.all([\n      pendingClose,\n      this.pendingUpdates\n    ]);\n    return stack[0] || current;\n  }\n\n  /**\n   * Save all dirty widgets.\n   */\n  async saveAll(options?: SaveOptions): Promise<void> {\n    await Promise.all(this.tracker.widgets.map(widget => {\n      if (Saveable.isDirty(widget)) {\n        Saveable.save(widget, options);\n      }\n    }));\n  }\n\n  getWidgetById(id: string): Widget | undefined {\n    for (const widget of this.tracker.widgets) {\n      if (widget.id === id) {\n        return widget;\n      }\n    }\n    return undefined;\n  }\n\n  canToggleMaximized(): boolean {\n    const area = this.currentWidget && this.getAreaFor(this.currentWidget);\n    return area === 'main' || area === 'bottom';\n  }\n\n  toggleMaximized(): void {\n    const area = this.currentWidget && this.getAreaPanelFor(this.currentWidget);\n    if (area instanceof TartDockPanel && (area === this.mainPanel || area === this.bottomPanel)) {\n      area.toggleMaximized();\n    }\n  }\n\n  waitForActivation(id: string): Promise<void> {\n    if (this.activeWidget && this.activeWidget.id === id) {\n      return Promise.resolve();\n    }\n    return new Promise(resolve => {\n      const toDispose = this.onDidChangeActiveWidget(() => {\n        if (this.activeWidget && this.activeWidget.id === id) {\n          toDispose.dispose();\n          resolve();\n        }\n      });\n    });\n  }\n\n  activateNextTab(): boolean {\n    const current = this.currentTabBar;\n    if (current) {\n      const ci = current.currentIndex;\n      if (ci !== -1) {\n        if (ci < current.titles.length - 1) {\n          current.currentIndex += 1;\n          if (current.currentTitle) {\n            this.activateWidget(current.currentTitle.owner.id);\n          }\n          return true;\n        } else if (ci === current.titles.length - 1) {\n          return this.activateNextTabBar(current);\n        }\n      }\n    }\n    return false;\n  }\n\n  activateNextTabBar(current: TabBar<Widget> | undefined = this.currentTabBar): boolean {\n    const nextBar = this.nextTabBar(current);\n    if (nextBar) {\n      nextBar.currentIndex = 0;\n      if (nextBar.currentTitle) {\n        this.activateWidget(nextBar.currentTitle.owner.id);\n      }\n      return true;\n    }\n    return false;\n  }\n\n  activatePreviousTab(): boolean {\n    const current = this.currentTabBar;\n    if (current) {\n      const ci = current.currentIndex;\n      if (ci !== -1) {\n        if (ci > 0) {\n          current.currentIndex -= 1;\n          if (current.currentTitle) {\n            this.activateWidget(current.currentTitle.owner.id);\n          }\n          return true;\n        } else if (ci === 0) {\n          return this.activatePreviousTabBar(current);\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Return the tab bar next to the given tab bar; return the given tab bar if there is no adjacent one.\n   */\n  nextTabBar(current: TabBar<Widget> | undefined = this.currentTabBar): TabBar<Widget> | undefined {\n    let bars = toArray(this.bottomPanel.tabBars());\n    let len = bars.length;\n    let ci = ArrayExt.firstIndexOf(bars, current);\n    if (ci < 0) {\n      bars = toArray(this.mainPanel.tabBars());\n      len = bars.length;\n      ci = ArrayExt.firstIndexOf(bars, current);\n    }\n    if (ci >= 0 && ci < len - 1) {\n      return bars[ci + 1];\n    } else if (ci >= 0 && ci === len - 1) {\n      return bars[0];\n    } else {\n      return current;\n    }\n  }\n\n  /*\n* Activate the previous tab in the current tab bar.\n*/\n  activatePreviousTabInTabBar(current: TabBar<Widget> | undefined = this.currentTabBar): boolean {\n    const index = this.previousTabIndexInTabBar(current);\n    if (!current || index === -1) {\n      return false;\n    }\n    current.currentIndex = index;\n    if (current.currentTitle) {\n      this.activateWidget(current.currentTitle.owner.id);\n    }\n    return true;\n  }\n\n  previousTabIndexInTabBar(current: TabBar<Widget> | undefined = this.currentTabBar): number {\n    if (!current || current.titles.length <= 1) {\n      return -1;\n    }\n    const index = current.currentIndex;\n    if (index === -1) {\n      return -1;\n    }\n    if (index > 0) {\n      return index - 1;\n    }\n    return current.titles.length - 1;\n  }\n\n  activatePreviousTabBar(current: TabBar<Widget> | undefined = this.currentTabBar): boolean {\n    const prevBar = this.previousTabBar(current);\n    if (!prevBar) {\n      return false;\n    }\n    const len = prevBar.titles.length;\n    prevBar.currentIndex = len - 1;\n    if (prevBar.currentTitle) {\n      this.activateWidget(prevBar.currentTitle.owner.id);\n    }\n    return true;\n  }\n\n  /**\n   * Return the tab bar previous to the given tab bar; return the given tab bar if there is no adjacent one.\n   */\n  previousTabBar(current: TabBar<Widget> | undefined = this.currentTabBar): TabBar<Widget> | undefined {\n    const bars = toArray(this.mainPanel.tabBars());\n    const len = bars.length;\n    const ci = ArrayExt.firstIndexOf(bars, current);\n    if (ci > 0) {\n      return bars[ci - 1];\n    } else if (ci === 0) {\n      return bars[len - 1];\n    } else {\n      return current;\n    }\n  }\n\n  /*\n   * Activate the next tab in the current tab bar.\n   */\n  activateNextTabInTabBar(current: TabBar<Widget> | undefined = this.currentTabBar): boolean {\n    const index = this.nextTabIndexInTabBar(current);\n    if (!current || index === -1) {\n      return false;\n    }\n    current.currentIndex = index;\n    if (current.currentTitle) {\n      this.activateWidget(current.currentTitle.owner.id);\n    }\n    return true;\n  }\n\n  nextTabIndexInTabBar(current: TabBar<Widget> | undefined = this.currentTabBar): number {\n    if (!current || current.titles.length <= 1) {\n      return -1;\n    }\n    const index = current.currentIndex;\n    if (index === -1) {\n      return -1;\n    }\n    if (index < current.titles.length - 1) {\n      return index + 1;\n    }\n    return 0;\n  }\n\n  /**\n   * Check whether the named side panel area is expanded (returns `true`) or collapsed (returns `false`).\n   */\n  isExpanded(area: ApplicationShell.Area): boolean {\n    switch (area) {\n      case 'bottom':\n        return this.bottomPanelState.expansion === SidePanel.ExpansionState.expanded;\n      case 'left':\n        return this.leftPanelHandler.state.expansion === SidePanel.ExpansionState.expanded;\n      case 'right':\n        return this.rightPanelHandler.state.expansion === SidePanel.ExpansionState.expanded;\n      default:\n        return true;\n    }\n  }\n\n  /**\n   * Close all tabs or a selection of tabs in a specific part of the application shell.\n   *\n   * @param tabBarOrArea\n   *      Either the name of a shell area or a `TabBar` that is contained in such an area.\n   * @param filter\n   *      If undefined, all tabs are closed; otherwise only those tabs that match the filter are closed.\n   */\n  closeTabs(tabBarOrArea: TabBar<Widget> | ApplicationShell.Area,\n            filter?: (title: Title<Widget>, index: number) => boolean): void {\n    if (tabBarOrArea === 'main') {\n      this.mainAreaTabBars.forEach(tb => this.closeTabs(tb, filter));\n    } else if (tabBarOrArea === 'bottom') {\n      this.bottomAreaTabBars.forEach(tb => this.closeTabs(tb, filter));\n    } else if (typeof tabBarOrArea === 'string') {\n      const tabBar = this.getTabBarFor(tabBarOrArea);\n      if (tabBar) {\n        this.closeTabs(tabBar, filter);\n      }\n    } else if (tabBarOrArea) {\n      const titles = toArray(tabBarOrArea.titles);\n      for (let i = 0; i < titles.length; i++) {\n        if (filter === undefined || filter(titles[i], i)) {\n          titles[i].owner.close();\n        }\n      }\n    }\n  }\n\n  saveTabs(tabBarOrArea: TabBar<Widget> | ApplicationShell.Area,\n           filter?: (title: Title<Widget>, index: number) => boolean): void {\n    if (tabBarOrArea === 'main') {\n      this.mainAreaTabBars.forEach(tb => this.saveTabs(tb, filter));\n    } else if (tabBarOrArea === 'bottom') {\n      this.bottomAreaTabBars.forEach(tb => this.saveTabs(tb, filter));\n    } else if (typeof tabBarOrArea === 'string') {\n      const tabBar = this.getTabBarFor(tabBarOrArea);\n      if (tabBar) {\n        this.saveTabs(tabBar, filter);\n      }\n    } else if (tabBarOrArea) {\n      const titles = toArray(tabBarOrArea.titles);\n      for (let i = 0; i < titles.length; i++) {\n        if (filter === undefined || filter(titles[i], i)) {\n          const widget = titles[i].owner;\n          const saveable = Saveable.get(widget);\n          saveable?.save();\n        }\n      }\n    }\n  }\n\n  /**\n   * Returns the last active widget in the given shell area.\n   */\n  getCurrentWidget(area: ApplicationShell.Area): Widget | undefined {\n    let title: Title<Widget> | null | undefined;\n    switch (area) {\n      case 'main':\n        title = this.mainPanel.currentTitle;\n        break;\n      case 'bottom':\n        title = this.bottomPanel.currentTitle;\n        break;\n      case 'left':\n        title = this.leftPanelHandler.tabBar.currentTitle;\n        break;\n      case 'right':\n        title = this.rightPanelHandler.tabBar.currentTitle;\n        break;\n      default:\n        throw new Error('Illegal argument: ' + area);\n    }\n    return title ? title.owner : undefined;\n  }\n\n  protected fireDidAddWidget(widget: Widget): void {\n    this.onDidAddWidgetEmitter.fire(widget);\n  }\n\n  protected fireDidRemoveWidget(widget: Widget): void {\n    this.onDidRemoveWidgetEmitter.fire(widget);\n  }\n\n  @postConstruct()\n  protected init(): void {\n    // this.initSidebarVisibleKeyContext();\n    this.initFocusKeyContexts();\n    this.setTopPanelVisibility('');\n  }\n\n  /**\n   * Create the dock panel in the main shell area.\n   */\n  protected createMainPanel(): TartDockPanel {\n    // const renderer = this.dockPanelRendererFactory();\n    // renderer.tabBarClasses.push(MAIN_BOTTOM_AREA_CLASS);\n    // renderer.tabBarClasses.push(MAIN_AREA_CLASS);\n    const dockPanel = new TartDockPanel({\n      mode: 'multiple-document',\n      spacing: 0,\n    });\n    dockPanel.id = MAIN_AREA_ID;\n    return dockPanel;\n  }\n\n  /**\n   * Create the dock panel in the bottom shell area.\n   */\n  protected createBottomPanel(): TartDockPanel {\n    const dockPanel = new TartDockPanel({\n      mode: 'multiple-document',\n      spacing: 0,\n    });\n    dockPanel.id = BOTTOM_AREA_ID;\n    dockPanel.widgetAdded.connect((sender, widget) => {\n      this.refreshBottomPanelToggleButton();\n    });\n    dockPanel.widgetRemoved.connect((sender, widget) => {\n      if (sender.isEmpty) {\n        this.collapseBottomPanel();\n      }\n      this.refreshBottomPanelToggleButton();\n    }, this);\n    dockPanel.node.addEventListener('p-dragenter', event => {\n      // Make sure that the main panel hides its overlay when the bottom panel is expanded\n      this.mainPanel.overlay.hide(0);\n    });\n    dockPanel.hide();\n    dockPanel.widgetAdded.connect((_, widget) => this.fireDidAddWidget(widget));\n    dockPanel.widgetRemoved.connect((_, widget) => this.fireDidRemoveWidget(widget));\n    return dockPanel;\n  }\n\n  /**\n   * Create the top panel, which is used to hold the main menu.\n   */\n  protected createTopPanel(): Panel {\n    const topPanel = new Panel();\n    topPanel.id = 'tart-top-panel';\n    topPanel.hide();\n    return topPanel;\n  }\n\n  /**\n   * Create a box layout to assemble the application shell layout.\n   */\n  protected createBoxLayout(widgets: Widget[], stretch?: number[], options?: BoxPanel.IOptions): BoxLayout {\n    const boxLayout = new BoxLayout(options);\n    for (let i = 0; i < widgets.length; i++) {\n      if (stretch !== undefined && i < stretch.length) {\n        BoxPanel.setStretch(widgets[i], stretch[i]);\n      }\n      boxLayout.addWidget(widgets[i]);\n    }\n    return boxLayout;\n  }\n\n  /**\n   * Create a split layout to assemble the application shell layout.\n   */\n  protected createSplitLayout(widgets: Widget[], stretch?: number[], options?: Partial<SplitLayout.IOptions>): SplitLayout {\n    let optParam: SplitLayout.IOptions = {renderer: SplitPanel.defaultRenderer,};\n    if (options) {\n      optParam = {...optParam, ...options};\n    }\n    const splitLayout = new SplitLayout(optParam);\n    for (let i = 0; i < widgets.length; i++) {\n      if (stretch !== undefined && i < stretch.length) {\n        SplitPanel.setStretch(widgets[i], stretch[i]);\n      }\n      splitLayout.addWidget(widgets[i]);\n    }\n    return splitLayout;\n  }\n\n  /**\n   * Track the given widget so it is considered in the `current` and `active` state of the shell.\n   */\n  protected track(widget: Widget): void {\n    if (this.tracker.widgets.indexOf(widget) !== -1) {\n      return;\n    }\n    this.tracker.add(widget);\n    this.checkActivation(widget);\n    Saveable.apply(widget);\n    if (ApplicationShell.TrackableWidgetProvider.is(widget)) {\n      for (const toTrack of widget.getTrackableWidgets()) {\n        this.track(toTrack);\n      }\n      if (widget.onDidChangeTrackableWidgets) {\n        widget.onDidChangeTrackableWidgets(widgets => widgets.forEach(w => this.track(w)));\n      }\n    }\n  }\n\n  protected initFocusKeyContexts(): void {\n    const sideBarFocus = this.contextKeyService.createKey('sideBarFocus', false);\n    const panelFocus = this.contextKeyService.createKey('panelFocus', false);\n    const updateFocusContextKeys = () => {\n      const area = this.activeWidget && this.getAreaFor(this.activeWidget);\n      sideBarFocus.set(area === 'left');\n      panelFocus.set(area === 'main');\n    };\n    updateFocusContextKeys();\n    this.activeChanged.connect(updateFocusContextKeys);\n  }\n\n  protected toTrackedStack(id: string): Widget[] {\n    const tracked = new Map<string, Widget>(this.tracker.widgets.map(w => [w.id, w] as [string, Widget]));\n    let current = tracked.get(id);\n    const stack: Widget[] = [];\n    while (current) {\n      if (tracked.has(current.id)) {\n        stack.push(current);\n      }\n      current = current.parent || undefined;\n    }\n    return stack;\n  }\n\n  protected setTopPanelVisibility(preference: string): void {\n    const hiddenPreferences = ['compact', 'hidden'];\n    this.topPanel.setHidden(hiddenPreferences.includes(preference));\n  }\n\n  /**\n   * Track all widgets that are referenced by the given layout data.\n   */\n  protected registerWithFocusTracker(data: DockLayout.ITabAreaConfig | DockLayout.ISplitAreaConfig | SidePanel.LayoutData | null): void {\n    if (data) {\n      if (data.type === 'tab-area') {\n        for (const widget of data.widgets) {\n          if (widget) {\n            this.track(widget);\n          }\n        }\n      } else if (data.type === 'split-area') {\n        for (const child of data.children) {\n          this.registerWithFocusTracker(child);\n        }\n      } else if (data.type === 'sidepanel' && data.items) {\n        for (const item of data.items) {\n          if (item.widget) {\n            this.track(item.widget);\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Expand the bottom panel. See `expandPanel` regarding the exact behavior.\n   */\n  protected expandBottomPanel(): void {\n    const bottomPanel = this.bottomPanel;\n    if (bottomPanel.isHidden) {\n      let relativeSizes: number[] | undefined;\n      const parent = bottomPanel.parent;\n      if (parent instanceof SplitPanel) {\n        relativeSizes = parent.relativeSizes();\n      }\n      bottomPanel.show();\n      if (relativeSizes && parent instanceof SplitPanel) {\n        // Make sure that the expansion animation starts at the smallest possible size\n        parent.setRelativeSizes(relativeSizes);\n      }\n\n      let size: number | undefined;\n      if (bottomPanel.isEmpty) {\n        bottomPanel.node.style.minHeight = '0';\n        size = this.options.bottomPanel.emptySize;\n      } else if (this.bottomPanelState.lastPanelSize) {\n        size = this.bottomPanelState.lastPanelSize;\n      } else {\n        size = this.getDefaultBottomPanelSize();\n      }\n      if (size) {\n        this.bottomPanelState.expansion = SidePanel.ExpansionState.expanding;\n        this.setBottomPanelSize(size).then(() => {\n          if (this.bottomPanelState.expansion === SidePanel.ExpansionState.expanding) {\n            this.bottomPanelState.expansion = SidePanel.ExpansionState.expanded;\n          }\n        });\n      } else {\n        this.bottomPanelState.expansion = SidePanel.ExpansionState.expanded;\n      }\n    }\n  }\n\n  /**\n   * Determine the default size to apply when the bottom panel is expanded for the first time.\n   */\n  protected getDefaultBottomPanelSize(): number | undefined {\n    const parent = this.bottomPanel.parent;\n    if (parent && parent.isVisible) {\n      return parent.node.clientHeight * this.options.bottomPanel.initialSizeRatio;\n    }\n  }\n\n  /**\n   * Modify the height of the bottom panel. This implementation assumes that the container of the\n   * bottom panel is a `SplitPanel`.\n   */\n  protected setBottomPanelSize(size: number): Promise<void> {\n    const enableAnimation = this.applicationStateService.state === 'ready';\n    const options: SplitPositionOptions = {\n      side: 'bottom',\n      duration: enableAnimation ? this.options.bottomPanel.expandDuration : 0,\n      referenceWidget: this.bottomPanel\n    };\n    const promise = this.splitPositionHandler.setSidePanelSize(this.bottomPanel, size, options);\n    const result = new Promise<void>(resolve => {\n      // Resolve the resulting promise in any case, regardless of whether resizing was successful\n      promise.then(() => resolve(), () => resolve());\n    });\n    this.bottomPanelState.pendingUpdate = this.bottomPanelState.pendingUpdate.then(() => result);\n    return result;\n  }\n\n  /**\n   * Reveal top-level area widget.\n   */\n  protected doRevealWidget(id: string): Widget | undefined {\n    let widget = find(this.mainPanel.widgets(), w => w.id === id);\n    if (!widget) {\n      widget = find(this.bottomPanel.widgets(), w => w.id === id);\n      if (widget) {\n        this.expandBottomPanel();\n      }\n    }\n    if (widget) {\n      const tabBar = this.getTabBarFor(widget);\n      if (tabBar) {\n        tabBar.currentTitle = widget.title;\n      }\n      return widget;\n    }\n    widget = this.leftPanelHandler.expand(id);\n    if (widget) {\n      return widget;\n    }\n    return this.rightPanelHandler.expand(id);\n  }\n\n  /**\n   * Collapse the bottom panel. All contained widgets are hidden, but not closed.\n   * They can be restored by calling `expandBottomPanel`.\n   */\n  protected collapseBottomPanel(): Promise<void> {\n    const bottomPanel = this.bottomPanel;\n    if (bottomPanel.isHidden) {\n      return Promise.resolve();\n    }\n    if (this.bottomPanelState.expansion === SidePanel.ExpansionState.expanded) {\n      const size = this.getBottomPanelSize();\n      if (size) {\n        this.bottomPanelState.lastPanelSize = size;\n      }\n    }\n    this.bottomPanelState.expansion = SidePanel.ExpansionState.collapsed;\n    bottomPanel.hide();\n    return animationFrame();\n  }\n\n  /**\n   * Refresh the toggle button for the bottom panel. This implementation creates a status bar entry\n   * and refers to the command `core.toggle.bottom.panel`.\n   */\n  protected refreshBottomPanelToggleButton(): void {\n    if (this.bottomPanel.isEmpty) {\n      this.statusBar.removeElement(BOTTOM_PANEL_TOGGLE_ID);\n    } else {\n      const element: StatusBarEntry = {\n        text: '$(codicon-window)',\n        alignment: StatusBarAlignment.RIGHT,\n        tooltip: 'Toggle Bottom Panel',\n        command: 'core.toggle.bottom.panel',\n        priority: -1000\n      };\n      this.statusBar.setElement(BOTTOM_PANEL_TOGGLE_ID, element);\n    }\n  }\n\n  /**\n   * Activate top-level area widget.\n   */\n  protected doActivateWidget(id: string): Widget | undefined {\n    let widget = find(this.mainPanel.widgets(), w => w.id === id);\n    if (widget) {\n      this.mainPanel.activateWidget(widget);\n      return widget;\n    }\n    widget = find(this.bottomPanel.widgets(), w => w.id === id);\n    if (widget) {\n      this.expandBottomPanel();\n      this.bottomPanel.activateWidget(widget);\n      return widget;\n    }\n    widget = this.leftPanelHandler.activate(id);\n    if (widget) {\n      return widget;\n    }\n    widget = this.rightPanelHandler.activate(id);\n    if (widget) {\n      return widget;\n    }\n  }\n\n  protected getAreaPanelFor(input: Widget): DockPanel | undefined {\n    const widget = this.toTrackedStack(input.id).pop();\n    if (!widget) {\n      return undefined;\n    }\n    const title = widget.title;\n    const mainPanelTabBar = this.mainPanel.findTabBar(title);\n    if (mainPanelTabBar) {\n      return this.mainPanel;\n    }\n    const bottomPanelTabBar = this.bottomPanel.findTabBar(title);\n    if (bottomPanelTabBar) {\n      return this.bottomPanel;\n    }\n    if (ArrayExt.firstIndexOf(this.leftPanelHandler.tabBar.titles, title) > -1) {\n      return this.leftPanelHandler.dockPanel;\n    }\n    if (ArrayExt.firstIndexOf(this.rightPanelHandler.tabBar.titles, title) > -1) {\n      return this.rightPanelHandler.dockPanel;\n    }\n    return undefined;\n  }\n\n  /**\n   * Compute the current height of the bottom panel. This implementation assumes that the container\n   * of the bottom panel is a `SplitPanel`.\n   */\n  protected getBottomPanelSize(): number | undefined {\n    const parent = this.bottomPanel.parent;\n    if (parent instanceof SplitPanel && parent.isVisible) {\n      const index = parent.widgets.indexOf(this.bottomPanel) - 1;\n      if (index >= 0) {\n        const handle = parent.handles[index];\n        if (!handle.classList.contains('p-mod-hidden')) {\n          const parentHeight = parent.node.clientHeight;\n          return parentHeight - handle.offsetTop;\n        }\n      }\n    }\n  }\n\n  /**\n   * Assemble the application shell layout. Override this method in order to change the arrangement\n   * of the main area and the side panels.\n   */\n  protected createLayout(): Layout {\n    const bottomSplitLayout = this.createSplitLayout(\n        [this.mainPanel, this.bottomPanel],\n        [1, 0],\n        {orientation: 'vertical', spacing: 0}\n    );\n    const panelForBottomArea = new SplitPanel({layout: bottomSplitLayout});\n    panelForBottomArea.id = 'tart-bottom-split-panel';\n\n    const leftRightSplitLayout = this.createSplitLayout(\n        [this.leftPanelHandler.container, panelForBottomArea, this.rightPanelHandler.container],\n        [0, 1, 0],\n        {orientation: 'horizontal', spacing: 0}\n    );\n    const panelForSideAreas = new SplitPanel({layout: leftRightSplitLayout});\n    panelForSideAreas.id = 'tart-left-right-split-panel';\n\n    return this.createBoxLayout(\n        [this.topPanel, panelForSideAreas, this.statusBar],\n        [0, 1, 0],\n        {direction: 'top-to-bottom', spacing: 0}\n    );\n  }\n\n  private findWidgetForNode(widgetNode: HTMLElement, widget: Widget): Widget | undefined {\n    if (widget.node === widgetNode) {\n      return widget;\n    }\n    let result: Widget | undefined;\n    each(widget.children(), child => {\n      result = this.findWidgetForNode(widgetNode, child);\n      return !result;\n    });\n    return result;\n  }\n\n  /**\n   * Focus is taken by a widget through the `onActivateRequest` method. It is up to the\n   * widget implementation which DOM element will get the focus. The default implementation\n   * of Widget does not take any focus. This method can help finding such problems by logging\n   * a warning in case a widget was explicitly activated, but did not trigger a change of the\n   * `activeWidget` property.\n   */\n  private checkActivation(widget: Widget): Widget {\n    const onActivateRequest = widget['onActivateRequest'].bind(widget);\n    widget['onActivateRequest'] = (msg: Message) => {\n      onActivateRequest(msg);\n      this.assertActivated(widget);\n    };\n    return widget;\n  }\n\n  private assertActivated(widget: Widget): void {\n    this.toDisposeOnActivationCheck.dispose();\n\n    const onDispose = () => this.toDisposeOnActivationCheck.dispose();\n    widget.disposed.connect(onDispose);\n    this.toDisposeOnActivationCheck.push(Disposable.create(() => widget.disposed.disconnect(onDispose)));\n\n    let start = 0;\n    const step: FrameRequestCallback = timestamp => {\n      if (document.activeElement && widget.node.contains(document.activeElement)) {\n        return;\n      }\n      if (!start) {\n        start = timestamp;\n      }\n      const delta = timestamp - start;\n      if (delta < this.activationTimeout) {\n        request = window.requestAnimationFrame(step);\n      } else {\n        console.warn(`Widget was activated, but did not accept focus after ${this.activationTimeout}ms: ${widget.id}`);\n      }\n    };\n    let request = window.requestAnimationFrame(step);\n    this.toDisposeOnActivationCheck.push(Disposable.create(() => window.cancelAnimationFrame(request)));\n  }\n\n  /**\n   * Handle a change to the current widget.\n   */\n  private onCurrentChanged(sender: FocusTracker<Widget>, args: FocusTracker.IChangedArgs<Widget>): void {\n    this.currentChanged.emit(args);\n    this.onDidChangeCurrentWidgetEmitter.fire(args);\n  }\n\n  /**\n   * Set the z-index of the given element and its ancestors to the value `z`.\n   */\n  private setZIndex(element: HTMLElement, z: string | null): void {\n    element.style.zIndex = z || '';\n    const parent = element.parentElement;\n    if (parent && parent !== this.node) {\n      this.setZIndex(parent, z);\n    }\n  }\n\n  /**\n   * Handle a change to the active widget.\n   */\n  private onActiveChanged(sender: FocusTracker<Widget>, args: FocusTracker.IChangedArgs<Widget>): void {\n    this.toDisposeOnActiveChanged.dispose();\n    const {newValue, oldValue} = args;\n    if (oldValue) {\n      let w: Widget | null = oldValue;\n      while (w) {\n        // Remove the mark of the previously active widget\n        w.title.className = w.title.className.replace(' tart-mod-active', '');\n        w = w.parent;\n      }\n      // Reset the z-index to the default\n      // eslint-disable-next-line no-null/no-null\n      this.setZIndex(oldValue.node, null);\n    }\n    if (newValue) {\n      let w: Widget | null = newValue;\n      while (w) {\n        // Mark the tab of the active widget\n        w.title.className += ' tart-mod-active';\n        w = w.parent;\n      }\n      // Reveal the title of the active widget in its tab bar\n      const tabBar = this.getTabBarFor(newValue);\n      if (tabBar instanceof ScrollableTabBar) {\n        const index = tabBar.titles.indexOf(newValue.title);\n        if (index >= 0) {\n          tabBar.revealTab(index);\n        }\n      }\n      const panel = this.getAreaPanelFor(newValue);\n      if (panel instanceof TartDockPanel) {\n        panel.markAsCurrent(newValue.title);\n      }\n      // Set the z-index so elements with `position: fixed` contained in the active widget are displayed correctly\n      this.setZIndex(newValue.node, '1');\n\n      // activate another widget if an active widget will be closed\n      const onCloseRequest = newValue['onCloseRequest'];\n      newValue['onCloseRequest'] = msg => {\n        const currentTabBar = this.currentTabBar;\n        if (currentTabBar) {\n          const recentlyUsedInTabBar = currentTabBar['_previousTitle'] as TabBar<Widget>['currentTitle'];\n          if (recentlyUsedInTabBar && recentlyUsedInTabBar.owner !== newValue) {\n            currentTabBar.currentIndex = ArrayExt.firstIndexOf(currentTabBar.titles, recentlyUsedInTabBar);\n            if (currentTabBar.currentTitle) {\n              this.activateWidget(currentTabBar.currentTitle.owner.id);\n            }\n          } else if (!this.activateNextTabInTabBar(currentTabBar)) {\n            if (!this.activatePreviousTabBar(currentTabBar)) {\n              this.activateNextTabBar(currentTabBar);\n            }\n          }\n        }\n        newValue['onCloseRequest'] = onCloseRequest;\n        newValue['onCloseRequest'](msg);\n      };\n      this.toDisposeOnActiveChanged.push(Disposable.create(() => newValue['onCloseRequest'] = onCloseRequest));\n    }\n    this.activeChanged.emit(args);\n    this.onDidChangeActiveWidgetEmitter.fire(args);\n  }\n\n}\n\n/**\n * The namespace for `ApplicationShell` class statics.\n */\nexport namespace ApplicationShell {\n  /**\n   * The areas of the application shell where widgets can reside.\n   */\n  export type Area = 'main' | 'top' | 'left' | 'right' | 'bottom';\n\n  /**\n   * The _side areas_ are those shell areas that can be collapsed and expanded,\n   * i.e. `left`, `right`, and `bottom`.\n   */\n  export function isSideArea(area?: string): area is 'left' | 'right' | 'bottom' {\n    return area === 'left' || area === 'right' || area === 'bottom';\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  export function isValidArea(area?: any): area is ApplicationShell.Area {\n    const areas = ['main', 'top', 'left', 'right', 'bottom'];\n    return (area !== undefined && typeof area === 'string' && areas.includes(area));\n  }\n\n  export interface Options extends Widget.IOptions {\n    bottomPanel: BottomPanelOptions;\n    leftPanel: SidePanel.Options;\n    rightPanel: SidePanel.Options;\n  }\n\n  export interface BottomPanelOptions extends SidePanel.Options {\n  }\n\n  /**\n   * The default values for application shell options.\n   */\n  export const DEFAULT_OPTIONS = Object.freeze(<Options>{\n    bottomPanel: Object.freeze(<BottomPanelOptions>{\n      emptySize: 140,\n      expandThreshold: 160,\n      expandDuration: 0,\n      initialSizeRatio: 0.382\n    }),\n    leftPanel: Object.freeze(<SidePanel.Options>{\n      emptySize: 140,\n      expandThreshold: 140,\n      expandDuration: 0,\n      initialSizeRatio: 0.191\n    }),\n    rightPanel: Object.freeze(<SidePanel.Options>{\n      emptySize: 140,\n      expandThreshold: 140,\n      expandDuration: 0,\n      initialSizeRatio: 0.191\n    })\n  });\n\n  /**\n   * Whether a widget should be opened to the side tab bar relatively to the reference widget.\n   */\n  export type OpenToSideMode = 'open-to-left' | 'open-to-right';\n\n\n  export function isOpenToSideMode(mode: OpenToSideMode | any): mode is OpenToSideMode {\n    return mode === 'open-to-left' || mode === 'open-to-right';\n  }\n\n  /**\n   * Data to save and load the application shell layout.\n   */\n  export interface LayoutData {\n    version?: string | ApplicationShellLayoutVersion,\n    mainPanel?: DockPanel.ILayoutConfig;\n    bottomPanel?: BottomPanelLayoutData;\n    leftPanel?: SidePanel.LayoutData;\n    rightPanel?: SidePanel.LayoutData;\n    activeWidgetId?: string;\n  }\n\n\n  export interface CloseOptions {\n    /**\n     * if optional then a user will be prompted\n     * if undefined then close will be canceled\n     * if true then will be saved on close\n     * if false then won't be saved on close\n     */\n    save?: boolean | undefined\n  }\n\n  /**\n   * Data to save and load the bottom panel layout.\n   */\n  export interface BottomPanelLayoutData {\n    config?: DockPanel.ILayoutConfig;\n    size?: number;\n    expanded?: boolean;\n  }\n\n\n  /**\n   * Options for adding a widget to the application shell.\n   */\n  export interface WidgetOptions extends SidePanel.WidgetOptions {\n    /**\n     * The area of the application shell where the widget will reside.\n     */\n    area?: Area;\n    /**\n     * The insertion mode for adding the widget.\n     *\n     * The default is `'tab-after'`.\n     */\n    mode?: DockLayout.InsertMode | OpenToSideMode\n    /**\n     * The reference widget for the insert location.\n     *\n     * The default is `undefined`.\n     */\n    ref?: Widget;\n  }\n\n  /**\n   * Exposes widgets which activation state should be tracked by shell.\n   */\n  export interface TrackableWidgetProvider {\n    readonly onDidChangeTrackableWidgets?: CommonEvent<Widget[]>\n\n    getTrackableWidgets(): Widget[]\n\n    /**\n     * Make visible and focus a trackable widget for the given id.\n     * If not implemented then `activate` request will be sent to a child widget directly.\n     */\n    activateWidget?(id: string): Widget | undefined;\n\n    /**\n     * Make visible a trackable widget for the given id.\n     * If not implemented then a widget should be always visible when an owner is visible.\n     */\n    revealWidget?(id: string): Widget | undefined;\n  }\n\n  export namespace TrackableWidgetProvider {\n    export function is(widget: object | undefined): widget is TrackableWidgetProvider {\n      return !!widget && 'getTrackableWidgets' in widget;\n    }\n  }\n\n}\n"]}
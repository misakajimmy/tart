{"version":3,"sources":["browser/shell/sidebar-menu-widget.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;AAElF,OAAO,EAAC,MAAM,EAAE,UAAU,EAAC,MAAM,WAAW,CAAC;AAC7C,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAC,WAAW,EAAC,MAAM,YAAY,CAAC;AACvC,OAAO,EAAC,mBAAmB,EAAC,MAAM,0BAA0B,CAAC;AAG7D,MAAM,CAAC,MAAM,2BAA2B,GAAG,MAAM,CAAC,6BAA6B,CAAC,CAAC;AACjF,MAAM,CAAC,MAAM,8BAA8B,GAAG,MAAM,CAAC,gCAAgC,CAAC,CAAC;AAavF;;GAEG;AAEH,IAAa,iBAAiB,GAA9B,MAAa,iBAAkB,SAAQ,WAAW;IAC7B,KAAK,CAAgB;IAGrB,mBAAmB,CAAsB;IAE5D;QACE,KAAK,EAAE,CAAC;QACR,IAAI,CAAC,KAAK,GAAG,EAAE,CAAC;IAClB,CAAC;IAED,OAAO,CAAC,IAAiB;QACvB,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,IAAI,CAAC,EAAE,CAAC,CAAC;QACtD,IAAI,MAAM,EAAE;YACV,OAAO;SACR;QACD,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;QACtB,IAAI,CAAC,MAAM,EAAE,CAAC;IAChB,CAAC;IAED,UAAU,CAAC,MAAc;QACvB,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,CAAC;QACnD,IAAI,IAAI,EAAE;YACR,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACvC,IAAI,KAAK,KAAK,CAAC,CAAC,EAAE;gBAChB,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBAC5B,IAAI,CAAC,MAAM,EAAE,CAAC;aACf;SACF;IACH,CAAC;IAES,OAAO,CAAC,CAA4C,EAAE,QAAkB;QAChF,MAAM,MAAM,GAAG,CAAC,CAAC,aAAa,CAAC,qBAAqB,EAAE,CAAC;QACvD,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC9B,QAAQ;YACR,MAAM,EAAE;gBACN,CAAC,EAAE,MAAM,CAAC,IAAI,GAAG,MAAM,CAAC,KAAK;gBAC7B,CAAC,EAAE,MAAM,CAAC,GAAG;aACd;SACF,CAAC,CAAC;IACL,CAAC;IAES,MAAM;QACd,OAAO,oBAAC,KAAK,CAAC,QAAQ,QACnB,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,KAAK,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,2BACtD,GAAG,EAAE,IAAI,CAAC,EAAE,EACZ,SAAS,EAAE,IAAI,CAAC,SAAS,EACzB,KAAK,EAAE,IAAI,CAAC,KAAK,EACjB,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,EAAE,IAAI,CAAC,QAAQ,CAAC,GAC9C,CAAC,CACY,CAAC;IACpB,CAAC;CACF,CAAA;AAhDC;IADC,MAAM,CAAC,mBAAmB,CAAC;8DACgC;AAJjD,iBAAiB;IAD7B,UAAU,EAAE;GACA,iBAAiB,CAoD7B;SApDY,iBAAiB","file":"../../../src/browser/shell/sidebar-menu-widget.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2020 Alibaba Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {inject, injectable} from 'inversify';\nimport * as React from 'react';\nimport {ReactWidget} from '../widgets';\nimport {ContextMenuRenderer} from '../context-menu-renderer';\nimport {MenuPath} from '../../common/menu';\n\nexport const SidebarTopMenuWidgetFactory = Symbol('SidebarTopMenuWidgetFactory');\nexport const SidebarBottomMenuWidgetFactory = Symbol('SidebarBottomMenuWidgetFactory');\n\nexport interface SidebarMenu {\n  id: string;\n  iconClass: string;\n  title: string;\n  menuPath: MenuPath;\n  /*\n   * Used to sort menus. The lower the value the lower they are placed in the sidebar.\n   */\n  order: number;\n}\n\n/**\n * The menu widget placed on the sidebar.\n */\n@injectable()\nexport class SidebarMenuWidget extends ReactWidget {\n  protected readonly menus: SidebarMenu[];\n\n  @inject(ContextMenuRenderer)\n  protected readonly contextMenuRenderer: ContextMenuRenderer;\n\n  constructor() {\n    super();\n    this.menus = [];\n  }\n\n  addMenu(menu: SidebarMenu): void {\n    const exists = this.menus.find(m => m.id === menu.id);\n    if (exists) {\n      return;\n    }\n    this.menus.push(menu);\n    this.update();\n  }\n\n  removeMenu(menuId: string): void {\n    const menu = this.menus.find(m => m.id === menuId);\n    if (menu) {\n      const index = this.menus.indexOf(menu);\n      if (index !== -1) {\n        this.menus.splice(index, 1);\n        this.update();\n      }\n    }\n  }\n\n  protected onClick(e: React.MouseEvent<HTMLElement, MouseEvent>, menuPath: MenuPath): void {\n    const button = e.currentTarget.getBoundingClientRect();\n    this.contextMenuRenderer.render({\n      menuPath,\n      anchor: {\n        x: button.left + button.width,\n        y: button.top,\n      }\n    });\n  }\n\n  protected render(): React.ReactNode {\n    return <React.Fragment>\n      {this.menus.sort((a, b) => a.order - b.order).map(menu => <i\n          key={menu.id}\n          className={menu.iconClass}\n          title={menu.title}\n          onClick={e => this.onClick(e, menu.menuPath)}\n      />)}\n    </React.Fragment>;\n  }\n}\n"]}
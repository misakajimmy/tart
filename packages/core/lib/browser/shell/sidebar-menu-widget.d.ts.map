{"version":3,"sources":["browser/shell/sidebar-menu-widget.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAGlF,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAC/B,OAAO,EAAC,WAAW,EAAC,MAAM,YAAY,CAAC;AACvC,OAAO,EAAC,mBAAmB,EAAC,MAAM,0BAA0B,CAAC;AAC7D,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAE3C,eAAO,MAAM,2BAA2B,eAAwC,CAAC;AACjF,eAAO,MAAM,8BAA8B,eAA2C,CAAC;AAEvF,MAAM,WAAW,WAAW;IAC1B,EAAE,EAAE,MAAM,CAAC;IACX,SAAS,EAAE,MAAM,CAAC;IAClB,KAAK,EAAE,MAAM,CAAC;IACd,QAAQ,EAAE,QAAQ,CAAC;IAInB,KAAK,EAAE,MAAM,CAAC;CACf;AAED;;GAEG;AACH,qBACa,iBAAkB,SAAQ,WAAW;IAChD,SAAS,CAAC,QAAQ,CAAC,KAAK,EAAE,WAAW,EAAE,CAAC;IAGxC,SAAS,CAAC,QAAQ,CAAC,mBAAmB,EAAE,mBAAmB,CAAC;;IAO5D,OAAO,CAAC,IAAI,EAAE,WAAW,GAAG,IAAI;IAShC,UAAU,CAAC,MAAM,EAAE,MAAM,GAAG,IAAI;IAWhC,SAAS,CAAC,OAAO,CAAC,CAAC,EAAE,KAAK,CAAC,UAAU,CAAC,WAAW,EAAE,UAAU,CAAC,EAAE,QAAQ,EAAE,QAAQ,GAAG,IAAI;IAWzF,SAAS,CAAC,MAAM,IAAI,KAAK,CAAC,SAAS;CAUpC","file":"../../../src/browser/shell/sidebar-menu-widget.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (C) 2020 Alibaba Inc. and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {inject, injectable} from 'inversify';\nimport * as React from 'react';\nimport {ReactWidget} from '../widgets';\nimport {ContextMenuRenderer} from '../context-menu-renderer';\nimport {MenuPath} from '../../common/menu';\n\nexport const SidebarTopMenuWidgetFactory = Symbol('SidebarTopMenuWidgetFactory');\nexport const SidebarBottomMenuWidgetFactory = Symbol('SidebarBottomMenuWidgetFactory');\n\nexport interface SidebarMenu {\n  id: string;\n  iconClass: string;\n  title: string;\n  menuPath: MenuPath;\n  /*\n   * Used to sort menus. The lower the value the lower they are placed in the sidebar.\n   */\n  order: number;\n}\n\n/**\n * The menu widget placed on the sidebar.\n */\n@injectable()\nexport class SidebarMenuWidget extends ReactWidget {\n  protected readonly menus: SidebarMenu[];\n\n  @inject(ContextMenuRenderer)\n  protected readonly contextMenuRenderer: ContextMenuRenderer;\n\n  constructor() {\n    super();\n    this.menus = [];\n  }\n\n  addMenu(menu: SidebarMenu): void {\n    const exists = this.menus.find(m => m.id === menu.id);\n    if (exists) {\n      return;\n    }\n    this.menus.push(menu);\n    this.update();\n  }\n\n  removeMenu(menuId: string): void {\n    const menu = this.menus.find(m => m.id === menuId);\n    if (menu) {\n      const index = this.menus.indexOf(menu);\n      if (index !== -1) {\n        this.menus.splice(index, 1);\n        this.update();\n      }\n    }\n  }\n\n  protected onClick(e: React.MouseEvent<HTMLElement, MouseEvent>, menuPath: MenuPath): void {\n    const button = e.currentTarget.getBoundingClientRect();\n    this.contextMenuRenderer.render({\n      menuPath,\n      anchor: {\n        x: button.left + button.width,\n        y: button.top,\n      }\n    });\n  }\n\n  protected render(): React.ReactNode {\n    return <React.Fragment>\n      {this.menus.sort((a, b) => a.order - b.order).map(menu => <i\n          key={menu.id}\n          className={menu.iconClass}\n          title={menu.title}\n          onClick={e => this.onClick(e, menu.menuPath)}\n      />)}\n    </React.Fragment>;\n  }\n}\n"]}
{"version":3,"sources":["browser/shell/side-panel-handler.ts"],"names":[],"mappings":";;;;;;;AAAA,OAAO,EAAC,SAAS,EAAE,QAAQ,EAAa,KAAK,EAAE,WAAW,EAAE,UAAU,EAAwB,MAAM,iBAAiB,CAAC;AACtH,OAAO,EAAC,UAAU,EAAkB,qBAAqB,EAAC,MAAM,YAAY,CAAC;AAC7E,OAAO,EAAC,gBAAgB,EAAC,MAAM,oBAAoB,CAAC;AACpD,OAAO,EAAC,8BAA8B,EAAqB,2BAA2B,EAAC,MAAM,uBAAuB,CAAC;AACrH,OAAO,EAAC,gBAAgB,EAAC,MAAM,sBAAsB,CAAC;AACtD,OAAO,EAAC,aAAa,EAAC,MAAM,mBAAmB,CAAC;AAEhD,OAAO,EAAC,MAAM,EAAE,UAAU,EAAC,MAAM,WAAW,CAAC;AAE7C,OAAO,EAAC,IAAI,EAAE,GAAG,EAAE,IAAI,EAAE,OAAO,EAAC,MAAM,mBAAmB,CAAC;AAC3D,OAAO,EAAC,+BAA+B,EAAC,MAAM,+BAA+B,CAAC;AAC9E,OAAO,EAAC,UAAU,EAAE,oBAAoB,EAAC,MAAM,cAAc,CAAC;AAC9D,OAAO,EAAC,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAC3C,OAAO,EAAC,IAAI,EAAC,MAAM,kBAAkB,CAAC;AACtC,OAAO,EAAC,cAAc,EAAC,MAAM,YAAY,CAAC;AAC1C,OAAO,EAAC,oBAAoB,EAAuB,MAAM,gBAAgB,CAAC;AAE1E,OAAO,EAAgB,oBAAoB,EAAE,qBAAqB,EAAC,MAAM,mBAAmB,CAAC;AAC7F,OAAO,EAAC,mBAAmB,EAAC,MAAM,0BAA0B,CAAC;AAE7D,8DAA8D;AAC9D,MAAM,CAAC,MAAM,qBAAqB,GAAG,gBAAgB,CAAC;AAEtD,qDAAqD;AACrD,MAAM,eAAe,GAAG,oBAAoB,CAAC;AAE7C,oEAAoE;AACpE,MAAM,CAAC,MAAM,yBAAyB,GAAa,CAAC,2BAA2B,CAAC,CAAC;AAEjF,MAAM,CAAC,MAAM,uBAAuB,GAAG,MAAM,CAAC,yBAAyB,CAAC,CAAC;AAEzE,MAAM,CAAC,MAAM,+BAA+B,GAAa,CAAC,iCAAiC,CAAC,CAAC;AAG7F,IAAa,gBAAgB,wBAA7B,MAAa,gBAAgB;IAE3B;;;OAGG;IACO,MAAM,CAAU,YAAY,GAAG,IAAI,gBAAgB,CAA6B;QACxF,IAAI,EAAE,eAAe;QACrB,MAAM,EAAE,GAAG,EAAE,CAAC,SAAS;KACxB,CAAC,CAAC;IAEH;;;;;OAKG;IACH,MAAM,CAAa;IACnB;;;;OAIG;IACH,OAAO,CAAoB;IAC3B;;;;OAIG;IACH,UAAU,CAAoB;IAC9B;;OAEG;IACH,OAAO,CAAmB;IAC1B;;;OAGG;IACH,SAAS,CAAgB;IACzB;;;OAGG;IACH,SAAS,CAAQ;IACjB;;OAEG;IACM,KAAK,GAAoB;QAChC,KAAK,EAAE,IAAI;QACX,SAAS,EAAE,SAAS,CAAC,cAAc,CAAC,SAAS;QAC7C,aAAa,EAAE,OAAO,CAAC,OAAO,EAAE;KACjC,CAAC;IAEF;;;OAGG;IACO,IAAI,CAAmB;IACjC;;OAEG;IACO,OAAO,CAAoB;IAEI,qBAAqB,CAAwB;IACvC,uBAAuB,CAA6B;IAC3D,oBAAoB,CAAsB;IACzC,qBAAqB,CAAuB;IACnC,0BAA0B,CAAgC;IACpE,oBAAoB,CAAuB;IACvB,uBAAuB,CAAkC;IAGlG,mBAAmB,CAAsB;IACzC,4BAA4B,GAAG,IAAI,oBAAoB,EAAE,CAAC;IAE7E;;OAEG;IACH,MAAM,CAAC,IAAsB,EAAE,OAA0B;QACvD,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,oBAAoB,EAAE,CAAC;QAC3C,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;QACjD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACpC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACxC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QAExC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED;;;;OAIG;IACH,MAAM,CAAC,IAAY;QACjB,IAAI,IAAI,CAAC,SAAS,CAAC,QAAQ,EAAE;YAC3B,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC;SACzB;IACH,CAAC;IAED;;;;OAIG;IACH,SAAS,CAAC,MAAc,EAAE,OAAgC;QACxD,IAAI,OAAO,CAAC,IAAI,EAAE;YAChB,kBAAgB,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,CAAC;SACzD;QACD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;IACnC,CAAC;IAED;;OAEG;IACH,QAAQ;QACN,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;YAC5B,2CAA2C;YAC3C,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;SACjC;aAAM;YACL,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;QACD,OAAO,cAAc,EAAE,CAAC;IAC1B,CAAC;IAED;;OAEG;IACH,OAAO;QACL,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,MAAM,MAAM,GAAG,SAAS,CAAC,MAAM,CAAC;QAChC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;QAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;QACjC,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,KAAK,CAAC,CAAC;QAC3C,MAAM,YAAY,GAAG,MAAM,CAAC,YAAY,CAAC;QACzC,2CAA2C;QAC3C,MAAM,aAAa,GAAG,YAAY,KAAK,IAAI,CAAC;QAC5C,IAAI,aAAmC,CAAC;QAExC,IAAI,aAAa,EAAE;YACjB,SAAS,CAAC,QAAQ,CAAC,eAAe,CAAC,CAAC;YACpC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,SAAS,CAAC,cAAc,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,KAAK,EAAE;gBACnF,oCAAoC;gBACpC,MAAM,IAAI,GAAG,IAAI,CAAC,YAAY,EAAE,CAAC;gBACjC,IAAI,IAAI,EAAE;oBACR,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC;iBACjC;aACF;YACD,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC;SAC3D;aAAM;YACL,SAAS,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YACvC,IAAI,IAAwB,CAAC;YAC7B,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,SAAS,CAAC,cAAc,CAAC,QAAQ,EAAE;gBAC9D,IAAI,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE;oBAC5B,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;iBACjC;qBAAM;oBACL,IAAI,GAAG,IAAI,CAAC,mBAAmB,EAAE,CAAC;iBACnC;aACF;YACD,IAAI,IAAI,EAAE;gBACR,oEAAoE;gBACpE,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC;gBAC1D,IAAI,MAAM,YAAY,UAAU,EAAE;oBAChC,aAAa,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;iBACxC;gBACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;oBAChC,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,SAAS,CAAC,cAAc,CAAC,SAAS,EAAE;wBAC/D,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;qBAC1D;gBACH,CAAC,CAAC,CAAC;aACJ;iBAAM;gBACL,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;aAC1D;SACF;QACD,SAAS,CAAC,SAAS,CAAC,OAAO,IAAI,aAAa,CAAC,CAAC;QAC9C,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;QAC1B,SAAS,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QACnC,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,OAAO,CAAC;QAC3B,IAAI,YAAY,EAAE;YAChB,SAAS,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;SAC5C;QACD,IAAI,aAAa,IAAI,MAAM,YAAY,UAAU,EAAE;YACjD,8EAA8E;YAC9E,MAAM,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;SACxC;IACH,CAAC;IAED;;;OAGG;IACH,aAAa;QACX,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;QAC9C,MAAM,KAAK,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,CAAC,EAAE,CAAC,CAAsB;YAC3E,MAAM,EAAE,KAAK,CAAC,KAAK;YACnB,IAAI,EAAE,kBAAgB,CAAC,YAAY,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,CAAC;YACpD,QAAQ,EAAE,KAAK,KAAK,YAAY;SACjC,CAAA,CAAC,CAAC,CAAC;QACJ,2CAA2C;QAC3C,MAAM,IAAI,GAAG,YAAY,KAAK,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;QACpF,OAAO,EAAC,IAAI,EAAE,WAAW,EAAE,KAAK,EAAE,IAAI,EAAC,CAAC;IAC1C,CAAC;IAED;;OAEG;IACH,aAAa,CAAC,UAAgC;QAC5C,2CAA2C;QAC3C,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,IAAI,CAAC;QAEhC,IAAI,YAAuC,CAAC;QAC5C,IAAI,UAAU,CAAC,KAAK,EAAE;YACpB,KAAK,MAAM,EAAC,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAC,IAAI,UAAU,CAAC,KAAK,EAAE;gBACvD,IAAI,MAAM,EAAE;oBACV,IAAI,IAAI,EAAE;wBACR,kBAAgB,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;qBACjD;oBACD,IAAI,QAAQ,EAAE;wBACZ,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC;qBAC7B;oBACD,+EAA+E;oBAC/E,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;iBAClC;aACF;SACF;QACD,IAAI,UAAU,CAAC,IAAI,EAAE;YACnB,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,UAAU,CAAC,IAAI,CAAC;SAC5C;QAED,iFAAiF;QACjF,6DAA6D;QAC7D,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,YAAY,CAAC;SACzC;aAAM;YACL,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;IAED;;;;OAIG;IACH,QAAQ,CAAC,EAAU;QACjB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAC/B,IAAI,MAAM,EAAE;YACV,MAAM,CAAC,QAAQ,EAAE,CAAC;SACnB;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;;;;OAMG;IACH,MAAM,CAAC,EAAW;QAChB,IAAI,EAAE,EAAE;YACN,MAAM,MAAM,GAAG,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC;YAChE,IAAI,MAAM,EAAE;gBACV,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC;aACzC;YACD,OAAO,MAAM,CAAC;SACf;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE;YACnC,OAAO,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC;SACvC;aAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;YACxC,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,kBAAkB,CAAC;YAC1C,IAAI,CAAC,KAAK,EAAE;gBACV,KAAK,GAAG,CAAC,CAAC;aACX;iBAAM,IAAI,KAAK,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE;gBAC7C,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;aACvC;YACD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;YACxC,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,KAAK,CAAC;YACjC,OAAO,KAAK,CAAC,KAAK,CAAC;SACpB;aAAM;YACL,+DAA+D;YAC/D,gEAAgE;YAChE,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC,cAAc,CAAC,SAAS,CAAC;YAC1D,IAAI,aAAmC,CAAC;YACxC,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;YACrC,IAAI,MAAM,YAAY,UAAU,EAAE;gBAChC,aAAa,GAAG,MAAM,CAAC,aAAa,EAAE,CAAC;aACxC;YACD,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,eAAe,CAAC,CAAC;YAC5C,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;YACnB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,QAAQ,GAAG,GAAG,CAAC;YACzC,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,CAAC;YACtB,IAAI,aAAa,IAAI,MAAM,YAAY,UAAU,EAAE;gBACjD,6DAA6D;gBAC7D,MAAM,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;aACxC;YACD,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;gBAClD,IAAI,IAAI,CAAC,KAAK,CAAC,SAAS,KAAK,SAAS,CAAC,cAAc,CAAC,SAAS,EAAE;oBAC/D,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,SAAS,CAAC,cAAc,CAAC,QAAQ,CAAC;iBAC1D;YACH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAES,aAAa;QACrB,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,MAAM,cAAc,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACpD,MAAM,OAAO,GAAG,IAAI,UAAU,CAAC;YAC7B,kBAAkB;YAClB,WAAW,EAAE,IAAI,KAAK,MAAM,IAAI,IAAI,KAAK,OAAO,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,YAAY;YAC5E,cAAc,EAAE,MAAM;YACtB,cAAc,EAAE,qBAAqB;YACrC,aAAa,EAAE,KAAK;YACpB,WAAW,EAAE,IAAI;YACjB,QAAQ,EAAE,cAAc;YACxB,qBAAqB;YACrB,QAAQ,EAAE,CAAC,YAAY,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,CAAC;YACtD,gBAAgB,EAAE,IAAI;YACtB,mBAAmB,EAAE,CAAC;YACtB,eAAe,EAAE,IAAI;SACtB,CAAC,CAAC;QACH,cAAc,CAAC,MAAM,GAAG,OAAO,CAAC;QAChC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,cAAc,CAAC,OAAO,EAAE,CAAC,CAAC;QACzD,cAAc,CAAC,eAAe,GAAG,yBAAyB,CAAC;QAC3D,OAAO,CAAC,QAAQ,CAAC,WAAW,GAAG,IAAI,CAAC,CAAC;QACrC,OAAO,CAAC,QAAQ,CAAC,qBAAqB,CAAC,CAAC;QAExC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAC,KAAK,EAAC,EAAE,EAAE;YAC3C,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC;YAC3B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,KAAK,MAAM,CAAC,EAAE;gBACtD,IAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;aAClC;QACH,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,OAAO,CAAC,oBAAoB,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAC,KAAK,EAAC,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC;QAClF,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,EAAC,KAAK,EAAC,EAAE,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;QAC5E,OAAO,CAAC,iBAAiB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,QAAQ,EAAE,EAAE,IAAI,CAAC,CAAC;QAC/D,OAAO,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,CAAC,CAAC;QAC/D,OAAO,CAAC,kBAAkB,CAAC,OAAO,CAAC,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,CAAC;QACpE,OAAO,OAAO,CAAC;IACjB,CAAC;IAES,oBAAoB;QAC5B,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,uBAAuB,CAAC,CAAC;IAC9D,CAAC;IAES,iBAAiB,CAA8B,OAAgB;QACvE,MAAM,IAAI,GAAG,OAAO,EAAE,CAAC;QACvB,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,CAAC;QACnC,OAAO,IAAI,CAAC;IACd,CAAC;IAES,uBAAuB;QAC/B,OAAO,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC;IACjE,CAAC;IAES,aAAa;QACrB,MAAM,OAAO,GAAG,IAAI,gBAAgB,CAAC,IAAI,CAAC,qBAAqB,EAAE,IAAI,CAAC,oBAAoB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;QACvG,OAAO,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC,CAAC,CAAC;QACpD,OAAO,OAAO,CAAC;IACjB,CAAC;IAES,eAAe,CAAC,CAAa;QACrC,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;QACvC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO;SACR;QACD,CAAC,CAAC,eAAe,EAAE,CAAC;QACpB,CAAC,CAAC,cAAc,EAAE,CAAC;QAEnB,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;YAC9B,IAAI,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC;YACnB,QAAQ,EAAE,+BAA+B;YACzC,MAAM,EAAE,CAAC;SACV,CAAC,CAAC;IACL,CAAC;IAES,eAAe;QACvB,MAAM,UAAU,GAAG,IAAI,SAAS,CAAC,EAAC,SAAS,EAAE,eAAe,EAAE,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;QAC3E,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;QACrC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QACnC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC,CAAC;QACvC,UAAU,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QACrC,MAAM,YAAY,GAAG,IAAI,QAAQ,CAAC,EAAC,MAAM,EAAE,UAAU,EAAC,CAAC,CAAC;QAExD,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,SAA8B,CAAC;QACnC,QAAQ,IAAI,EAAE;YACZ,KAAK,MAAM;gBACT,SAAS,GAAG,eAAe,CAAC;gBAC5B,MAAM;YACR,KAAK,OAAO;gBACV,SAAS,GAAG,eAAe,CAAC;gBAC5B,MAAM;YACR;gBACE,MAAM,IAAI,KAAK,CAAC,oBAAoB,GAAG,IAAI,CAAC,CAAC;SAChD;QACD,MAAM,eAAe,GAAG,IAAI,SAAS,CAAC,EAAC,SAAS,EAAE,OAAO,EAAE,CAAC,EAAC,CAAC,CAAC;QAC/D,MAAM,sBAAsB,GAAG,IAAI,WAAW,EAAE,CAAC;QACjD,MAAM,gBAAgB,GAAG,IAAI,KAAK,CAAC,EAAC,MAAM,EAAE,sBAAsB,EAAC,CAAC,CAAC;QACrE,gBAAgB,CAAC,QAAQ,CAAC,4BAA4B,CAAC,CAAC;QACxD,sBAAsB,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC/C,sBAAsB,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAC9C,sBAAsB,CAAC,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;QAElD,QAAQ,CAAC,UAAU,CAAC,gBAAgB,EAAE,CAAC,CAAC,CAAC;QACzC,QAAQ,CAAC,UAAU,CAAC,YAAY,EAAE,CAAC,CAAC,CAAC;QACrC,eAAe,CAAC,SAAS,CAAC,gBAAgB,CAAC,CAAC;QAC5C,eAAe,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;QACxC,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,EAAC,MAAM,EAAE,eAAe,EAAC,CAAC,CAAC;QACzD,QAAQ,CAAC,EAAE,GAAG,OAAO,GAAG,IAAI,GAAG,gBAAgB,CAAC;QAChD,OAAO,QAAQ,CAAC;IAClB,CAAC;IAES,eAAe;QACvB,MAAM,SAAS,GAAG,IAAI,aAAa,CAAC;YAClC,IAAI,EAAE,iBAAiB;SACxB,CAAC,CAAC;QACH,SAAS,CAAC,EAAE,GAAG,OAAO,GAAG,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC;QACnD,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAEtC,SAAS,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,MAAM,EAAE,EAAE;YACnD,IAAI,CAAC,MAAM,CAAC,YAAY,GAAG,MAAM,CAAC,KAAK,CAAC;QAC1C,CAAC,EAAE,IAAI,CAAC,CAAC;QACT,SAAS,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,CAAC;QACxD,SAAS,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,CAAC,eAAe,EAAE,IAAI,CAAC,CAAC;QAC5D,OAAO,SAAS,CAAC;IACnB,CAAC;IAED;;;OAGG;IACO,aAAa,CAAC,MAAiB,EAAE,MAAc;QACvD,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;QAClC,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,EAAE;YAC1C,MAAM,IAAI,GAAG,kBAAgB,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;YACvD,IAAI,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC;YAC1B,IAAI,IAAI,KAAK,SAAS,EAAE;gBACtB,KAAK,IAAI,CAAC,GAAG,KAAK,GAAG,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,EAAE;oBACnC,MAAM,CAAC,GAAG,kBAAgB,CAAC,YAAY,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC;oBAC7D,IAAI,CAAC,KAAK,SAAS,IAAI,CAAC,GAAG,IAAI,EAAE;wBAC/B,KAAK,GAAG,CAAC,CAAC;qBACX;iBACF;aACF;YACD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAC,KAAK,CAAC,CAAC;YAC3C,IAAI,CAAC,OAAO,EAAE,CAAC;SAChB;IACH,CAAC;IAED;;;OAGG;IACO,eAAe,CAAC,MAAiB,EAAE,MAAc;QACzD,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED;;OAEG;IACO,mBAAmB;QAC3B,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACrC,IAAI,MAAM,IAAI,MAAM,CAAC,SAAS,EAAE;YAC9B,OAAO,MAAM,CAAC,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,OAAO,CAAC,gBAAgB,CAAC;SAChE;IACH,CAAC;IAED;;;OAGG;IACO,YAAY,CAAC,IAAY;QACjC,MAAM,eAAe,GAAG,IAAI,CAAC,uBAAuB,CAAC,KAAK,KAAK,OAAO,CAAC;QACvE,MAAM,OAAO,GAAyB;YACpC,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,QAAQ,EAAE,eAAe,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;YAC3D,eAAe,EAAE,IAAI,CAAC,SAAS;SAChC,CAAC;QACF,MAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QAC1F,MAAM,MAAM,GAAG,IAAI,OAAO,CAAO,OAAO,CAAC,EAAE;YACzC,2FAA2F;YAC3F,OAAO,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,OAAO,EAAE,EAAE,GAAG,EAAE,CAAC,OAAO,EAAE,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,IAAI,CAAC,KAAK,CAAC,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC,MAAM,CAAC,CAAC;QACvE,OAAO,MAAM,CAAC;IAChB,CAAC;IAED;;;OAGG;IACO,YAAY;QACpB,MAAM,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC;QACrC,IAAI,MAAM,YAAY,UAAU,IAAI,MAAM,CAAC,SAAS,EAAE;YACpD,MAAM,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;YACrD,IAAI,IAAI,CAAC,IAAI,KAAK,MAAM,EAAE;gBACxB,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;gBACrC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;oBAC9C,OAAO,MAAM,CAAC,UAAU,CAAC;iBAC1B;aACF;iBAAM,IAAI,IAAI,CAAC,IAAI,KAAK,OAAO,EAAE;gBAChC,MAAM,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;gBACzC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE;oBAC9C,MAAM,WAAW,GAAG,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC;oBAC5C,OAAO,WAAW,GAAG,MAAM,CAAC,UAAU,CAAC;iBACxC;aACF;SACF;IACH,CAAC;IAED,+CAA+C;IACrC,kBAAkB,GAAG,GAAS,EAAE;QACxC,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC;QAC7D,IAAI,CAAC,OAAO,CAAC,YAAY,GAAG,YAAY,IAAI,SAAS,CAAC;IACxD,CAAC,CAAC;IAEF;;;OAGG;IACO,mBAAmB,CAAC,MAAkB,EAAE,EAChD,YAAY,EACZ,YAAY,EACuB;QACnC,IAAI,CAAC,4BAA4B,CAAC,OAAO,EAAE,CAAC;QAC5C,IAAI,YAAY,EAAE;YAChB,IAAI,CAAC,kBAAkB,EAAE,CAAC;YAC1B,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YACtD,IAAI,CAAC,4BAA4B,CAAC,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,YAAY,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC,CAAC,CAAC;SAC3H;QACD,IAAI,YAAY,IAAI,CAAC,EAAE;YACrB,IAAI,CAAC,KAAK,CAAC,kBAAkB,GAAG,YAAY,CAAC;YAC7C,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,OAAO,EAAE,CAAC;IACjB,CAAC;IAED;;;OAGG;IACO,oBAAoB,CAAC,MAAkB,EAClB,EAAC,KAAK,EAAE,GAAG,EAAE,OAAO,EAAE,OAAO,EAAyC;QACnG,0CAA0C;QAC1C,MAAM,CAAC,YAAY,EAAE,CAAC;QAEtB,oDAAoD;QACpD,MAAM,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,IAAI,CAAgB,CAAC;QACrD,SAAS,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QAC3B,SAAS,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;QAC5B,MAAM,KAAK,GAAG,SAAS,CAAC,sBAAsB,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAgB,CAAC;QACtF,KAAK,CAAC,KAAK,CAAC,KAAK,GAAG,EAAE,CAAC;QACvB,KAAK,CAAC,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC;QAExB,oEAAoE;QACpE,MAAM,QAAQ,GAAG,IAAI,QAAQ,EAAE,CAAC;QAChC,QAAQ,CAAC,OAAO,CAAC,yCAAyC,EAAE,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/E,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC;YACpB,QAAQ;YACR,SAAS,EAAE,SAAS;YACpB,cAAc,EAAE,MAAM;YACtB,gBAAgB,EAAE,MAAM;SACzB,CAAC,CAAC;QAEH,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC;QAClC,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,IAAI,CAAC,GAAG,EAAE;YACrC,kDAAkD;YAClD,GAAG,CAAC,SAAS,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC;QACvC,CAAC,CAAC,CAAC;IACL,CAAC;CACF,CAAA;AAhgBgC;IAA9B,MAAM,CAAC,qBAAqB,CAAC;+DAAwD;AACjD;IAApC,MAAM,CAAC,2BAA2B,CAAC;iEAA+D;AACrE;IAA7B,MAAM,CAAC,oBAAoB,CAAC;8DAAqD;AACnD;IAA9B,MAAM,CAAC,qBAAqB,CAAC;+DAAuD;AAC7C;IAAvC,MAAM,CAAC,8BAA8B,CAAC;oEAAqE;AAC9E;IAA7B,MAAM,CAAC,oBAAoB,CAAC;8DAAsD;AAC1C;IAAxC,MAAM,CAAC,+BAA+B,CAAC;iEAA6E;AAGrH;IADC,MAAM,CAAC,mBAAmB,CAAC;6DACgC;AAxEjD,gBAAgB;IAD5B,UAAU,EAAE;GACA,gBAAgB,CA+jB5B;SA/jBY,gBAAgB;AAikB7B,MAAM,KAAW,SAAS,CAqFzB;AArFD,WAAiB,SAAS;IA+ExB,IAAY,cAKX;IALD,WAAY,cAAc;QACxB,yCAAuB,CAAA;QACvB,yCAAuB,CAAA;QACvB,uCAAqB,CAAA;QACrB,2CAAyB,CAAA;IAC3B,CAAC,EALW,cAAc,GAAd,wBAAc,KAAd,wBAAc,QAKzB;AACH,CAAC,EArFgB,SAAS,KAAT,SAAS,QAqFzB","file":"../../../src/browser/shell/side-panel-handler.js","sourcesContent":["import {BoxLayout, BoxPanel, DockPanel, Panel, PanelLayout, SplitPanel, TabBar, Title, Widget} from '@lumino/widgets';\nimport {SideTabBar, TabBarRenderer, TabBarRendererFactory} from './tab-bars';\nimport {AttachedProperty} from '@lumino/properties';\nimport {SidebarBottomMenuWidgetFactory, SidebarMenuWidget, SidebarTopMenuWidgetFactory} from './sidebar-menu-widget';\nimport {SidePanelToolbar} from './side-panel-toolbar';\nimport {TartDockPanel} from './tart-dock-panel';\nimport {SidebarTopMenuWidget} from './sidebar-top-menu-widget';\nimport {inject, injectable} from 'inversify';\nimport {MenuPath} from '../../common/menu';\nimport {find, map, some, toArray} from '@lumino/algorithm';\nimport {FrontendApplicationStateService} from '../frontend-application-state';\nimport {Disposable, DisposableCollection} from '../../common';\nimport {MimeData} from '@lumino/coreutils';\nimport {Drag} from '@lumino/dragdrop';\nimport {animationFrame} from '../browser';\nimport {SplitPositionHandler, SplitPositionOptions} from './split-panels';\nimport {SidebarBottomMenuWidget} from './sidebar-bottom-menu-widget';\nimport {TabBarToolbar, TabBarToolbarFactory, TabBarToolbarRegistry} from './tab-bar-toolbar';\nimport {ContextMenuRenderer} from '../context-menu-renderer';\n\n/** The class name added to the left and right area panels. */\nexport const LEFT_RIGHT_AREA_CLASS = 'tart-app-sides';\n\n/** The class name added to collapsed side panels. */\nconst COLLAPSED_CLASS = 'tart-mod-collapsed';\n\n/** Menu path for tab bars used throughout the application shell. */\nexport const SHELL_TABBAR_CONTEXT_MENU: MenuPath = ['shell-tabbar-context-menu'];\n\nexport const SidePanelHandlerFactory = Symbol('SidePanelHandlerFactory');\n\nexport const SIDE_PANEL_TOOLBAR_CONTEXT_MENU: MenuPath = ['SIDE_PANEL_TOOLBAR_CONTEXT_MENU'];\n\n@injectable()\nexport class SidePanelHandler {\n\n  /**\n   * A property that can be attached to widgets in order to determine the insertion index\n   * of their title in the tab bar.\n   */\n  protected static readonly rankProperty = new AttachedProperty<Widget, number | undefined>({\n    name: 'sidePanelRank',\n    create: () => undefined\n  });\n\n  /**\n   * The tab bar displays the titles of the widgets in the side panel. Visibility of the widgets\n   * is controlled entirely through tab selection: a widget is revealed by setting the `currentTitle`\n   * accordingly in the tab bar, and the panel is hidden by setting that property to `null`. The\n   * tab bar itself remains visible as long as there is at least one widget.\n   */\n  tabBar: SideTabBar;\n  /**\n   * The menu placed on the sidebar top.\n   * Displayed as icons.\n   * Open menus when on clicks.\n   */\n  topMenu: SidebarMenuWidget;\n  /**\n   * The menu placed on the sidebar bottom.\n   * Displayed as icons.\n   * Open menus when on clicks.\n   */\n  bottomMenu: SidebarMenuWidget;\n  /**\n   * A tool bar, which displays a title and widget specific command buttons.\n   */\n  toolBar: SidePanelToolbar;\n  /**\n   * The widget container is a dock panel in `single-document` mode, which means that the panel\n   * cannot be split.\n   */\n  dockPanel: TartDockPanel;\n  /**\n   * The panel that contains the tab bar and the dock panel. This one is hidden whenever the dock\n   * panel is empty.\n   */\n  container: Panel;\n  /**\n   * The current state of the side panel.\n   */\n  readonly state: SidePanel.State = {\n    empty: true,\n    expansion: SidePanel.ExpansionState.collapsed,\n    pendingUpdate: Promise.resolve()\n  };\n\n  /**\n   * The shell area where the panel is placed. This property should not be modified directly, but\n   * only by calling `create`.\n   */\n  protected side: 'left' | 'right';\n  /**\n   * Options that control the behavior of the side panel.\n   */\n  protected options: SidePanel.Options;\n\n  @inject(TabBarToolbarRegistry) protected tabBarToolBarRegistry: TabBarToolbarRegistry;\n  @inject(SidebarTopMenuWidgetFactory) protected sidebarTopWidgetFactory: () => SidebarTopMenuWidget;\n  @inject(TabBarToolbarFactory) protected tabBarToolBarFactory: () => TabBarToolbar;\n  @inject(TabBarRendererFactory) protected tabBarRendererFactory: () => TabBarRenderer;\n  @inject(SidebarBottomMenuWidgetFactory) protected sidebarBottomWidgetFactory: () => SidebarBottomMenuWidget;\n  @inject(SplitPositionHandler) protected splitPositionHandler: SplitPositionHandler;\n  @inject(FrontendApplicationStateService) protected readonly applicationStateService: FrontendApplicationStateService;\n\n  @inject(ContextMenuRenderer)\n  protected readonly contextMenuRenderer: ContextMenuRenderer;\n  protected readonly toDisposeOnCurrentTabChanged = new DisposableCollection();\n\n  /**\n   * Create the side bar and dock panel widgets.\n   */\n  create(side: 'left' | 'right', options: SidePanel.Options): void {\n    this.side = side;\n    this.options = options;\n    this.topMenu = this.createSidebarTopMenu();\n    this.tabBar = this.createSideBar();\n    this.bottomMenu = this.createSidebarBottomMenu();\n    this.toolBar = this.createToolbar();\n    this.dockPanel = this.createSidePanel();\n    this.container = this.createContainer();\n\n    this.refresh();\n  }\n\n  /**\n   * Sets the size of the side panel.\n   *\n   * @param size the desired size (width) of the panel in pixels.\n   */\n  resize(size: number): void {\n    if (this.dockPanel.isHidden) {\n      this.state.lastPanelSize = size;\n    } else {\n      this.setPanelSize(size);\n    }\n  }\n\n  /**\n   * Add a widget and its title to the dock panel and side bar.\n   *\n   * If the widget is already added, it will be moved.\n   */\n  addWidget(widget: Widget, options: SidePanel.WidgetOptions): void {\n    if (options.rank) {\n      SidePanelHandler.rankProperty.set(widget, options.rank);\n    }\n    this.dockPanel.addWidget(widget);\n  }\n\n  /**\n   * Collapse the sidebar so no items are expanded.\n   */\n  collapse(): Promise<void> {\n    if (this.tabBar.currentTitle) {\n      // eslint-disable-next-line no-null/no-null\n      this.tabBar.currentTitle = null;\n    } else {\n      this.refresh();\n    }\n    return animationFrame();\n  }\n\n  /**\n   * Refresh the visibility of the side bar and dock panel.\n   */\n  refresh(): void {\n    const container = this.container;\n    const parent = container.parent;\n    const tabBar = this.tabBar;\n    const dockPanel = this.dockPanel;\n    const isEmpty = tabBar.titles.length === 0;\n    const currentTitle = tabBar.currentTitle;\n    // eslint-disable-next-line no-null/no-null\n    const hideDockPanel = currentTitle === null;\n    let relativeSizes: number[] | undefined;\n\n    if (hideDockPanel) {\n      container.addClass(COLLAPSED_CLASS);\n      if (this.state.expansion === SidePanel.ExpansionState.expanded && !this.state.empty) {\n        // Update the lastPanelSize property\n        const size = this.getPanelSize();\n        if (size) {\n          this.state.lastPanelSize = size;\n        }\n      }\n      this.state.expansion = SidePanel.ExpansionState.collapsed;\n    } else {\n      container.removeClass(COLLAPSED_CLASS);\n      let size: number | undefined;\n      if (this.state.expansion !== SidePanel.ExpansionState.expanded) {\n        if (this.state.lastPanelSize) {\n          size = this.state.lastPanelSize;\n        } else {\n          size = this.getDefaultPanelSize();\n        }\n      }\n      if (size) {\n        // Restore the panel size to the last known size or the default size\n        this.state.expansion = SidePanel.ExpansionState.expanding;\n        if (parent instanceof SplitPanel) {\n          relativeSizes = parent.relativeSizes();\n        }\n        this.setPanelSize(size).then(() => {\n          if (this.state.expansion === SidePanel.ExpansionState.expanding) {\n            this.state.expansion = SidePanel.ExpansionState.expanded;\n          }\n        });\n      } else {\n        this.state.expansion = SidePanel.ExpansionState.expanded;\n      }\n    }\n    container.setHidden(isEmpty && hideDockPanel);\n    tabBar.setHidden(isEmpty);\n    dockPanel.setHidden(hideDockPanel);\n    this.state.empty = isEmpty;\n    if (currentTitle) {\n      dockPanel.selectWidget(currentTitle.owner);\n    }\n    if (relativeSizes && parent instanceof SplitPanel) {\n      // Make sure that the expansion animation starts at the smallest possible size\n      parent.setRelativeSizes(relativeSizes);\n    }\n  }\n\n  /**\n   * Create an object that describes the current side panel layout. This object may contain references\n   * to widgets; these need to be transformed before the layout can be serialized.\n   */\n  getLayoutData(): SidePanel.LayoutData {\n    const currentTitle = this.tabBar.currentTitle;\n    const items = toArray(map(this.tabBar.titles, title => <SidePanel.WidgetItem>{\n      widget: title.owner,\n      rank: SidePanelHandler.rankProperty.get(title.owner),\n      expanded: title === currentTitle\n    }));\n    // eslint-disable-next-line no-null/no-null\n    const size = currentTitle !== null ? this.getPanelSize() : this.state.lastPanelSize;\n    return {type: 'sidepanel', items, size};\n  }\n\n  /**\n   * Apply a side panel layout that has been previously created with `getLayoutData`.\n   */\n  setLayoutData(layoutData: SidePanel.LayoutData): void {\n    // eslint-disable-next-line no-null/no-null\n    this.tabBar.currentTitle = null;\n\n    let currentTitle: Title<Widget> | undefined;\n    if (layoutData.items) {\n      for (const {widget, rank, expanded} of layoutData.items) {\n        if (widget) {\n          if (rank) {\n            SidePanelHandler.rankProperty.set(widget, rank);\n          }\n          if (expanded) {\n            currentTitle = widget.title;\n          }\n          // Add the widgets directly to the tab bar in the same order as they are stored\n          this.tabBar.addTab(widget.title);\n        }\n      }\n    }\n    if (layoutData.size) {\n      this.state.lastPanelSize = layoutData.size;\n    }\n\n    // If the layout data contains an expanded item, update the currentTitle property\n    // This implies a refresh through the `currentChanged` signal\n    if (currentTitle) {\n      this.tabBar.currentTitle = currentTitle;\n    } else {\n      this.refresh();\n    }\n  }\n\n  /**\n   * Activate a widget residing in the side panel by ID.\n   *\n   * @returns the activated widget if it was found\n   */\n  activate(id: string): Widget | undefined {\n    const widget = this.expand(id);\n    if (widget) {\n      widget.activate();\n    }\n    return widget;\n  }\n\n  /**\n   * Expand a widget residing in the side panel by ID. If no ID is given and the panel is\n   * currently collapsed, the last active tab of this side panel is expanded. If no tab\n   * was expanded previously, the first one is taken.\n   *\n   * @returns the expanded widget if it was found\n   */\n  expand(id?: string): Widget | undefined {\n    if (id) {\n      const widget = find(this.dockPanel.widgets(), w => w.id === id);\n      if (widget) {\n        this.tabBar.currentTitle = widget.title;\n      }\n      return widget;\n    } else if (this.tabBar.currentTitle) {\n      return this.tabBar.currentTitle.owner;\n    } else if (this.tabBar.titles.length > 0) {\n      let index = this.state.lastActiveTabIndex;\n      if (!index) {\n        index = 0;\n      } else if (index >= this.tabBar.titles.length) {\n        index = this.tabBar.titles.length - 1;\n      }\n      const title = this.tabBar.titles[index];\n      this.tabBar.currentTitle = title;\n      return title.owner;\n    } else {\n      // Reveal the tab bar and dock panel even if there is no widget\n      // The next call to `refreshVisibility` will collapse them again\n      this.state.expansion = SidePanel.ExpansionState.expanding;\n      let relativeSizes: number[] | undefined;\n      const parent = this.container.parent;\n      if (parent instanceof SplitPanel) {\n        relativeSizes = parent.relativeSizes();\n      }\n      this.container.removeClass(COLLAPSED_CLASS);\n      this.container.show();\n      this.tabBar.show();\n      this.dockPanel.node.style.minWidth = '0';\n      this.dockPanel.show();\n      if (relativeSizes && parent instanceof SplitPanel) {\n        // Make sure that the expansion animation starts at zero size\n        parent.setRelativeSizes(relativeSizes);\n      }\n      this.setPanelSize(this.options.emptySize).then(() => {\n        if (this.state.expansion === SidePanel.ExpansionState.expanding) {\n          this.state.expansion = SidePanel.ExpansionState.expanded;\n        }\n      });\n    }\n  }\n\n  protected createSideBar(): SideTabBar {\n    const side = this.side;\n    const tabBarRenderer = this.tabBarRendererFactory();\n    const sideBar = new SideTabBar({\n      // Tab bar options\n      orientation: side === 'left' || side === 'right' ? 'vertical' : 'horizontal',\n      insertBehavior: 'none',\n      removeBehavior: 'select-previous-tab',\n      allowDeselect: false,\n      tabsMovable: true,\n      renderer: tabBarRenderer,\n      // Scroll bar options\n      handlers: ['drag-thumb', 'keyboard', 'wheel', 'touch'],\n      useBothWheelAxes: true,\n      scrollYMarginOffset: 8,\n      suppressScrollX: true\n    });\n    tabBarRenderer.tabBar = sideBar;\n    sideBar.disposed.connect(() => tabBarRenderer.dispose());\n    tabBarRenderer.contextMenuPath = SHELL_TABBAR_CONTEXT_MENU;\n    sideBar.addClass('tart-app-' + side);\n    sideBar.addClass(LEFT_RIGHT_AREA_CLASS);\n\n    sideBar.tabAdded.connect((sender, {title}) => {\n      const widget = title.owner;\n      if (!some(this.dockPanel.widgets(), w => w === widget)) {\n        this.dockPanel.addWidget(widget);\n      }\n    }, this);\n    sideBar.tabActivateRequested.connect((sender, {title}) => title.owner.activate());\n    sideBar.tabCloseRequested.connect((sender, {title}) => title.owner.close());\n    sideBar.collapseRequested.connect(() => this.collapse(), this);\n    sideBar.currentChanged.connect(this.onCurrentTabChanged, this);\n    sideBar.tabDetachRequested.connect(this.onTabDetachRequested, this);\n    return sideBar;\n  }\n\n  protected createSidebarTopMenu(): SidebarTopMenuWidget {\n    return this.createSidebarMenu(this.sidebarTopWidgetFactory);\n  }\n\n  protected createSidebarMenu<T extends SidebarMenuWidget>(factory: () => T): T {\n    const menu = factory();\n    menu.addClass('tart-sidebar-menu');\n    return menu;\n  }\n\n  protected createSidebarBottomMenu(): SidebarBottomMenuWidget {\n    return this.createSidebarMenu(this.sidebarBottomWidgetFactory);\n  }\n\n  protected createToolbar(): SidePanelToolbar {\n    const toolbar = new SidePanelToolbar(this.tabBarToolBarRegistry, this.tabBarToolBarFactory, this.side);\n    toolbar.onContextMenu(e => this.showContextMenu(e));\n    return toolbar;\n  }\n\n  protected showContextMenu(e: MouseEvent): void {\n    const title = this.tabBar.currentTitle;\n    if (!title) {\n      return;\n    }\n    e.stopPropagation();\n    e.preventDefault();\n\n    this.contextMenuRenderer.render({\n      args: [title.owner],\n      menuPath: SIDE_PANEL_TOOLBAR_CONTEXT_MENU,\n      anchor: e\n    });\n  }\n\n  protected createContainer(): Panel {\n    const contentBox = new BoxLayout({direction: 'top-to-bottom', spacing: 0});\n    BoxPanel.setStretch(this.toolBar, 0);\n    contentBox.addWidget(this.toolBar);\n    BoxPanel.setStretch(this.dockPanel, 1);\n    contentBox.addWidget(this.dockPanel);\n    const contentPanel = new BoxPanel({layout: contentBox});\n\n    const side = this.side;\n    let direction: BoxLayout.Direction;\n    switch (side) {\n      case 'left':\n        direction = 'left-to-right';\n        break;\n      case 'right':\n        direction = 'right-to-left';\n        break;\n      default:\n        throw new Error('Illegal argument: ' + side);\n    }\n    const containerLayout = new BoxLayout({direction, spacing: 0});\n    const sidebarContainerLayout = new PanelLayout();\n    const sidebarContainer = new Panel({layout: sidebarContainerLayout});\n    sidebarContainer.addClass('tart-app-sidebar-container');\n    sidebarContainerLayout.addWidget(this.topMenu);\n    sidebarContainerLayout.addWidget(this.tabBar);\n    sidebarContainerLayout.addWidget(this.bottomMenu);\n\n    BoxPanel.setStretch(sidebarContainer, 0);\n    BoxPanel.setStretch(contentPanel, 1);\n    containerLayout.addWidget(sidebarContainer);\n    containerLayout.addWidget(contentPanel);\n    const boxPanel = new BoxPanel({layout: containerLayout});\n    boxPanel.id = 'tart-' + side + '-content-panel';\n    return boxPanel;\n  }\n\n  protected createSidePanel(): TartDockPanel {\n    const sidePanel = new TartDockPanel({\n      mode: 'single-document'\n    });\n    sidePanel.id = 'tart-' + this.side + '-side-panel';\n    sidePanel.addClass('tart-side-panel');\n\n    sidePanel.widgetActivated.connect((sender, widget) => {\n      this.tabBar.currentTitle = widget.title;\n    }, this);\n    sidePanel.widgetAdded.connect(this.onWidgetAdded, this);\n    sidePanel.widgetRemoved.connect(this.onWidgetRemoved, this);\n    return sidePanel;\n  }\n\n  /*\n   * Handle the `widgetAdded` signal from the dock panel. The widget's title is inserted into the\n   * tab bar according to the `rankProperty` value that may be attached to the widget.\n   */\n  protected onWidgetAdded(sender: DockPanel, widget: Widget): void {\n    const titles = this.tabBar.titles;\n    if (!find(titles, t => t.owner === widget)) {\n      const rank = SidePanelHandler.rankProperty.get(widget);\n      let index = titles.length;\n      if (rank !== undefined) {\n        for (let i = index - 1; i >= 0; i--) {\n          const r = SidePanelHandler.rankProperty.get(titles[i].owner);\n          if (r !== undefined && r > rank) {\n            index = i;\n          }\n        }\n      }\n      this.tabBar.insertTab(index, widget.title);\n      this.refresh();\n    }\n  }\n\n  /*\n   * Handle the `widgetRemoved` signal from the dock panel. The widget's title is also removed\n   * from the tab bar.\n   */\n  protected onWidgetRemoved(sender: DockPanel, widget: Widget): void {\n    this.tabBar.removeTab(widget.title);\n    this.refresh();\n  }\n\n  /**\n   * Determine the default size to apply when the panel is expanded for the first time.\n   */\n  protected getDefaultPanelSize(): number | undefined {\n    const parent = this.container.parent;\n    if (parent && parent.isVisible) {\n      return parent.node.clientWidth * this.options.initialSizeRatio;\n    }\n  }\n\n  /**\n   * Modify the width of the panel. This implementation assumes that the parent of the panel\n   * container is a `SplitPanel`.\n   */\n  protected setPanelSize(size: number): Promise<void> {\n    const enableAnimation = this.applicationStateService.state === 'ready';\n    const options: SplitPositionOptions = {\n      side: this.side,\n      duration: enableAnimation ? this.options.expandDuration : 0,\n      referenceWidget: this.dockPanel\n    };\n    const promise = this.splitPositionHandler.setSidePanelSize(this.container, size, options);\n    const result = new Promise<void>(resolve => {\n      // Resolve the resulting promise in any case, regardless of whether resizing was successful\n      promise.then(() => resolve(), () => resolve());\n    });\n    this.state.pendingUpdate = this.state.pendingUpdate.then(() => result);\n    return result;\n  }\n\n  /**\n   * Compute the current width of the panel. This implementation assumes that the parent of\n   * the panel container is a `SplitPanel`.\n   */\n  protected getPanelSize(): number | undefined {\n    const parent = this.container.parent;\n    if (parent instanceof SplitPanel && parent.isVisible) {\n      const index = parent.widgets.indexOf(this.container);\n      if (this.side === 'left') {\n        const handle = parent.handles[index];\n        if (!handle.classList.contains('p-mod-hidden')) {\n          return handle.offsetLeft;\n        }\n      } else if (this.side === 'right') {\n        const handle = parent.handles[index - 1];\n        if (!handle.classList.contains('p-mod-hidden')) {\n          const parentWidth = parent.node.clientWidth;\n          return parentWidth - handle.offsetLeft;\n        }\n      }\n    }\n  }\n\n  // should be a property to preserve fn identity\n  protected updateToolbarTitle = (): void => {\n    const currentTitle = this.tabBar && this.tabBar.currentTitle;\n    this.toolBar.toolbarTitle = currentTitle || undefined;\n  };\n\n  /**\n   * Handle a `currentChanged` signal from the sidebar. The side panel is refreshed so it displays\n   * the new selected widget.\n   */\n  protected onCurrentTabChanged(sender: SideTabBar, {\n    currentTitle,\n    currentIndex\n  }: TabBar.ICurrentChangedArgs<Widget>): void {\n    this.toDisposeOnCurrentTabChanged.dispose();\n    if (currentTitle) {\n      this.updateToolbarTitle();\n      currentTitle.changed.connect(this.updateToolbarTitle);\n      this.toDisposeOnCurrentTabChanged.push(Disposable.create(() => currentTitle.changed.disconnect(this.updateToolbarTitle)));\n    }\n    if (currentIndex >= 0) {\n      this.state.lastActiveTabIndex = currentIndex;\n      sender.revealTab(currentIndex);\n    }\n    this.refresh();\n  }\n\n  /**\n   * Handle a `tabDetachRequested` signal from the sidebar. A drag is started so the widget can be\n   * moved to another application shell area.\n   */\n  protected onTabDetachRequested(sender: SideTabBar,\n                                 {title, tab, clientX, clientY}: TabBar.ITabDetachRequestedArgs<Widget>): void {\n    // Release the tab bar's hold on the mouse\n    sender.releaseMouse();\n\n    // Clone the selected tab and use that as drag image\n    const clonedTab = tab.cloneNode(true) as HTMLElement;\n    clonedTab.style.width = '';\n    clonedTab.style.height = '';\n    const label = clonedTab.getElementsByClassName('p-TabBar-tabLabel')[0] as HTMLElement;\n    label.style.width = '';\n    label.style.height = '';\n\n    // Create and start a drag to move the selected tab to another panel\n    const mimeData = new MimeData();\n    mimeData.setData('application/vnd.phosphor.widget-factory', () => title.owner);\n    const drag = new Drag({\n      mimeData,\n      dragImage: clonedTab,\n      proposedAction: 'move',\n      supportedActions: 'move',\n    });\n\n    tab.classList.add('p-mod-hidden');\n    drag.start(clientX, clientY).then(() => {\n      // The promise is resolved when the drag has ended\n      tab.classList.remove('p-mod-hidden');\n    });\n  }\n}\n\nexport namespace SidePanel {\n  /**\n   * Options that control the behavior of side panels.\n   */\n  export interface Options {\n    /**\n     * When a widget is being dragged and the distance of the mouse cursor to the shell border\n     * is below this threshold, the respective side panel is expanded so the widget can be dropped\n     * into that panel. Set this to `-1` to disable expanding the side panel while dragging.\n     */\n    expandThreshold: number;\n    /**\n     * The duration in milliseconds of the animation shown when a side panel is expanded.\n     * Set this to `0` to disable expansion animation.\n     */\n    expandDuration: number;\n    /**\n     * The ratio of the available shell size to use as initial size for the side panel.\n     */\n    initialSizeRatio: number\n    /**\n     * How large the panel should be when it's expanded and empty.\n     */\n    emptySize: number;\n  }\n\n  /**\n   * The options for adding a widget to a side panel\n   */\n  export interface WidgetOptions {\n    /**\n     * The rank order of the widget among its siblings\n     */\n    rank?: number;\n  }\n\n  /**\n   * Data structure used to save and restore the side panel layout.\n   */\n  export interface WidgetItem extends WidgetOptions {\n    /** Can be undefined in case the widget could not be restored. */\n    widget?: Widget;\n    expanded?: boolean;\n  }\n\n  export interface State {\n    /**\n     * Indicates whether the panel is empty.\n     */\n    empty: boolean;\n    /**\n     * Indicates whether the panel is expanded, collapsed, or in a transition between the two.\n     */\n    expansion: ExpansionState;\n    /**\n     * A promise that is resolved when the currently pending side panel updates are done.\n     */\n    pendingUpdate: Promise<void>;\n    /**\n     * The index of the last tab that was selected. When the panel is expanded, it tries to restore\n     * the tab selection to the previous state.\n     */\n    lastActiveTabIndex?: number;\n    /**\n     * The width or height of the panel before it was collapsed. When the panel is expanded, it tries\n     * to restore its size to this value.\n     */\n    lastPanelSize?: number;\n  }\n\n  /**\n   * Data to save and load the layout of a side panel.\n   */\n  export interface LayoutData {\n    type: 'sidepanel',\n    items?: WidgetItem[];\n    size?: number;\n  }\n\n  export enum ExpansionState {\n    collapsed = 'collapsed',\n    expanding = 'expanding',\n    expanded = 'expanded',\n    collapsing = 'collapsing'\n  }\n}\n"]}
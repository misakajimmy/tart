{"version":3,"sources":["browser/shell/tab-bar-decorator.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAGlF,OAAO,EAAC,KAAK,EAAE,MAAM,EAAC,MAAM,iBAAiB,CAAC;AAE9C,OAAO,EAAC,oBAAoB,EAAE,OAAO,EAAE,KAAK,EAAC,MAAM,cAAc,CAAC;AAClE,OAAO,EAAC,gBAAgB,EAAC,MAAM,sBAAsB,CAAC;AACtD,OAAO,EAAC,+BAA+B,EAAC,MAAM,yBAAyB,CAAC;AAExE,eAAO,MAAM,eAAe,eAA4B,CAAC;AAEzD,MAAM,WAAW,eAAe;IAE9B;;OAEG;IACH,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC;IAEpB;;OAEG;IACH,QAAQ,CAAC,sBAAsB,EAAE,KAAK,CAAC,IAAI,CAAC,CAAC;IAE7C;;;;OAIG;IACH,QAAQ,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,gBAAgB,CAAC,IAAI,EAAE,CAAC;CACzD;AAED,qBACa,sBAAuB,YAAW,+BAA+B;IAE5E,SAAS,CAAC,QAAQ,CAAC,6BAA6B,gBAAuB;IAEvE,QAAQ,CAAC,sBAAsB,cAA4C;IAC3E,wBAAwB,MAA2E;IAEnG,SAAS,CAAC,QAAQ,CAAC,aAAa,EAAE,oBAAoB,CAAC,eAAe,CAAC,CAAC;IAExE,UAAU,IAAI,IAAI;IAIlB;;;;OAIG;IACH,cAAc,CAAC,KAAK,EAAE,KAAK,CAAC,MAAM,CAAC,GAAG,gBAAgB,CAAC,IAAI,EAAE;CAS9D","file":"../../../src/browser/shell/tab-bar-decorator.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 Ericsson and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {debounce} from 'lodash';\nimport {Title, Widget} from '@lumino/widgets';\nimport {inject, injectable, named} from 'inversify';\nimport {ContributionProvider, Emitter, Event} from '../../common';\nimport {WidgetDecoration} from '../widget-decoration';\nimport {FrontendApplicationContribution} from '../frontend-application';\n\nexport const TabBarDecorator = Symbol('TabBarDecorator');\n\nexport interface TabBarDecorator {\n\n  /**\n   * The unique identifier of the tab bar decorator.\n   */\n  readonly id: string;\n\n  /**\n   * Event that is fired when any of the available tab bar decorators has changes.\n   */\n  readonly onDidChangeDecorations: Event<void>;\n\n  /**\n   * Decorate title.\n   * @param {Title<Widget>} title the title\n   * @returns decoration data.\n   */\n  decorate(title: Title<Widget>): WidgetDecoration.Data[];\n}\n\n@injectable()\nexport class TabBarDecoratorService implements FrontendApplicationContribution {\n\n  protected readonly onDidChangeDecorationsEmitter = new Emitter<void>();\n\n  readonly onDidChangeDecorations = this.onDidChangeDecorationsEmitter.event;\n  fireDidChangeDecorations = debounce(() => this.onDidChangeDecorationsEmitter.fire(undefined), 150);\n  @inject(ContributionProvider) @named(TabBarDecorator)\n  protected readonly contributions: ContributionProvider<TabBarDecorator>;\n\n  initialize(): void {\n    this.contributions.getContributions().map(decorator => decorator.onDidChangeDecorations(this.fireDidChangeDecorations));\n  }\n\n  /**\n   * Assign tabs the decorators provided by all the contributions.\n   * @param {Title<Widget>} title the title\n   * @returns an array of its decoration data.\n   */\n  getDecorations(title: Title<Widget>): WidgetDecoration.Data[] {\n    const decorators = this.contributions.getContributions();\n    let all: WidgetDecoration.Data[] = [];\n    for (const decorator of decorators) {\n      const decorations = decorator.decorate(title);\n      all = all.concat(decorations);\n    }\n    return all;\n  }\n}\n"]}
{"version":3,"sources":["browser/widgets/react-widget.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAGlF,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,OAAO,EAAa,oBAAoB,EAAC,MAAM,cAAc,CAAC;AAC9D,OAAO,EAAC,UAAU,EAAE,OAAO,EAAC,MAAM,UAAU,CAAC;AAC7C,OAAO,EAAC,MAAM,EAAC,MAAM,iBAAiB,CAAC;AAEvC,8BACsB,WAAY,SAAQ,UAAU;IAElD,SAAS,CAAC,QAAQ,CAAC,QAAQ,uBAA8B;gBAEhC,OAAO,CAAC,EAAE,MAAM,CAAC,QAAQ;IAWlD,SAAS,CAAC,eAAe,CAAC,GAAG,EAAE,OAAO,GAAG,IAAI;IAK7C;;;;;OAKG;IACH,SAAS,CAAC,QAAQ,CAAC,MAAM,IAAI,KAAK,CAAC,SAAS;CAC7C","file":"../../../src/browser/widgets/react-widget.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (C) 2018 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport * as ReactDOM from 'react-dom';\nimport * as React from 'react';\nimport {injectable, unmanaged} from 'inversify';\nimport {Disposable, DisposableCollection} from '../../common';\nimport {BaseWidget, Message} from './widget';\nimport {Widget} from '@lumino/widgets';\n\n@injectable()\nexport abstract class ReactWidget extends BaseWidget {\n\n  protected readonly onRender = new DisposableCollection();\n\n  constructor(@unmanaged() options?: Widget.IOptions) {\n    super(options);\n    this.scrollOptions = {\n      suppressScrollX: true,\n      minScrollbarLength: 35,\n    };\n    this.toDispose.push(Disposable.create(() => {\n      ReactDOM.unmountComponentAtNode(this.node);\n    }));\n  }\n\n  protected onUpdateRequest(msg: Message): void {\n    super.onUpdateRequest(msg);\n    ReactDOM.render(<React.Fragment>{this.render()}</React.Fragment>, this.node, () => this.onRender.dispose());\n  }\n\n  /**\n   * Render the React widget in the DOM.\n   * - If the widget has been previously rendered,\n   * any subsequent calls will perform an update and only\n   * change the DOM if absolutely necessary.\n   */\n  protected abstract render(): React.ReactNode;\n}\n"]}
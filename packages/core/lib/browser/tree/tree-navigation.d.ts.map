{"version":3,"sources":["browser/tree/tree-navigation.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAGlF,OAAO,EAAC,QAAQ,EAAC,MAAM,QAAQ,CAAC;AAEhC,qBACa,qBAAqB;IAEhC,SAAS,CAAC,KAAK,EAAE,MAAM,CAAM;IAC7B,SAAS,CAAC,KAAK,EAAE,QAAQ,EAAE,CAAM;IAEjC,IAAI,IAAI,IAAI,QAAQ,GAAG,SAAS,CAE/B;IAED,IAAI,IAAI,IAAI,QAAQ,GAAG,SAAS,CAE/B;IAED,OAAO,IAAI,QAAQ,GAAG,SAAS;IAS/B,OAAO,IAAI,QAAQ,GAAG,SAAS;IAS/B,IAAI,CAAC,IAAI,EAAE,QAAQ,GAAG,IAAI;CAM3B","file":"../../../src/browser/tree/tree-navigation.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {injectable} from 'inversify';\nimport {TreeNode} from './tree';\n\n@injectable()\nexport class TreeNavigationService {\n\n  protected index: number = -1;\n  protected nodes: TreeNode[] = [];\n\n  get next(): TreeNode | undefined {\n    return this.nodes[this.index + 1];\n  }\n\n  get prev(): TreeNode | undefined {\n    return this.nodes[this.index - 1];\n  }\n\n  advance(): TreeNode | undefined {\n    const node = this.next;\n    if (node) {\n      this.index = this.index + 1;\n      return node;\n    }\n    return undefined;\n  }\n\n  retreat(): TreeNode | undefined {\n    const node = this.prev;\n    if (node) {\n      this.index = this.index - 1;\n      return node;\n    }\n    return undefined;\n  }\n\n  push(node: TreeNode): void {\n    this.nodes = this.nodes.slice(0, this.index + 1);\n    this.nodes.push(node);\n    this.index = this.index + 1;\n  }\n\n}\n"]}
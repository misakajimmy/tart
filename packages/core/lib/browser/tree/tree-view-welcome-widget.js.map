{"version":3,"sources":["browser/tree/tree-view-welcome-widget.tsx"],"names":[],"mappings":"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","file":"../../../src/browser/tree/tree-view-welcome-widget.js","sourcesContent":["import {inject, injectable} from 'inversify';\nimport * as React from 'react';\nimport {CommandRegistry} from '../../common';\nimport {ContextKeyService} from '../context-key-service';\nimport {WindowService} from '../window';\nimport {TreeModel} from './tree-model';\nimport {TreeWidget} from './tree-widget';\n\ninterface ViewWelcome {\n  readonly view: string;\n  readonly content: string;\n  readonly when?: string;\n  readonly order: number;\n}\n\ninterface IItem {\n  readonly welcomeInfo: ViewWelcome;\n  visible: boolean;\n}\n\ninterface ILink {\n  readonly label: string;\n  readonly href: string;\n  readonly title?: string;\n}\n\ntype LinkedTextItem = string | ILink;\n\n@injectable()\nexport class TreeViewWelcomeWidget extends TreeWidget {\n\n  @inject(CommandRegistry)\n  protected readonly commands: CommandRegistry;\n\n  @inject(ContextKeyService)\n  protected readonly contextService: ContextKeyService;\n\n  @inject(WindowService)\n  protected readonly windowService: WindowService;\n\n  protected viewWelcomeNodes: React.ReactNode[] = [];\n  protected defaultItem: IItem | undefined;\n  protected items: IItem[] = [];\n\n  get visibleItems(): ViewWelcome[] {\n    const visibleItems = this.items.filter(v => v.visible);\n    if (visibleItems.length && this.defaultItem) {\n      return [this.defaultItem.welcomeInfo];\n    }\n    return visibleItems.map(v => v.welcomeInfo);\n  }\n\n  handleViewWelcomeContentChange(viewWelcomes: ViewWelcome[]): void {\n    this.items = [];\n    for (const welcomeInfo of viewWelcomes) {\n      if (welcomeInfo.when === 'default') {\n        this.defaultItem = {welcomeInfo, visible: true};\n      } else {\n        const visible = welcomeInfo.when === undefined || this.contextService.match(welcomeInfo.when);\n        this.items.push({welcomeInfo, visible});\n      }\n    }\n    this.updateViewWelcomeNodes();\n    this.update();\n  }\n\n  handleWelcomeContextChange(): void {\n    let didChange = false;\n\n    for (const item of this.items) {\n      if (!item.welcomeInfo.when || item.welcomeInfo.when === 'default') {\n        continue;\n      }\n\n      const visible = item.welcomeInfo.when === undefined || this.contextService.match(item.welcomeInfo.when);\n\n      if (item.visible === visible) {\n        continue;\n      }\n\n      item.visible = visible;\n      didChange = true;\n    }\n\n    if (didChange) {\n      this.updateViewWelcomeNodes();\n      this.update();\n    }\n  }\n\n  protected renderTree(model: TreeModel): React.ReactNode {\n    if (this.shouldShowWelcomeView() && this.visibleItems.length) {\n      return this.renderViewWelcome();\n    }\n    return super.renderTree(model);\n  }\n\n  protected shouldShowWelcomeView(): boolean {\n    return false;\n  }\n\n  protected renderViewWelcome(): React.ReactNode {\n    return (\n        <div className='tart-WelcomeView'>\n          {...this.viewWelcomeNodes}\n        </div>\n    );\n  }\n\n  protected updateViewWelcomeNodes(): void {\n    this.viewWelcomeNodes = [];\n    const items = this.visibleItems.sort((a, b) => a.order - b.order);\n\n    for (const [iIndex, {content}] of items.entries()) {\n      const lines = content.split('\\n');\n\n      for (let [lIndex, line] of lines.entries()) {\n        const lineKey = `${iIndex}-${lIndex}`;\n        line = line.trim();\n\n        if (!line) {\n          continue;\n        }\n\n        const linkedTextItems = this.parseLinkedText(line);\n\n        if (linkedTextItems.length === 1 && typeof linkedTextItems[0] !== 'string') {\n          this.viewWelcomeNodes.push(\n              this.renderButtonNode(linkedTextItems[0], lineKey)\n          );\n        } else {\n          const linkedTextNodes: React.ReactNode[] = [];\n\n          for (const [nIndex, node] of linkedTextItems.entries()) {\n            const linkedTextKey = `${lineKey}-${nIndex}`;\n\n            if (typeof node === 'string') {\n              linkedTextNodes.push(\n                  this.renderTextNode(node, linkedTextKey)\n              );\n            } else {\n              linkedTextNodes.push(\n                  this.renderCommandLinkNode(node, linkedTextKey)\n              );\n            }\n          }\n\n          this.viewWelcomeNodes.push(\n              <div key={`line-${lineKey}`}>\n                {...linkedTextNodes}\n              </div>\n          );\n        }\n      }\n    }\n  }\n\n  protected renderButtonNode(node: ILink, lineKey: string): React.ReactNode {\n    return (\n        <div key={`line-${lineKey}`} className='tart-WelcomeViewButtonWrapper'>\n          <button title={node.title}\n                  className='tart-button tart-WelcomeViewButton'\n                  disabled={!this.isEnabledClick(node.href)}\n                  onClick={e => this.openLinkOrCommand(e, node.href)}>\n            {node.label}\n          </button>\n        </div>\n    );\n  }\n\n  protected renderTextNode(node: string, textKey: string): React.ReactNode {\n    return <span key={`text-${textKey}`}>{node}</span>;\n  }\n\n  protected renderCommandLinkNode(node: ILink, linkKey: string): React.ReactNode {\n    return (\n        <a key={`link-${linkKey}`}\n           className={this.getLinkClassName(node.href)}\n           title={node.title || ''}\n           onClick={e => this.openLinkOrCommand(e, node.href)}>\n          {node.label}\n        </a>\n    );\n  }\n\n  protected getLinkClassName(href: string): string {\n    const classNames = ['tart-WelcomeViewCommandLink'];\n    if (!this.isEnabledClick(href)) {\n      classNames.push('disabled');\n    }\n    return classNames.join(' ');\n  }\n\n  protected isEnabledClick(href: string): boolean {\n    if (href.startsWith('command:')) {\n      const command = href.replace('command:', '');\n      return this.commands.isEnabled(command);\n    }\n    return true;\n  }\n\n  protected openLinkOrCommand = (event: React.MouseEvent, href: string): void => {\n    event.stopPropagation();\n\n    if (href.startsWith('command:')) {\n      const command = href.replace('command:', '');\n      this.commands.executeCommand(command);\n    } else {\n      this.windowService.openNewWindow(href, {external: true});\n    }\n  };\n\n  protected parseLinkedText(text: string): LinkedTextItem[] {\n    const result: LinkedTextItem[] = [];\n\n    const linkRegex = /\\[([^\\]]+)\\]\\(((?:https?:\\/\\/|command:)[^\\)\\s]+)(?: (\"|')([^\\3]+)(\\3))?\\)/gi;\n    let index = 0;\n    let match: RegExpExecArray | null;\n\n    while (match = linkRegex.exec(text)) {\n      if (match.index - index > 0) {\n        result.push(text.substring(index, match.index));\n      }\n\n      const [, label, href, , title] = match;\n\n      if (title) {\n        result.push({label, href, title});\n      } else {\n        result.push({label, href});\n      }\n\n      index = match.index + match[0].length;\n    }\n\n    if (index < text.length) {\n      result.push(text.substring(index));\n    }\n\n    return result;\n  }\n}\n"]}
{"version":3,"sources":["browser/tree/tree-container.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAElF,OAAO,EAAC,SAAS,EAAE,UAAU,EAAC,MAAM,WAAW,CAAC;AAChD,OAAO,EAAmB,SAAS,EAAa,MAAM,eAAe,CAAC;AActE,wBAAgB,mBAAmB,CAAC,MAAM,EAAE,UAAU,CAAC,SAAS,EAAE,KAAK,CAAC,EAAE,OAAO,CAAC,SAAS,CAAC,GAAG,SAAS,CAqCvG","file":"../../../src/browser/tree/tree-container.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {Container, interfaces} from 'inversify';\nimport {defaultTreeProps, TreeProps, TreeWidget} from './tree-widget';\nimport {TreeModel, TreeModelImpl} from './tree-model';\nimport {Tree, TreeImpl} from './tree';\nimport {TreeSelectionService} from './tree-selection';\nimport {TreeSelectionServiceImpl} from './tree-selection-impl';\nimport {TreeExpansionService, TreeExpansionServiceImpl} from './tree-expansion';\nimport {TreeNavigationService} from './tree-navigation';\nimport {NoopTreeDecoratorService, TreeDecoratorService} from './tree-decorator';\nimport {TreeSearch} from './tree-search';\nimport {FuzzySearch} from './fuzzy-search';\nimport {SearchBox, SearchBoxFactory, SearchBoxProps} from './search-box';\nimport {SearchBoxDebounce} from './search-box-debounce';\nimport {TreeViewWelcomeWidget} from './tree-view-welcome-widget';\n\nexport function createTreeContainer(parent: interfaces.Container, props?: Partial<TreeProps>): Container {\n  const child = new Container({defaultScope: 'Singleton'});\n  child.parent = parent;\n\n  child.bind(TreeImpl).toSelf();\n  child.bind(Tree).toService(TreeImpl);\n\n  child.bind(TreeSelectionServiceImpl).toSelf();\n  child.bind(TreeSelectionService).toService(TreeSelectionServiceImpl);\n\n  child.bind(TreeExpansionServiceImpl).toSelf();\n  child.bind(TreeExpansionService).toService(TreeExpansionServiceImpl);\n\n  child.bind(TreeNavigationService).toSelf();\n\n  child.bind(TreeModelImpl).toSelf();\n  child.bind(TreeModel).toService(TreeModelImpl);\n\n  child.bind(TreeWidget).toSelf();\n  child.bind(TreeProps).toConstantValue({\n    ...defaultTreeProps,\n    ...props\n  });\n\n  child.bind(TreeViewWelcomeWidget).toSelf();\n\n  child.bind(TreeSearch).toSelf().inSingletonScope();\n  child.bind(FuzzySearch).toSelf().inSingletonScope();\n  child.bind(SearchBoxFactory).toFactory(context =>\n      (options: SearchBoxProps) => {\n        const debounce = new SearchBoxDebounce(options);\n        return new SearchBox(options, debounce);\n      }\n  );\n\n  child.bind(TreeDecoratorService).to(NoopTreeDecoratorService).inSingletonScope();\n  return child;\n}\n"]}
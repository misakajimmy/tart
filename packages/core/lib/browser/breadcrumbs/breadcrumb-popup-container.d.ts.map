{"version":3,"sources":["browser/breadcrumbs/breadcrumb-popup-container.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAGlF,OAAO,EAAC,OAAO,EAAE,KAAK,EAAC,MAAM,cAAc,CAAC;AAC5C,OAAO,EAAC,UAAU,EAAE,oBAAoB,EAAC,MAAM,yBAAyB,CAAC;AACzE,OAAO,EAAC,UAAU,EAAC,MAAM,0BAA0B,CAAC;AACpD,OAAO,EAAC,YAAY,EAAC,MAAM,2BAA2B,CAAC;AAGvD,MAAM,WAAW,+BAA+B;IAC9C,CAAC,MAAM,EAAE,WAAW,EAAE,YAAY,EAAE,MAAM,EAAE,QAAQ,EAAE,UAAU,GAAG,wBAAwB,CAAC;CAC7F;AAED,eAAO,MAAM,+BAA+B,eAA4C,CAAC;AAEzF,oBAAY,YAAY,GAAG,MAAM,CAAC;AAClC,eAAO,MAAM,YAAY,eAAyB,CAAC;AAEnD;;;;;;GAMG;AACH,qBACa,wBAAyB,YAAW,UAAU;IACzD,SAAsC,YAAY,EAAE,YAAY,CAAC;IAC3C,SAAS,CAAC,QAAQ,CAAC,MAAM,EAAE,YAAY,CAAC;IAC1C,SAAS,CAAC,QAAQ,CAAC,QAAQ,EAAE,UAAU,CAAC;IAE5D,SAAS,CAAC,mBAAmB,gBAAuB;IACpD,SAAS,CAAC,SAAS,EAAE,oBAAoB,CAAsD;IAE/F,IAAI,YAAY,IAAI,KAAK,CAAC,IAAI,CAAC,CAE9B;IAED,SAAS,CAAC,UAAU,EAAE,WAAW,CAAC;IAClC,IAAI,SAAS,IAAI,WAAW,CAE3B;IAED,SAAS,CAAC,OAAO,EAAE,OAAO,CAAC;IAC3B,IAAI,MAAM,IAAI,OAAO,CAEpB;IAED,OAAO,IAAI,IAAI;IAWf,SAAS,CAAC,IAAI,IAAI,IAAI;IAOtB,SAAS,CAAC,cAAc,CAAC,QAAQ,EAAE,UAAU,GAAG,cAAc;IAW9D,SAAS,CAAC,UAAU,UAAW,UAAU,UAIvC;IAEF,SAAS,CAAC,WAAW,UAAW,aAAa,UAI3C;CACH","file":"../../../src/browser/breadcrumbs/breadcrumb-popup-container.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {inject, injectable, postConstruct} from 'inversify';\nimport {Emitter, Event} from '../../common';\nimport {Disposable, DisposableCollection} from '../../common/disposable';\nimport {Coordinate} from '../context-menu-renderer';\nimport {RendererHost} from '../widgets/react-renderer';\nimport {Styles} from './breadcrumbs-constants';\n\nexport interface BreadcrumbPopupContainerFactory {\n  (parent: HTMLElement, breadcrumbId: string, position: Coordinate): BreadcrumbPopupContainer;\n}\n\nexport const BreadcrumbPopupContainerFactory = Symbol('BreadcrumbPopupContainerFactory');\n\nexport type BreadcrumbID = string;\nexport const BreadcrumbID = Symbol('BreadcrumbID');\n\n/**\n * This class creates a popup container at the given position\n * so that contributions can attach their HTML elements\n * as children of `BreadcrumbPopupContainer#container`.\n *\n * - `dispose()` is called on blur or on hit on escape\n */\n@injectable()\nexport class BreadcrumbPopupContainer implements Disposable {\n  @inject(BreadcrumbID) public readonly breadcrumbId: BreadcrumbID;\n  @inject(RendererHost) protected readonly parent: RendererHost;\n  @inject(Coordinate) protected readonly position: Coordinate;\n\n  protected onDidDisposeEmitter = new Emitter<void>();\n  protected toDispose: DisposableCollection = new DisposableCollection(this.onDidDisposeEmitter);\n\n  get onDidDispose(): Event<void> {\n    return this.onDidDisposeEmitter.event;\n  }\n\n  protected _container: HTMLElement;\n  get container(): HTMLElement {\n    return this._container;\n  }\n\n  protected _isOpen: boolean;\n  get isOpen(): boolean {\n    return this._isOpen;\n  }\n\n  dispose(): void {\n    if (!this.toDispose.disposed) {\n      this.onDidDisposeEmitter.fire();\n      this.toDispose.dispose();\n      this._container.remove();\n      this._isOpen = false;\n      document.removeEventListener('keyup', this.escFunction);\n    }\n  }\n\n  @postConstruct()\n  protected init(): void {\n    this._container = this.createPopupDiv(this.position);\n    document.addEventListener('keyup', this.escFunction);\n    this._container.focus();\n    this._isOpen = true;\n  }\n\n  protected createPopupDiv(position: Coordinate): HTMLDivElement {\n    const result = window.document.createElement('div');\n    result.className = Styles.BREADCRUMB_POPUP;\n    result.style.left = `${position.x}px`;\n    result.style.top = `${position.y}px`;\n    result.tabIndex = 0;\n    result.addEventListener('focusout', this.onFocusOut);\n    this.parent.appendChild(result);\n    return result;\n  }\n\n  protected onFocusOut = (event: FocusEvent) => {\n    if (!(event.relatedTarget instanceof Element) || !this._container.contains(event.relatedTarget)) {\n      this.dispose();\n    }\n  };\n\n  protected escFunction = (event: KeyboardEvent) => {\n    if (event.key === 'Escape' || event.key === 'Esc') {\n      this.dispose();\n    }\n  };\n}\n"]}
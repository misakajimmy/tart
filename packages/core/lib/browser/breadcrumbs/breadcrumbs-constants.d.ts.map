{"version":3,"sources":["browser/breadcrumbs/breadcrumbs-constants.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAElF,OAAO,EAAC,KAAK,EAAE,YAAY,EAAC,MAAM,cAAc,CAAC;AACjD,OAAO,EAAC,UAAU,EAAC,MAAM,gCAAgC,CAAC;AAC1D,OAAO,GAAG,MAAM,kBAAkB,CAAC;AAEnC,yBAAiB,MAAM,CAAC;IACf,MAAM,WAAW,qBAAqB,CAAC;IACvC,MAAM,eAAe,yBAAyB,CAAC;IAC/C,MAAM,kCAAkC,oCAAoC,CAAC;IAC7E,MAAM,gBAAgB,2BAA2B,CAAC;IAClD,MAAM,yBAAyB,kCAAkC,CAAC;CAC1E;AAED,kDAAkD;AAClD,MAAM,WAAW,UAAU;IAEzB,6EAA6E;IAC7E,QAAQ,CAAC,EAAE,EAAE,MAAM,CAAC;IAEpB,uGAAuG;IACvG,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;IAEtB,+CAA+C;IAC/C,QAAQ,CAAC,KAAK,EAAE,MAAM,CAAC;IAEvB,uDAAuD;IACvD,QAAQ,CAAC,SAAS,EAAE,MAAM,CAAC;IAE3B,gCAAgC;IAChC,QAAQ,CAAC,SAAS,CAAC,EAAE,MAAM,CAAC;IAE5B,qCAAqC;IACrC,QAAQ,CAAC,cAAc,CAAC,EAAE,MAAM,CAAC;CAClC;AAED,eAAO,MAAM,uBAAuB,eAAoC,CAAC;AAEzE,MAAM,WAAW,uBAAuB;IAEtC;;OAEG;IACH,QAAQ,CAAC,IAAI,EAAE,MAAM,CAAC;IAEtB;;OAEG;IACH,QAAQ,CAAC,QAAQ,EAAE,MAAM,CAAC;IAE1B;;OAEG;IACH,QAAQ,CAAC,sBAAsB,EAAE,KAAK,CAAC,GAAG,CAAC,CAAC;IAE5C;;OAEG;IACH,kBAAkB,CAAC,GAAG,EAAE,GAAG,GAAG,YAAY,CAAC,UAAU,EAAE,CAAC,CAAC;IAEzD;;;OAGG;IACH,kBAAkB,CAAC,UAAU,EAAE,UAAU,EAAE,MAAM,EAAE,WAAW,GAAG,OAAO,CAAC,UAAU,GAAG,SAAS,CAAC,CAAC;CAClG","file":"../../../src/browser/breadcrumbs/breadcrumbs-constants.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {Event, MaybePromise} from '../../common';\nimport {Disposable} from 'vscode-languageserver-protocol';\nimport URI from '../../common/uri';\n\nexport namespace Styles {\n  export const BREADCRUMBS = 'tart-breadcrumbs';\n  export const BREADCRUMB_ITEM = 'tart-breadcrumb-item';\n  export const BREADCRUMB_POPUP_OVERLAY_CONTAINER = 'tart-breadcrumbs-popups-overlay';\n  export const BREADCRUMB_POPUP = 'tart-breadcrumbs-popup';\n  export const BREADCRUMB_ITEM_HAS_POPUP = 'tart-breadcrumb-item-haspopup';\n}\n\n/** A single breadcrumb in the breadcrumbs bar. */\nexport interface Breadcrumb {\n\n  /** An ID of this breadcrumb that should be unique in the breadcrumbs bar. */\n  readonly id: string;\n\n  /** The breadcrumb type. Should be the same as the contribution type `BreadcrumbsContribution#type`. */\n  readonly type: symbol;\n\n  /** The text that will be rendered as label. */\n  readonly label: string;\n\n  /** A longer text that will be used as tooltip text. */\n  readonly longLabel: string;\n\n  /** A CSS class for the icon. */\n  readonly iconClass?: string;\n\n  /** CSS classes for the container. */\n  readonly containerClass?: string;\n}\n\nexport const BreadcrumbsContribution = Symbol('BreadcrumbsContribution');\n\nexport interface BreadcrumbsContribution {\n\n  /**\n   * The breadcrumb type. Breadcrumbs returned by `#computeBreadcrumbs(uri)` should have this as `Breadcrumb#type`.\n   */\n  readonly type: symbol;\n\n  /**\n   * The priority of this breadcrumbs contribution. Contributions are rendered left to right in order of ascending priority.\n   */\n  readonly priority: number;\n\n  /**\n   * An event emitter that should fire when breadcrumbs change for a given URI.\n   */\n  readonly onDidChangeBreadcrumbs: Event<URI>;\n\n  /**\n   * Computes breadcrumbs for a given URI.\n   */\n  computeBreadcrumbs(uri: URI): MaybePromise<Breadcrumb[]>;\n\n  /**\n   * Attaches the breadcrumb popup content for the given breadcrumb as child to the given parent.\n   * If it returns a Disposable, it is called when the popup closes.\n   */\n  attachPopupContent(breadcrumb: Breadcrumb, parent: HTMLElement): Promise<Disposable | undefined>;\n}\n"]}
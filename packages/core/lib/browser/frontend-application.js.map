{"version":3,"sources":["browser/frontend-application.ts"],"names":[],"mappings":"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","file":"../../src/browser/frontend-application.js","sourcesContent":["import {inject, injectable, named} from 'inversify';\nimport {ApplicationShell} from './shell';\nimport {Widget} from '@lumino/widgets';\nimport {CommandRegistry, ContributionProvider, MaybePromise, MenuModelRegistry,} from '../common';\nimport {KeybindingRegistry} from './keybinding';\nimport {ApplicationShellLayoutMigrationError, ShellLayoutRestorer} from './shell/shell-layout-restorer';\nimport {FrontendApplicationStateService} from './frontend-application-state';\nimport {WindowService} from './window/window-service';\n\n/**\n * Clients can implement to get a callback for contributing widgets to a shell on start.\n */\nexport const FrontendApplicationContribution = Symbol('FrontendApplicationContribution');\n\nexport interface FrontendApplicationContribution {\n\n  /**\n   * Called on application startup before configure is called.\n   */\n  initialize?(): void;\n\n  /**\n   * Called before commands, key bindings and menus are initialized.\n   * Should return a promise if it runs asynchronously.\n   */\n  configure?(app: FrontendApplication): MaybePromise<void>;\n\n  /**\n   * Called when the application is started. The application shell is not attached yet when this method runs.\n   * Should return a promise if it runs asynchronously.\n   */\n  onStart?(app: FrontendApplication): MaybePromise<void>;\n\n  /**\n   * Called on `beforeunload` event, right before the window closes.\n   * Return `true` in order to prevent exit.\n   * Note: No async code allowed, this function has to run on one tick.\n   */\n  onWillStop?(app: FrontendApplication): boolean | void;\n\n  /**\n   * Called when an application is stopped or unloaded.\n   *\n   * Note that this is implemented using `window.beforeunload` which doesn't allow any asynchronous code anymore.\n   * I.e. this is the last tick.\n   */\n  onStop?(app: FrontendApplication): void;\n\n  /**\n   * Called after the application shell has been attached in case there is no previous workbench layout state.\n   * Should return a promise if it runs asynchronously.\n   */\n  initializeLayout?(app: FrontendApplication): MaybePromise<void>;\n\n  /**\n   * An event is emitted when a layout is initialized, but before the shell is attached.\n   */\n  onDidInitializeLayout?(app: FrontendApplication): MaybePromise<void>;\n}\n\nconst TIMER_WARNING_THRESHOLD = 100;\n\nexport interface IFrontendApplicationStartProps {\n  host: HTMLElement;\n}\n\n@injectable()\nexport class FrontendApplication {\n\n  @inject(WindowService)\n  protected readonly windowsService: WindowService;\n  protected inComposition = false;\n\n  constructor(\n      @inject(CommandRegistry) protected readonly commands: CommandRegistry,\n      @inject(MenuModelRegistry) protected readonly menus: MenuModelRegistry,\n      @inject(KeybindingRegistry) protected readonly keybindings: KeybindingRegistry,\n      @inject(ShellLayoutRestorer) protected readonly layoutRestorer: ShellLayoutRestorer,\n      @inject(ContributionProvider) @named(FrontendApplicationContribution)\n      protected readonly contributions: ContributionProvider<FrontendApplicationContribution>,\n      @inject(ApplicationShell) protected readonly _shell: ApplicationShell,\n      @inject(FrontendApplicationStateService) protected readonly stateService: FrontendApplicationStateService,\n  ) {\n  }\n\n  get shell(): ApplicationShell {\n    return this._shell;\n  }\n\n  /**\n   * Start the frontend application.\n   *\n   * Start up consists of the following steps:\n   * - start frontend contributions\n   * - attach the application shell to the host element\n   * - initialize the application shell layout\n   * - reveal the application shell if it was hidden by a startup indicator\n   */\n  async start(props: IFrontendApplicationStartProps): Promise<void> {\n    await this.startContributions();\n    this.stateService.state = 'started_contributions';\n\n    const {host} = props;\n    this.attachShell(host);\n    this.stateService.state = 'attached_shell';\n\n    await this.initializeLayout();\n    this.stateService.state = 'initialized_layout';\n    await this.fireOnDidInitializeLayout();\n\n    this.registerEventListeners();\n    this.stateService.state = 'ready';\n  }\n\n  /**\n   * Attach the application shell to the host element. If a startup indicator is present, the shell is\n   * inserted before that indicator so it is not visible yet.\n   */\n  protected attachShell(host: HTMLElement): void {\n    Widget.attach(this.shell, host);\n  }\n\n  /**\n   * Initialize the shell layout either using the layout restorer service or, if no layout has\n   * been stored, by creating the default layout.\n   */\n  protected async initializeLayout(): Promise<void> {\n    if (!await this.restoreLayout()) {\n      // Fallback: Create the default shell layout\n      await this.createDefaultLayout();\n    }\n    await this.shell.pendingUpdates;\n  }\n\n  /**\n   * Let the frontend application contributions initialize the shell layout. Override this\n   * method in order to create an application-specific custom layout.\n   */\n  protected async createDefaultLayout(): Promise<void> {\n    for (const contribution of this.contributions.getContributions()) {\n      if (contribution.initializeLayout) {\n        await this.measure(contribution.constructor.name + '.initializeLayout',\n            () => contribution.initializeLayout!(this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Try to restore the shell layout from the storage service. Resolves to `true` if successful.\n   */\n  protected async restoreLayout(): Promise<boolean> {\n    try {\n      return await this.layoutRestorer.restoreLayout(this);\n    } catch (error) {\n      if (ApplicationShellLayoutMigrationError.is(error)) {\n        console.warn(error.message);\n        console.info('Initializing the default layout instead...');\n      } else {\n        console.error('Could not restore layout', error);\n      }\n      return false;\n    }\n  }\n\n  /**\n   * Initialize and start the frontend application contributions.\n   */\n  protected async startContributions(): Promise<void> {\n    for (const contribution of this.contributions.getContributions()) {\n      if (contribution.initialize) {\n        try {\n          await this.measure(contribution.constructor.name + '.initialize',\n              () => contribution.initialize!()\n          );\n        } catch (error) {\n          console.error('Could not initialize contribution', error);\n        }\n      }\n    }\n\n    for (const contribution of this.contributions.getContributions()) {\n      if (contribution.configure) {\n        try {\n          await this.measure(contribution.constructor.name + '.configure',\n              () => contribution.configure!(this)\n          );\n        } catch (error) {\n          console.error('Could not configure contribution', error);\n        }\n      }\n    }\n\n    /**\n     * FIXME:\n     * - decouple commands & menus\n     * - consider treat commands, keybindings and menus as frontend application contributions\n     */\n    await this.measure('commands.onStart',\n        () => this.commands.onStart()\n    );\n    await this.measure('keybindings.onStart',\n        () => this.keybindings.onStart()\n    );\n    await this.measure('menus.onStart',\n        () => this.menus.onStart()\n    );\n    for (const contribution of this.contributions.getContributions()) {\n      if (contribution.onStart) {\n        try {\n          await this.measure(contribution.constructor.name + '.onStart',\n              () => contribution.onStart!(this)\n          );\n        } catch (error) {\n          console.error('Could not start contribution', error);\n        }\n      }\n    }\n  }\n\n  protected async measure<T>(name: string, fn: () => MaybePromise<T>): Promise<T> {\n    const startMark = name + '-start';\n    const endMark = name + '-end';\n    performance.mark(startMark);\n    const result = await fn();\n    performance.mark(endMark);\n    performance.measure(name, startMark, endMark);\n    for (const item of performance.getEntriesByName(name)) {\n      const contribution = `Frontend ${item.name}`;\n      if (item.duration > TIMER_WARNING_THRESHOLD) {\n        console.warn(`${contribution} is slow, took: ${item.duration.toFixed(1)} ms`);\n      } else {\n        console.debug(`${contribution} took: ${item.duration.toFixed(1)} ms`);\n      }\n    }\n    performance.clearMeasures(name);\n    return result;\n  }\n\n  protected async fireOnDidInitializeLayout(): Promise<void> {\n    for (const contribution of this.contributions.getContributions()) {\n      if (contribution.onDidInitializeLayout) {\n        await this.measure(contribution.constructor.name + '.onDidInitializeLayout',\n            () => contribution.onDidInitializeLayout!(this)\n        );\n      }\n    }\n  }\n\n  /**\n   * Stop the frontend application contributions. This is called when the window is unloaded.\n   */\n  protected stopContributions(): void {\n    console.info('>>> Stopping frontend contributions...');\n    for (const contribution of this.contributions.getContributions()) {\n      if (contribution.onStop) {\n        try {\n          contribution.onStop(this);\n        } catch (error) {\n          console.error('Could not stop contribution', error);\n        }\n      }\n    }\n    console.info('<<< All frontend contributions have been stopped.');\n  }\n\n  /**\n   * Register global event listeners.\n   */\n  protected registerEventListeners(): void {\n    // console.log(this.windowsService);\n    this.windowsService.onUnload(() => {\n      this.stateService.state = 'closing_window';\n      this.layoutRestorer.storeLayout(this);\n      this.stopContributions();\n    });\n    window.addEventListener('resize', () => this.shell.update());\n    document.addEventListener('keydown', event => {\n      if (this.inComposition !== true) {\n        this.keybindings.run(event);\n      }\n    }, true);\n  }\n}\n\nexport default FrontendApplication;\n"]}
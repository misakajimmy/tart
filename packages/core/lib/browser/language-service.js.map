{"version":3,"sources":["browser/language-service.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;AAElF,OAAO,EAAC,UAAU,EAAC,MAAM,WAAW,CAAC;AAUrC,IAAa,eAAe,GAA5B,MAAa,eAAe;IAE1B;;OAEG;IACH,IAAI,SAAS;QACX,OAAO,EAAE,CAAC;IACZ,CAAC;IAED;;OAEG;IACH,WAAW,CAAC,UAAkB;QAC5B,OAAO,SAAS,CAAC;IACnB,CAAC;CAEF,CAAA;AAhBY,eAAe;IAD3B,UAAU,EAAE;GACA,eAAe,CAgB3B;SAhBY,eAAe","file":"../../src/browser/language-service.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2020 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {injectable} from 'inversify';\n\nexport interface Language {\n  readonly id: string;\n  readonly name: string;\n  readonly extensions: Set<string>;\n  readonly filenames: Set<string>;\n}\n\n@injectable()\nexport class LanguageService {\n\n  /**\n   * It should be implemented by an extension, e.g. by the monaco extension.\n   */\n  get languages(): Language[] {\n    return [];\n  }\n\n  /**\n   * It should be implemented by an extension, e.g. by the monaco extension.\n   */\n  getLanguage(languageId: string): Language | undefined {\n    return undefined;\n  }\n\n}\n"]}
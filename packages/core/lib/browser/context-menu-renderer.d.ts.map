{"version":3,"sources":["browser/context-menu-renderer.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAKlF,OAAO,EAAC,QAAQ,EAAC,MAAM,gBAAgB,CAAC;AACxC,OAAO,EAAC,UAAU,EAAE,oBAAoB,EAAC,MAAM,WAAW,CAAC;AAE3D,MAAM,WAAW,UAAU;IACzB,CAAC,EAAE,MAAM,CAAC;IACV,CAAC,EAAE,MAAM,CAAC;CACX;AAED,eAAO,MAAM,UAAU,eAAuB,CAAC;AAE/C,oBAAY,MAAM,GAAG,UAAU,GAAG,UAAU,CAAC;AAE7C,wBAAgB,QAAQ,CAAC,MAAM,EAAE,WAAW,GAAG,UAAU,GAAG,MAAM,CAEjE;AAED,wBAAgB,oBAAoB,CAAC,MAAM,EAAE,MAAM,GAAG,UAAU,CAG/D;AAED,8BAAsB,iBAAkB,YAAW,UAAU;IAE3D,SAAS,CAAC,QAAQ,CAAC,SAAS,uBAA8B;IAC1D,QAAQ,CAAC,SAAS,kCAA4B;gBAElC,OAAO,EAAE,UAAU;IAI/B,IAAI,QAAQ,IAAI,OAAO,CAEtB;IAED,OAAO,IAAI,IAAI;CAIhB;AAED,8BACsB,mBAAmB;IAEvC,SAAS,CAAC,QAAQ,CAAC,qBAAqB,uBAA8B;IAEtE,SAAS,CAAC,QAAQ,EAAE,iBAAiB,GAAG,SAAS,CAAC;IAElD;;;OAGG;IACH,IAAI,OAAO,IAAI,iBAAiB,GAAG,SAAS,CAE3C;IAED,MAAM,CAAC,OAAO,EAAE,wBAAwB,GAAG,iBAAiB;IAE5D,sEAAsE;IACtE,MAAM,CAAC,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,MAAM,IAAI,GAAG,iBAAiB;IASlF,SAAS,CAAC,UAAU,CAAC,OAAO,EAAE,iBAAiB,GAAG,SAAS,GAAG,IAAI;IAclE,SAAS,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,EAAE,wBAAwB,GAAG,iBAAiB;CAElF;AAED,MAAM,WAAW,wBAAwB;IACvC,QAAQ,EAAE,QAAQ,CAAA;IAClB,MAAM,EAAE,MAAM,CAAA;IACd,IAAI,CAAC,EAAE,GAAG,EAAE,CAAA;IACZ,MAAM,CAAC,EAAE,MAAM,IAAI,CAAA;CACpB;AAED,yBAAiB,wBAAwB,CAAC;IACxC,SAAgB,OAAO,CAAC,iBAAiB,EAAE,QAAQ,GAAG,wBAAwB,EAAE,MAAM,CAAC,EAAE,MAAM,EAAE,MAAM,CAAC,EAAE,MAAM,IAAI,GAAG,wBAAwB,CAkB9I;CACF","file":"../../src/browser/context-menu-renderer.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\nimport {injectable} from 'inversify';\nimport {MenuPath} from '../common/menu';\nimport {Disposable, DisposableCollection} from '../common';\n\nexport interface Coordinate {\n  x: number;\n  y: number;\n}\n\nexport const Coordinate = Symbol('Coordinate');\n\nexport type Anchor = MouseEvent | Coordinate;\n\nexport function toAnchor(anchor: HTMLElement | Coordinate): Anchor {\n  return anchor instanceof HTMLElement ? {x: anchor.offsetLeft, y: anchor.offsetTop} : anchor;\n}\n\nexport function coordinateFromAnchor(anchor: Anchor): Coordinate {\n  const {x, y} = anchor instanceof MouseEvent ? {x: anchor.clientX, y: anchor.clientY} : anchor;\n  return {x, y};\n}\n\nexport abstract class ContextMenuAccess implements Disposable {\n\n  protected readonly toDispose = new DisposableCollection();\n  readonly onDispose = this.toDispose.onDispose;\n\n  constructor(toClose: Disposable) {\n    this.toDispose.push(toClose);\n  }\n\n  get disposed(): boolean {\n    return this.toDispose.disposed;\n  }\n\n  dispose(): void {\n    this.toDispose.dispose();\n  }\n\n}\n\n@injectable()\nexport abstract class ContextMenuRenderer {\n\n  protected readonly toDisposeOnSetCurrent = new DisposableCollection();\n\n  protected _current: ContextMenuAccess | undefined;\n\n  /**\n   * Currently opened context menu.\n   * Rendering a new context menu will close the current.\n   */\n  get current(): ContextMenuAccess | undefined {\n    return this._current;\n  }\n\n  render(options: RenderContextMenuOptions): ContextMenuAccess;\n\n  /** @deprecated since 0.7.2 pass `RenderContextMenuOptions` instead */\n  render(menuPath: MenuPath, anchor: Anchor, onHide?: () => void): ContextMenuAccess;\n\n  render(menuPathOrOptions: MenuPath | RenderContextMenuOptions, anchor?: Anchor, onHide?: () => void): ContextMenuAccess {\n    const resolvedOptions = RenderContextMenuOptions.resolve(menuPathOrOptions, anchor, onHide);\n    const access = this.doRender(resolvedOptions);\n    this.setCurrent(access);\n    return access;\n  }\n\n  protected setCurrent(current: ContextMenuAccess | undefined): void {\n    if (this._current === current) {\n      return;\n    }\n    this.toDisposeOnSetCurrent.dispose();\n    this._current = current;\n    if (current) {\n      this.toDisposeOnSetCurrent.push(current.onDispose(() => {\n        this._current = undefined;\n      }));\n      this.toDisposeOnSetCurrent.push(current);\n    }\n  }\n\n  protected abstract doRender(options: RenderContextMenuOptions): ContextMenuAccess;\n\n}\n\nexport interface RenderContextMenuOptions {\n  menuPath: MenuPath\n  anchor: Anchor\n  args?: any[]\n  onHide?: () => void\n}\n\nexport namespace RenderContextMenuOptions {\n  export function resolve(menuPathOrOptions: MenuPath | RenderContextMenuOptions, anchor?: Anchor, onHide?: () => void): RenderContextMenuOptions {\n    let menuPath: MenuPath;\n    let args: any[];\n    if (Array.isArray(menuPathOrOptions)) {\n      menuPath = menuPathOrOptions;\n      args = [anchor!];\n    } else {\n      menuPath = menuPathOrOptions.menuPath;\n      anchor = menuPathOrOptions.anchor;\n      onHide = menuPathOrOptions.onHide;\n      args = menuPathOrOptions.args ? [...menuPathOrOptions.args, anchor] : [anchor];\n    }\n    return {\n      menuPath,\n      anchor: anchor!,\n      onHide,\n      args\n    };\n  }\n}\n"]}
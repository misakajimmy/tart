{"version":3,"sources":["browser/theming.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAElF,OAAO,EAAC,OAAO,EAAQ,MAAM,WAAW,CAAC;AACzC,OAAO,EAAC,UAAU,EAAC,MAAM,sBAAsB,CAAC;AAEhD,OAAO,OAAO,MAAM,4CAA4C,CAAC;AACjE,OAAO,QAAQ,MAAM,8CAA8C,CAAC;AAEpE;;GAEG;AACH,cAAc,iBAAiB,CAAC;AAEhC,MAAM,CAAC,MAAM,kBAAkB,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AAEzD,MAAM,OAAO,YAAY;IAEb,MAAM,GAA4B,EAAE,CAAC;IACrC,WAAW,CAAoB;IACtB,WAAW,GAAG,IAAI,OAAO,EAAoB,CAAC;IAExD,qBAAqB,GAA4B,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;IAEjF;;OAEG;IACH,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACpD,CAAC;IAED,IAAI,YAAY;QACd,OAAO,IAAI,CAAC,MAAM,CAAC;IACrB,CAAC;IAED,MAAM,CAAC,GAAG;QACR,MAAM,MAAM,GAAG,MAAa,CAAC;QAC7B,IAAI,CAAC,MAAM,CAAC,kBAAkB,CAAC,EAAE;YAC/B,MAAM,YAAY,GAAG,IAAI,YAAY,EAAE,CAAC;YACxC,YAAY,CAAC,QAAQ,CAAC,GAAG,oBAAoB,CAAC,MAAM,CAAC,CAAC;YACtD,YAAY,CAAC,YAAY,EAAE,CAAC;YAC5B,MAAM,CAAC,kBAAkB,CAAC,GAAG,YAAY,CAAC;SAC3C;QACD,OAAO,MAAM,CAAC,kBAAkB,CAAC,CAAC;IACpC,CAAC;IAED,QAAQ,CAAC,GAAG,MAAe;QACzB,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;YAC1B,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;SAC/B;QACD,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC3B,OAAO,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE;YAC5B,KAAK,MAAM,KAAK,IAAI,MAAM,EAAE;gBAC1B,OAAO,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;aAC9B;YACD,IAAI,CAAC,mBAAmB,EAAE,CAAC;QAC7B,CAAC,CAAC,CAAC;IACL,CAAC;IAED,SAAS;QACP,MAAM,MAAM,GAAG,EAAE,CAAC;QAClB,KAAK,MAAM,CAAC,IAAI,IAAI,CAAC,MAAM,EAAE;YAC3B,IAAI,IAAI,CAAC,MAAM,CAAC,cAAc,CAAC,CAAC,CAAC,EAAE;gBACjC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;aAC7B;SACF;QACD,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,QAAQ,CAAC,OAAe;QACtB,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;IAC9B,CAAC;IAED,YAAY;QACV,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACrC,sBAAsB;QACtB,KAAK,CAAC,QAAQ,EAAE,CAAC;IACnB,CAAC;IAED,aAAa;QACX,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,EAAE,CAAC;QACrC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;IACjC,CAAC;IAED,eAAe,CAAC,OAAe;QAC7B,MAAM,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACxC,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QAClC,IAAI,QAAQ,EAAE;YACZ,IAAI,QAAQ,CAAC,EAAE,KAAK,QAAQ,CAAC,EAAE,EAAE;gBAC/B,OAAO;aACR;YACD,QAAQ,CAAC,UAAU,EAAE,CAAC;SACvB;QACD,QAAQ,CAAC,QAAQ,EAAE,CAAC;QACpB,IAAI,CAAC,WAAW,GAAG,QAAQ,CAAC;QAC5B,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QAC9C,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC;YACpB,QAAQ,EAAE,QAAQ;SACnB,CAAC,CAAC;IACL,CAAC;IAED,eAAe;QACb,MAAM,OAAO,GAAG,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC;QAC7E,OAAO,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAChC,CAAC;IAED;;OAEG;IACH,KAAK;QACH,8CAA8C;IAChD,CAAC;IAES,mBAAmB;QAC3B,IAAI,CAAC,IAAI,CAAC,WAAW,EAAE;YACrB,OAAO;SACR;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;QAC/C,IAAI,CAAC,KAAK,EAAE;YACV,IAAI,CAAC,aAAa,EAAE,CAAC;SACtB;aAAM,IAAI,KAAK,KAAK,IAAI,CAAC,WAAW,EAAE;YACrC,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;YAC7B,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;SAChC;IACH,CAAC;CACF;AAED,MAAM,OAAO,oBAAoB;IAE/B,MAAM,CAAU,OAAO,GAAG,OAAO,CAAC;IAClC,MAAM,CAAU,QAAQ,GAAG,QAAQ,CAAC;IAEpC,yFAAyF;IAEzF,MAAM,CAAU,SAAS,GAAU;QACjC,EAAE,EAAE,MAAM;QACV,IAAI,EAAE,MAAM;QACZ,KAAK,EAAE,aAAa;QACpB,WAAW,EAAE,WAAW;QACxB,QAAQ;YACN,oBAAoB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QACrC,CAAC;QACD,UAAU;YACR,oBAAoB,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACvC,CAAC;KACF,CAAC;IAEF,MAAM,CAAU,UAAU,GAAU;QAClC,EAAE,EAAE,OAAO;QACX,IAAI,EAAE,OAAO;QACb,KAAK,EAAE,cAAc;QACrB,WAAW,EAAE,YAAY;QACzB,QAAQ;YACN,oBAAoB,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;QACtC,CAAC;QACD,UAAU;YACR,oBAAoB,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACxC,CAAC;KACF,CAAC;IAEF,MAAM,CAAU,OAAO,GAAU;QAC/B,EAAE,EAAE,SAAS;QACb,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,sBAAsB;QAC7B,WAAW,EAAE,SAAS;QACtB,QAAQ;YACN,oBAAoB,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC;QACrC,CAAC;QACD,UAAU;YACR,oBAAoB,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC;QACvC,CAAC;KACF,CAAC;IAEF,MAAM,CAAU,MAAM,GAAG;QACvB,IAAI,CAAC,SAAS;QACd,IAAI,CAAC,UAAU;QACf,IAAI,CAAC,OAAO;KACb,CAAC","file":"../../src/browser/theming.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {Emitter, Event} from '../common';\nimport {Disposable} from '../common/disposable';\nimport {Theme, ThemeChangeEvent} from '../common/theme';\nimport darkCss from '../assets/style/variables-dark.useable.css';\nimport lightCss from '../assets/style/variables-bright.useable.css';\n\n/**\n * @deprecated since 1.20.0. Import from `@tart/core/lib/common/theme` instead.\n */\nexport * from '../common/theme';\n\nexport const ThemeServiceSymbol = Symbol('ThemeService');\n\nexport class ThemeService {\n\n  protected themes: { [id: string]: Theme } = {};\n  protected activeTheme: Theme | undefined;\n  protected readonly themeChange = new Emitter<ThemeChangeEvent>();\n\n  readonly onDidColorThemeChange: Event<ThemeChangeEvent> = this.themeChange.event;\n\n  /**\n   * The default theme. If that is not applicable, returns with the fallback theme.\n   */\n  get defaultTheme(): Theme {\n    return this.themes['dark'] || this.themes['dark'];\n  }\n\n  get getAllThemes(): { [id: string]: Theme } {\n    return this.themes;\n  }\n\n  static get(): ThemeService {\n    const global = window as any;\n    if (!global[ThemeServiceSymbol]) {\n      const themeService = new ThemeService();\n      themeService.register(...BuiltinThemeProvider.themes);\n      themeService.startupTheme();\n      global[ThemeServiceSymbol] = themeService;\n    }\n    return global[ThemeServiceSymbol];\n  }\n\n  register(...themes: Theme[]): Disposable {\n    for (const theme of themes) {\n      this.themes[theme.id] = theme;\n    }\n    this.validateActiveTheme();\n    return Disposable.create(() => {\n      for (const theme of themes) {\n        delete this.themes[theme.id];\n      }\n      this.validateActiveTheme();\n    });\n  }\n\n  getThemes(): Theme[] {\n    const result = [];\n    for (const o in this.themes) {\n      if (this.themes.hasOwnProperty(o)) {\n        result.push(this.themes[o]);\n      }\n    }\n    return result;\n  }\n\n  getTheme(themeId: string): Theme {\n    return this.themes[themeId];\n  }\n\n  startupTheme(): void {\n    const theme = this.getCurrentTheme();\n    // console.log(theme);\n    theme.activate();\n  }\n\n  loadUserTheme(): void {\n    const theme = this.getCurrentTheme();\n    this.setCurrentTheme(theme.id);\n  }\n\n  setCurrentTheme(themeId: string): void {\n    const newTheme = this.getTheme(themeId);\n    const oldTheme = this.activeTheme;\n    if (oldTheme) {\n      if (oldTheme.id === newTheme.id) {\n        return;\n      }\n      oldTheme.deactivate();\n    }\n    newTheme.activate();\n    this.activeTheme = newTheme;\n    window.localStorage.setItem('theme', themeId);\n    this.themeChange.fire({\n      newTheme, oldTheme\n    });\n  }\n\n  getCurrentTheme(): Theme {\n    const themeId = window.localStorage.getItem('theme') || this.defaultTheme.id;\n    return this.getTheme(themeId);\n  }\n\n  /**\n   * Resets the state to the user's default, or to the fallback theme. Also discards any persisted state in the local storage.\n   */\n  reset(): void {\n    // this.setCurrentTheme(this.defaultTheme.id);\n  }\n\n  protected validateActiveTheme(): void {\n    if (!this.activeTheme) {\n      return;\n    }\n    const theme = this.themes[this.activeTheme.id];\n    if (!theme) {\n      this.loadUserTheme();\n    } else if (theme !== this.activeTheme) {\n      this.activeTheme = undefined;\n      this.setCurrentTheme(theme.id);\n    }\n  }\n}\n\nexport class BuiltinThemeProvider {\n\n  static readonly darkCss = darkCss;\n  static readonly lightCss = lightCss;\n\n  // Webpack converts these `require` in some Javascript object that wraps the `.css` files\n\n  static readonly darkTheme: Theme = {\n    id: 'dark',\n    type: 'dark',\n    label: 'Dark (Tart)',\n    editorTheme: 'dark-tart', // loaded in /packages/monaco/src/browser/textmate/monaco-theme-registry.ts\n    activate(): void {\n      BuiltinThemeProvider.darkCss.use();\n    },\n    deactivate(): void {\n      BuiltinThemeProvider.darkCss.unuse();\n    }\n  };\n\n  static readonly lightTheme: Theme = {\n    id: 'light',\n    type: 'light',\n    label: 'Light (Tart)',\n    editorTheme: 'light-tart', // loaded in /packages/monaco/src/browser/textmate/monaco-theme-registry.ts\n    activate(): void {\n      BuiltinThemeProvider.lightCss.use();\n    },\n    deactivate(): void {\n      BuiltinThemeProvider.lightCss.unuse();\n    }\n  };\n\n  static readonly hcTheme: Theme = {\n    id: 'hc-tart',\n    type: 'hc',\n    label: 'High Contrast (Tart)',\n    editorTheme: 'hc-tart', // loaded in /packages/monaco/src/browser/textmate/monaco-theme-registry.ts\n    activate(): void {\n      BuiltinThemeProvider.darkCss.use();\n    },\n    deactivate(): void {\n      BuiltinThemeProvider.darkCss.unuse();\n    }\n  };\n\n  static readonly themes = [\n    this.darkTheme,\n    this.lightTheme,\n    this.hcTheme\n  ];\n}\n"]}
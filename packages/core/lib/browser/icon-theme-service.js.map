{"version":3,"sources":["browser/icon-theme-service.ts"],"names":[],"mappings":"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","file":"../../src/browser/icon-theme-service.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {inject, injectable, postConstruct} from 'inversify';\nimport {Disposable, DisposableCollection, Emitter} from '../common';\nimport {DidChangeLabelEvent, LabelProviderContribution} from './label-provider';\nimport {FrontendApplicationConfigProvider} from './frontend-application-config-provider';\n\nexport interface IconThemeDefinition {\n  readonly id: string\n  readonly label: string\n  readonly description?: string\n  readonly hasFileIcons?: boolean;\n  readonly hasFolderIcons?: boolean;\n  readonly hidesExplorerArrows?: boolean;\n}\n\nexport interface IconTheme extends IconThemeDefinition {\n  activate(): Disposable;\n}\n\n@injectable()\nexport class NoneIconTheme implements IconTheme, LabelProviderContribution {\n\n  readonly id = 'none';\n  readonly label = 'None';\n  readonly description = 'Disable file icons';\n  readonly hasFileIcons = true;\n  readonly hasFolderIcons = true;\n\n  protected readonly onDidChangeEmitter = new Emitter<DidChangeLabelEvent>();\n  readonly onDidChange = this.onDidChangeEmitter.event;\n\n  protected readonly toDeactivate = new DisposableCollection();\n\n  activate(): Disposable {\n    if (this.toDeactivate.disposed) {\n      this.toDeactivate.push(Disposable.create(() => this.fireDidChange()));\n      this.fireDidChange();\n    }\n    return this.toDeactivate;\n  }\n\n  canHandle(): number {\n    if (this.toDeactivate.disposed) {\n      return 0;\n    }\n    return Number.MAX_SAFE_INTEGER;\n  }\n\n  getIcon(): string {\n    return '';\n  }\n\n  protected fireDidChange(): void {\n    this.onDidChangeEmitter.fire({affects: () => true});\n  }\n\n}\n\n@injectable()\nexport class IconThemeService {\n\n  protected readonly onDidChangeEmitter = new Emitter<void>();\n  readonly onDidChange = this.onDidChangeEmitter.event;\n\n  protected readonly _iconThemes = new Map<string, IconTheme>();\n  @inject(NoneIconTheme)\n  protected readonly noneIconTheme: NoneIconTheme;\n  protected readonly onDidChangeCurrentEmitter = new Emitter<string>();\n  readonly onDidChangeCurrent = this.onDidChangeCurrentEmitter.event;\n  protected readonly toDeactivate = new DisposableCollection();\n\n  get ids(): IterableIterator<string> {\n    return this._iconThemes.keys();\n  }\n\n  get definitions(): IterableIterator<IconThemeDefinition> {\n    return this._iconThemes.values();\n  }\n\n  get current(): string {\n    return this.getCurrent().id;\n  }\n\n  set current(id: string) {\n    const newCurrent = this._iconThemes.get(id) || this.default;\n    if (this.getCurrent().id !== newCurrent.id) {\n      this.setCurrent(newCurrent);\n    }\n  }\n\n  get default(): IconTheme {\n    return this._iconThemes.get(FrontendApplicationConfigProvider.get().defaultIconTheme) || this.noneIconTheme;\n  }\n\n  getDefinition(id: string): IconThemeDefinition | undefined {\n    return this._iconThemes.get(id);\n  }\n\n  register(iconTheme: IconTheme): Disposable {\n    if (this._iconThemes.has(iconTheme.id)) {\n      console.warn(new Error(`Icon theme '${iconTheme.id}' has already been registered, skipping.`));\n      return Disposable.NULL;\n    }\n    this._iconThemes.set(iconTheme.id, iconTheme);\n    this.onDidChangeEmitter.fire(undefined);\n    if (this.toDeactivate.disposed\n        && window.localStorage.getItem('iconTheme') === iconTheme.id) {\n      this.setCurrent(iconTheme);\n    }\n    return Disposable.create(() => this.unregister(iconTheme.id));\n  }\n\n  unregister(id: string): IconTheme | undefined {\n    const iconTheme = this._iconThemes.get(id);\n    if (!iconTheme) {\n      return undefined;\n    }\n    this._iconThemes.delete(id);\n    if (window.localStorage.getItem('iconTheme') === id) {\n      window.localStorage.removeItem('iconTheme');\n      this.onDidChangeCurrentEmitter.fire(this.default.id);\n    }\n    this.onDidChangeEmitter.fire(undefined);\n    return iconTheme;\n  }\n\n  @postConstruct()\n  protected init(): void {\n    this.register(this.noneIconTheme);\n  }\n\n  protected getCurrent(): IconTheme {\n    const id = window.localStorage.getItem('iconTheme');\n    return id && this._iconThemes.get(id) || this.default;\n  }\n\n  protected setCurrent(current: IconTheme): void {\n    window.localStorage.setItem('iconTheme', current.id);\n    this.toDeactivate.dispose();\n    this.toDeactivate.push(current.activate());\n    this.onDidChangeCurrentEmitter.fire(current.id);\n  }\n\n  protected load(): string | undefined {\n    return window.localStorage.getItem('iconTheme') || undefined;\n  }\n\n}\n"]}
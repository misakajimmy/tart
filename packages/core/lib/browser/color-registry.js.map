{"version":3,"sources":["browser/color-registry.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;AAElF,OAAO,EAAC,UAAU,EAAC,MAAM,WAAW,CAAC;AACrC,OAAO,EAAC,UAAU,EAAE,oBAAoB,EAAC,MAAM,sBAAsB,CAAC;AACtE,OAAO,EAAC,OAAO,EAAC,MAAM,WAAW,CAAC;AAGlC;;GAEG;AACH,cAAc,iBAAiB,CAAC;AAGhC,IAAa,aAAa,GAA1B,MAAa,aAAa;IAEL,kBAAkB,GAAG,IAAI,OAAO,EAAQ,CAAC;IACnD,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;IAErD,CAAE,SAAS;IACX,CAAC;IAED,qBAAqB,CAAC,EAAU;QAC9B,MAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,EAAE,CAAC,CAAC;QACvC,IAAI,CAAC,KAAK,EAAE;YACV,OAAO,SAAS,CAAC;SAClB;QACD,MAAM,IAAI,GAAG,IAAI,CAAC,iBAAiB,CAAC,EAAE,CAAC,CAAC;QACxC,OAAO,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC;IACvB,CAAC;IAED,iBAAiB,CAAC,EAAU,EAAE,MAAM,GAAG,MAAM;QAC3C,OAAO,KAAK,MAAM,IAAI,EAAE,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,EAAE,CAAC;IACjD,CAAC;IAED,eAAe,CAAC,EAAU;QACxB,OAAO,SAAS,CAAC;IACnB,CAAC;IAED,QAAQ,CAAC,GAAG,WAA8B;QACxC,MAAM,MAAM,GAAG,IAAI,oBAAoB,CAAC,GAAG,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;QACvG,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,OAAO,MAAM,CAAC;IAChB,CAAC;IAES,aAAa;QACrB,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;IAC1C,CAAC;IAES,UAAU,CAAC,UAA2B;QAC9C,OAAO,UAAU,CAAC,IAAI,CAAC;IACzB,CAAC;CAEF,CAAA;AAvCY,aAAa;IADzB,UAAU,EAAE;GACA,aAAa,CAuCzB;SAvCY,aAAa","file":"../../src/browser/color-registry.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {injectable} from 'inversify';\nimport {Disposable, DisposableCollection} from '../common/disposable';\nimport {Emitter} from '../common';\nimport {ColorCssVariable, ColorDefinition} from '../common/color';\n\n/**\n * @deprecated since 1.20.0. Import from `@tart/core/lib/common/color` instead.\n */\nexport * from '../common/color';\n\n@injectable()\nexport class ColorRegistry {\n\n  protected readonly onDidChangeEmitter = new Emitter<void>();\n  readonly onDidChange = this.onDidChangeEmitter.event;\n\n  * getColors(): IterableIterator<string> {\n  }\n\n  getCurrentCssVariable(id: string): ColorCssVariable | undefined {\n    const value = this.getCurrentColor(id);\n    if (!value) {\n      return undefined;\n    }\n    const name = this.toCssVariableName(id);\n    return {name, value};\n  }\n\n  toCssVariableName(id: string, prefix = 'tart'): string {\n    return `--${prefix}-${id.replace(/\\./g, '-')}`;\n  }\n\n  getCurrentColor(id: string): string | undefined {\n    return undefined;\n  }\n\n  register(...definitions: ColorDefinition[]): Disposable {\n    const result = new DisposableCollection(...definitions.map(definition => this.doRegister(definition)));\n    this.fireDidChange();\n    return result;\n  }\n\n  protected fireDidChange(): void {\n    this.onDidChangeEmitter.fire(undefined);\n  }\n\n  protected doRegister(definition: ColorDefinition): Disposable {\n    return Disposable.NULL;\n  }\n\n}\n"]}
{"version":3,"sources":["browser/menu/context-menu-context.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;AAKlF,qBACa,kBAAkB;;IAO7B,SAAS,CAAC,WAAW,UAAS;IAE9B,IAAI,UAAU,IAAI,OAAO,CAExB;IAED,eAAe,IAAI,IAAI;IAIvB,SAAS,CAAC,aAAa,CAAC,UAAU,EAAE,OAAO,GAAG,IAAI;CAInD","file":"../../../src/browser/menu/context-menu-context.d.ts","sourcesContent":["/********************************************************************************\n * Copyright (C) 2019 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {injectable} from 'inversify';\nimport {OS} from '../../common/os';\n\n@injectable()\nexport class ContextMenuContext {\n\n  constructor() {\n    document.addEventListener('keydown', e => this.setAltPressed(e.altKey || (OS.type() !== OS.Type.OSX && e.shiftKey)), true);\n    document.addEventListener('keyup', () => this.resetAltPressed(), true);\n  }\n\n  protected _altPressed = false;\n\n  get altPressed(): boolean {\n    return this._altPressed;\n  }\n\n  resetAltPressed(): void {\n    this.setAltPressed(false);\n  }\n\n  protected setAltPressed(altPressed: boolean): void {\n    this._altPressed = altPressed;\n  }\n\n}\n"]}
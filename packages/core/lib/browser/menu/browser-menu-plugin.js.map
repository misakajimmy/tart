{"version":3,"sources":["browser/menu/browser-menu-plugin.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;;;;;;;;;;AAElF,OAAO,EAAC,MAAM,EAAE,UAAU,EAAC,MAAM,WAAW,CAAC;AAC7C,OAAO,EAAC,IAAI,IAAI,UAAU,EAAE,OAAO,EAAE,MAAM,EAAC,MAAM,iBAAiB,CAAC;AACpE,OAAO,EAAC,eAAe,IAAI,uBAAuB,EAAC,MAAM,kBAAkB,CAAC;AAC5E,OAAO,EACL,cAAc,EACd,eAAe,EACf,iBAAiB,EACjB,UAAU,EACV,oBAAoB,EACpB,aAAa,EACb,iBAAiB,EAGlB,MAAM,cAAc,CAAC;AACtB,OAAO,EAAC,kBAAkB,EAAC,MAAM,eAAe,CAAC;AAEjD,OAAO,EAAC,iBAAiB,EAAC,MAAM,wBAAwB,CAAC;AACzD,OAAO,EAAC,kBAAkB,EAAC,MAAM,wBAAwB,CAAC;AAC1D,OAAO,EAAC,eAAe,EAAC,MAAM,YAAY,CAAC;AAC3C,OAAO,EAAC,gBAAgB,EAAC,MAAM,UAAU,CAAC;AAC1C,OAAO,EAAC,eAAe,EAAC,MAAM,qBAAqB,CAAC;AAEpD,MAAM,OAAgB,aAAc,SAAQ,OAAO;CAIlD;AAGD,IAAa,sBAAsB,GAAnC,MAAa,sBAAsB;IAGd,iBAAiB,CAAoB;IAGrC,eAAe,CAAkB;IAGjC,OAAO,CAAqB;IAG5B,eAAe,CAAkB;IAGjC,kBAAkB,CAAqB;IAGvC,YAAY,CAAoB;IAEnD,IAAc,QAAQ;QACpB,OAAO;YACL,OAAO,EAAE,IAAI,CAAC,OAAO;YACrB,iBAAiB,EAAE,IAAI,CAAC,iBAAiB;YACzC,eAAe,EAAE,IAAI,CAAC,eAAe;YACrC,kBAAkB,EAAE,IAAI,CAAC,kBAAkB;YAC3C,iBAAiB,EAAE,IAAI;SACxB,CAAC;IACJ,CAAC;IAED,aAAa;QACX,MAAM,OAAO,GAAG,IAAI,oBAAoB,EAAE,CAAC;QAC3C,OAAO,CAAC,EAAE,GAAG,cAAc,CAAC;QAC5B,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAErC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;YACnC,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,0BAA0B,EAAE,SAAS,CAAC,CAAC,CAAC;QAC7F,CAAC,CAAC,CAAC;QACH,MAAM,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,mBAAmB,CAAC,UAAU,CAAC,EAAE;YAC/E,IAAI,UAAU,CAAC,cAAc,KAAK,0BAA0B,EAAE;gBAC5D,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;aAChD;QACH,CAAC,CAAC,CAAC;QACH,MAAM,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,oBAAoB,CAAC,GAAG,EAAE;YAC3E,MAAM,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,0BAA0B,CAAC,CAAC;YACpE,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,UAAU,CAAC,CAAC;QACxC,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,EAAE;YAC5B,kBAAkB,CAAC,OAAO,EAAE,CAAC;YAC7B,kBAAkB,CAAC,OAAO,EAAE,CAAC;QAC/B,CAAC,CAAC,CAAC;QACH,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,8DAA8D;IAC9D,iBAAiB,CAAC,IAAc,EAAE,IAAY;QAC5C,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAClD,MAAM,mBAAmB,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC,QAAQ,EAAE,CAAC;QACvF,MAAM,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,EAAC,QAAQ,EAAE,mBAAmB,EAAC,CAAC,CAAC;QACtF,OAAO,WAAW,CAAC;IACrB,CAAC;IAED,gBAAgB,CAAC,IAAuB,EAAE,OAAgE;QACxG,OAAO,IAAI,iBAAiB,CAAC,IAAI,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;IAC7D,CAAC;IAES,WAAW,CAAC,OAA6B,EAAE,UAA8B;QACjF,IAAI,UAAU,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YAC7D,OAAO,CAAC,UAAU,EAAE,CAAC;YACrB,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;SAC3B;aAAM;YACL,OAAO,CAAC,UAAU,EAAE,CAAC;SACtB;IACH,CAAC;IAES,WAAW,CAAC,OAAsB;QAC1C,MAAM,SAAS,GAAG,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;QAC3D,MAAM,mBAAmB,GAAG,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAC;QACtE,KAAK,MAAM,IAAI,IAAI,SAAS,CAAC,QAAQ,EAAE;YACrC,IAAI,IAAI,YAAY,iBAAiB,EAAE;gBACrC,MAAM,UAAU,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,EAAC,QAAQ,EAAE,mBAAmB,EAAC,CAAC,CAAC;gBAChF,OAAO,CAAC,OAAO,CAAC,UAAU,CAAC,CAAC;aAC7B;SACF;IACH,CAAC;IAED,8DAA8D;IACpD,yBAAyB,CAAC,IAAuB,EAAE,OAAc,EAAE;QAC3E,MAAM,mBAAmB,GAAG,IAAI,mBAAmB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACnE,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC;QACnD,OAAO,mBAAmB,CAAC;IAC7B,CAAC;IAED,8DAA8D;IACpD,YAAY,CAAC,mBAAwC,EAAE,IAAuB,EAAE,IAAW;QACnG,KAAK,MAAM,KAAK,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjC,IAAI,KAAK,YAAY,cAAc,EAAE;gBACnC,mBAAmB,CAAC,kBAAkB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC;gBACpD,IAAI,KAAK,CAAC,OAAO,EAAE;oBACjB,mBAAmB,CAAC,kBAAkB,CAAC,KAAK,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;iBAC7D;aACF;iBAAM,IAAI,KAAK,YAAY,iBAAiB,EAAE;gBAC7C,IAAI,CAAC,YAAY,CAAC,mBAAmB,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aACrD;iBAAM;gBACL,IAAI,CAAC,aAAa,CAAC,mBAAmB,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;aACtD;SACF;IACH,CAAC;IAED,8DAA8D;IACpD,aAAa,CAAC,mBAAwC,EAAE,QAAkB,EAAE,IAAW;QAC/F,OAAO;IACT,CAAC;CAEF,CAAA;AA/GC;IADC,MAAM,CAAC,iBAAiB,CAAC;iEAC8B;AAGxD;IADC,MAAM,CAAC,eAAe,CAAC;+DAC4B;AAGpD;IADC,MAAM,CAAC,kBAAkB,CAAC;uDACoB;AAG/C;IADC,MAAM,CAAC,eAAe,CAAC;+DAC4B;AAGpD;IADC,MAAM,CAAC,kBAAkB,CAAC;kEAC+B;AAG1D;IADC,MAAM,CAAC,iBAAiB,CAAC;4DACyB;AAlBxC,sBAAsB;IADlC,UAAU,EAAE;GACA,sBAAsB,CAkHlC;SAlHY,sBAAsB;AAoHnC,MAAM,OAAO,oBAAqB,SAAQ,aAAa;IAErD;;OAEG;IACO,sBAAsB,CAA0B;IAE1D;QACE,KAAK,EAAE,CAAC;QACR,mFAAmF;QACnF,oBAAoB,CAAC,SAAS,CAAC,gBAAgB,CAAC,GAAG,GAAG,EAAE;YACtD,IAAI,IAAI,CAAC,UAAU,YAAY,iBAAiB,EAAE;gBAChD,qGAAqG;gBACrG,sGAAsG;gBACtG,6DAA6D;gBAC7D,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE;oBACnB,MAAM,EAAC,aAAa,EAAC,GAAG,QAAQ,CAAC;oBACjC,IAAI,aAAa,YAAY,WAAW,EAAE;wBACxC,IAAI,CAAC,sBAAsB,GAAG,aAAa,CAAC;qBAC7C;iBACF;gBACD,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,EAAC,sBAAsB,EAAE,IAAI,CAAC,sBAAsB,EAAC,CAAC,CAAC;aACpF;YACD,KAAK,CAAC,gBAAgB,CAAC,EAAE,CAAC;QAC5B,CAAC,CAAC;IACJ,CAAC;IAED,KAAK,CAAC,YAAY,CAAC,KAAa,EAAE,GAAG,MAAgB;QACnD,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,KAAK,CAAC,CAAC;QAC3D,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,mBAAmB,KAAK,QAAQ,CAAC,CAAC;SACnD;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,MAAM,eAAe,CAAC,IAAI,CAAC,CAAC;QAE5B,MAAM,QAAQ,GAAG,CAAC,KAAK,CAAC,CAAC;QAEzB,IAAI,OAAO,GAAG,IAAI,CAAC;QACnB,KAAK,MAAM,SAAS,IAAI,MAAM,EAAE;YAC9B,MAAM,IAAI,GAAG,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,SAAS,CAAC,CAAC;YAC5D,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE;gBAC1B,MAAM,IAAI,KAAK,CAAC,mBAAmB,KAAK,gBAAgB,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;aAC/G;YACD,OAAO,CAAC,UAAU,GAAG,IAAI,CAAC;YAC1B,OAAO,CAAC,iBAAiB,EAAE,CAAC;YAC5B,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;YACvB,MAAM,eAAe,CAAC,OAAO,CAAC,CAAC;SAChC;QACD,OAAO,OAAO,CAAC;IACjB,CAAC;IAED,KAAK,CAAC,eAAe,CAAC,KAAa,EAAE,GAAG,MAAgB;QACtD,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;YAClB,MAAM,IAAI,KAAK,CAAC,kCAAkC,CAAC,CAAC;SACrD;QACD,MAAM,QAAQ,GAAG,CAAC,KAAK,EAAE,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QAChE,MAAM,IAAI,GAAG,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,GAAG,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;QACxE,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,KAAK,KAAK,MAAM,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;QACzE,IAAI,CAAC,IAAI,EAAE;YACT,MAAM,IAAI,KAAK,CAAC,mBAAmB,KAAK,aAAa,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;SAC5G;QACD,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,OAAO,IAAI,CAAC;IACd,CAAC;CAEF;AAED,MAAM,OAAO,YAAY;IACd,eAAe,CAAkB;IACjC,kBAAkB,CAAqB;IACvC,iBAAiB,CAAoB;IACrC,OAAO,CAAqB;IAC5B,iBAAiB,CAAoB;CAC/C;AAMD;;GAEG;AACH,MAAM,OAAO,iBAAkB,SAAQ,UAAU;IAQjC;IACA;IACA;IARd;;OAEG;IACO,sBAAsB,CAA0B;IAE1D,YACc,IAAuB,EACvB,OAAgE,EAChE,QAAsB;QAElC,KAAK,CAAC,OAAO,CAAC,CAAC;QAJH,SAAI,GAAJ,IAAI,CAAmB;QACvB,YAAO,GAAP,OAAO,CAAyD;QAChE,aAAQ,GAAR,QAAQ,CAAc;QAGlC,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;SAC/B;QACD,IAAI,IAAI,CAAC,SAAS,EAAE;YAClB,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;SACvC;QACD,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;IAC9D,CAAC;IAED,gFAAgF;IAChF,8FAA8F;IACvF,WAAW,CAAC,EAAC,sBAAsB,EAAsD;QAC9F,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,CAAC;QACpD,IAAI,CAAC,UAAU,EAAE,CAAC;QAClB,IAAI,CAAC,4BAA4B,CAAC,GAAG,EAAE;YACrC,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;YACjC,IAAI,CAAC,cAAc,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;QAC9D,CAAC,CAAC,CAAC;IACL,CAAC;IAEM,IAAI,CAAC,CAAS,EAAE,CAAS,EAAE,OAAiC;QACjE,MAAM,EAAE,GAAG,GAAG,EAAE;YACd,IAAI,CAAC,qBAAqB,EAAE,CAAC;YAC7B,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,EAAE,CAAC,CAAC;QACnC,CAAC,CAAC;QACF,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC9B,KAAK,CAAC,IAAI,CAAC,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;IAC5B,CAAC;IAES,aAAa,CAAC,QAAkB;QACxC,OAAO,EAAE,CAAC;IACZ,CAAC;IAES,sBAAsB,CAAC,yBAAyC,QAAQ,CAAC,aAAa;QAC9F,IAAI,CAAC,IAAI,CAAC,sBAAsB,IAAI,sBAAsB,YAAY,WAAW,EAAE;YACjF,IAAI,CAAC,sBAAsB,GAAG,sBAAsB,CAAC;YACrD,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAES,qBAAqB;QAC7B,IAAI,IAAI,CAAC,sBAAsB,EAAE;YAC/B,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,EAAC,aAAa,EAAE,IAAI,EAAC,CAAC,CAAC;YACzD,IAAI,CAAC,sBAAsB,GAAG,SAAS,CAAC;YACxC,OAAO,IAAI,CAAC;SACb;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IAES,4BAA4B,CAAC,IAAgB;QACrD,IAAI,cAAc,GAA4B,SAAS,CAAC;QACxD,MAAM,EAAC,aAAa,EAAC,GAAG,QAAQ,CAAC;QACjC,IAAI,IAAI,CAAC,sBAAsB,IAAI,aAAa,YAAY,WAAW,IAAI,IAAI,CAAC,sBAAsB,KAAK,aAAa,EAAE;YACxH,cAAc,GAAG,aAAa,CAAC;YAC/B,IAAI,CAAC,sBAAsB,CAAC,KAAK,CAAC,EAAC,aAAa,EAAE,IAAI,EAAC,CAAC,CAAC;SAC1D;QACD,IAAI;YACF,IAAI,EAAE,CAAC;SACR;gBAAS;YACR,IAAI,cAAc,EAAE;gBAClB,cAAc,CAAC,KAAK,CAAC,EAAC,aAAa,EAAE,IAAI,EAAC,CAAC,CAAC;aAC7C;SACF;IACH,CAAC;IAEO,cAAc,CAAC,MAAkB,EAAE,IAAuB,EAAE,QAA6B;QAC/F,MAAM,KAAK,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;QACrD,KAAK,MAAM,IAAI,IAAI,KAAK,EAAE;YACxB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;SACtB;IACH,CAAC;IAEO,aAAa,CAAC,KAAgC,EAAE,IAAuB,EAAE,QAA6B;QAC5G,KAAK,MAAM,IAAI,IAAI,IAAI,CAAC,QAAQ,EAAE;YAChC,IAAI,IAAI,YAAY,iBAAiB,EAAE;gBACrC,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE,EAAE,4BAA4B;oBACtD,IAAI,IAAI,CAAC,SAAS,EAAE,EAAE,eAAe;wBACnC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;wBACrF,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,MAAM,EAAE;4BACzB,SAAS;yBACV;wBACD,KAAK,CAAC,IAAI,CAAC;4BACT,IAAI,EAAE,SAAS;4BACf,OAAO;yBACR,CAAC,CAAC;qBACJ;yBAAM,EAAE,aAAa;wBACpB,MAAM,OAAO,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;wBACvD,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;4BACnB,SAAS;yBACV;wBACD,IAAI,KAAK,CAAC,MAAM,EAAE,EAAE,+CAA+C;4BACjE,KAAK,CAAC,IAAI,CAAC;gCACT,IAAI,EAAE,WAAW;6BAClB,CAAC,CAAC;yBACJ;wBACD,KAAK,CAAC,IAAI,CAAC,GAAG,OAAO,CAAC,CAAC,CAAC,kBAAkB;qBAC3C;iBACF;aACF;iBAAM,IAAI,IAAI,YAAY,cAAc,EAAE;gBACzC,MAAM,EAAC,OAAO,EAAE,iBAAiB,EAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACnD,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC;gBACtE,MAAM,EAAC,IAAI,EAAC,GAAG,IAAI,CAAC,MAAM,CAAC;gBAC3B,IAAI,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,IAAI,IAAI,iBAAiB,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE;oBAC5F,SAAS;iBACV;gBACD,KAAK,CAAC,IAAI,CAAC;oBACT,OAAO,EAAE,IAAI,CAAC,MAAM,CAAC,SAAS;oBAC9B,IAAI,EAAE,SAAS;iBAChB,CAAC,CAAC;aACJ;iBAAM;gBACL,KAAK,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC;aACzC;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;CAEF;AAGD,IAAa,0BAA0B,GAAvC,MAAa,0BAA0B;IAOkB;IAJpC,KAAK,CAAmB;IAG3C,YACuD,OAA+B;QAA/B,YAAO,GAAP,OAAO,CAAwB;IAEtF,CAAC;IAED,IAAI,OAAO;QACT,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,YAAY,aAAa,CAA8B,CAAC;IACxG,CAAC;IAED,OAAO,CAAC,GAAwB;QAC9B,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;IAC7B,CAAC;IAES,UAAU,CAAC,KAAuB;QAC1C,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,EAAE,CAAC;QAC/B,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;QACrC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,EAAE,CAAC;QAC1C,KAAK,CAAC,SAAS,CAAC,IAAI,EAAE,EAAC,IAAI,EAAE,KAAK,EAAC,CAAC,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;IACrD,CAAC;IAES,UAAU;QAClB,MAAM,IAAI,GAAG,IAAI,MAAM,EAAE,CAAC;QAC1B,IAAI,CAAC,EAAE,GAAG,WAAW,CAAC;QACtB,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC,CAAC;QAC3B,OAAO,IAAI,CAAC;IACd,CAAC;CACF,CAAA;AA9BC;IADC,MAAM,CAAC,gBAAgB,CAAC;yDACkB;AAHhC,0BAA0B;IADtC,UAAU,EAAE;IAQN,WAAA,MAAM,CAAC,sBAAsB,CAAC,CAAA;GAPxB,0BAA0B,CAiCtC;SAjCY,0BAA0B;AAmCvC;;GAEG;AACH,MAAM,OAAO,mBAAoB,SAAQ,uBAAuB;IAMxC;IAJtB,8DAA8D;IACpD,OAAO,GAAG,IAAI,GAAG,EAAmC,CAAC;IACrD,SAAS,GAAG,IAAI,oBAAoB,EAAE,CAAC;IAEjD,YAAsB,QAAsB;QAC1C,KAAK,EAAE,CAAC;QADY,aAAQ,GAAR,QAAQ,CAAc;IAE5C,CAAC;IAED,8DAA8D;IAC9D,kBAAkB,CAAC,IAAoB,EAAE,IAAW;QAClD,MAAM,EAAC,SAAS,EAAC,GAAG,IAAI,CAAC,MAAM,CAAC;QAChC,MAAM,EAAC,eAAe,EAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QACxC,MAAM,OAAO,GAAG,eAAe,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;QACtD,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO;SACR;QACD,MAAM,EAAC,EAAE,EAAC,GAAG,OAAO,CAAC;QACrB,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,CAAC,EAAE;YACxB,OAAO;SACR;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,EAAE,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;IACrC,CAAC;IAED,QAAQ;QACN,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,CAAC;QACzB,KAAK,MAAM,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE,EAAE;YAChD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;SACvD;QACD,OAAO,IAAI,CAAC;IACd,CAAC;IAED,8DAA8D;IACpD,eAAe,CAAC,IAAoB,EAAE,IAAW;QACzD,MAAM,EAAC,eAAe,EAAE,kBAAkB,EAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;QAC5D,MAAM,OAAO,GAAG,eAAe,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;QAClE,IAAI,CAAC,OAAO,EAAE;YACZ,OAAO,UAAU,CAAC,IAAI,CAAC;SACxB;QACD,MAAM,EAAC,EAAE,EAAC,GAAG,OAAO,CAAC;QACrB,IAAI,IAAI,CAAC,UAAU,CAAC,EAAE,CAAC,EAAE;YACvB,kFAAkF;YAClF,OAAO,UAAU,CAAC,IAAI,CAAC;SACxB;QAED,uFAAuF;QACvF,MAAM,OAAO,GAAG,eAAe,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;QACvD,MAAM,OAAO,GAAG,eAAe,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;QACvD,MAAM,OAAO,GAAG,eAAe,CAAC,SAAS,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;QACvD,MAAM,iBAAiB,GAAG,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE;YAC5C,OAAO,EAAE,GAAG,EAAE,CAAC,eAAe,CAAC,cAAc,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC;YAC1D,KAAK,EAAE,IAAI,CAAC,KAAK;YACjB,IAAI,EAAE,IAAI,CAAC,IAAI;YACf,SAAS,EAAE,GAAG,EAAE,CAAC,OAAO;YACxB,SAAS,EAAE,GAAG,EAAE,CAAC,OAAO;YACxB,SAAS,EAAE,GAAG,EAAE,CAAC,OAAO;SACzB,CAAC,CAAC;QAEH,MAAM,QAAQ,GAAG,kBAAkB,CAAC,wBAAwB,CAAC,EAAE,CAAC,CAAC;QACjE,sCAAsC;QACtC,IAAI,QAAQ,CAAC,MAAM,EAAE;YACnB,MAAM,OAAO,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC;YAC5B,MAAM,IAAI,GAAG,kBAAkB,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC;YACxD,IAAI,CAAC,aAAa,CAAC;gBACjB,OAAO,EAAE,EAAE;gBACX,IAAI;gBACJ,QAAQ,EAAE,WAAW,CAAC,4CAA4C;aACnE,CAAC,CAAC;SACJ;QACD,OAAO,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,iBAAiB,CAAC,OAAO,EAAE,CAAC,CAAC;IAC9D,CAAC;CAEF","file":"../../../src/browser/menu/browser-menu-plugin.js","sourcesContent":["/********************************************************************************\n * Copyright (C) 2017 TypeFox and others.\n *\n * This program and the accompanying materials are made available under the\n * terms of the Eclipse Public License v. 2.0 which is available at\n * http://www.eclipse.org/legal/epl-2.0.\n *\n * This Source Code may also be made available under the following Secondary\n * Licenses when the conditions for such availability set forth in the Eclipse\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\n * with the GNU Classpath Exception which is available at\n * https://www.gnu.org/software/classpath/license.html.\n *\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\n ********************************************************************************/\n\nimport {inject, injectable} from 'inversify';\nimport {Menu as MenuWidget, MenuBar, Widget} from '@lumino/widgets';\nimport {CommandRegistry as PhosphorCommandRegistry} from '@lumino/commands';\nimport {\n  ActionMenuNode,\n  CommandRegistry,\n  CompositeMenuNode,\n  Disposable,\n  DisposableCollection,\n  MAIN_MENU_BAR,\n  MenuModelRegistry,\n  MenuNode,\n  MenuPath\n} from '../../common';\nimport {KeybindingRegistry} from '../keybinding';\nimport {FrontendApplication, FrontendApplicationContribution} from '../frontend-application';\nimport {ContextKeyService} from '../context-key-service';\nimport {ContextMenuContext} from './context-menu-context';\nimport {waitForRevealed} from '../widgets';\nimport {ApplicationShell} from '../shell';\nimport {CorePreferences} from '../core-preferences';\n\nexport abstract class MenuBarWidget extends MenuBar {\n  abstract activateMenu(label: string, ...labels: string[]): Promise<MenuWidget>;\n\n  abstract triggerMenuItem(label: string, ...labels: string[]): Promise<MenuWidget.IItem>;\n}\n\n@injectable()\nexport class BrowserMainMenuFactory implements MenuWidgetFactory {\n\n  @inject(ContextKeyService)\n  protected readonly contextKeyService: ContextKeyService;\n\n  @inject(CorePreferences)\n  protected readonly corePreferences: CorePreferences;\n\n  @inject(ContextMenuContext)\n  protected readonly context: ContextMenuContext;\n\n  @inject(CommandRegistry)\n  protected readonly commandRegistry: CommandRegistry;\n\n  @inject(KeybindingRegistry)\n  protected readonly keybindingRegistry: KeybindingRegistry;\n\n  @inject(MenuModelRegistry)\n  protected readonly menuProvider: MenuModelRegistry;\n\n  protected get services(): MenuServices {\n    return {\n      context: this.context,\n      contextKeyService: this.contextKeyService,\n      commandRegistry: this.commandRegistry,\n      keybindingRegistry: this.keybindingRegistry,\n      menuWidgetFactory: this\n    };\n  }\n\n  createMenuBar(): MenuBarWidget {\n    const menuBar = new DynamicMenuBarWidget();\n    menuBar.id = 'tart:menubar';\n    this.showMenuBar(menuBar, 'visible');\n\n    this.corePreferences.ready.then(() => {\n      this.showMenuBar(menuBar, this.corePreferences.get('window.menuBarVisibility', 'classic'));\n    });\n    const preferenceListener = this.corePreferences.onPreferenceChanged(preference => {\n      if (preference.preferenceName === 'window.menuBarVisibility') {\n        this.showMenuBar(menuBar, preference.newValue);\n      }\n    });\n    const keybindingListener = this.keybindingRegistry.onKeybindingsChanged(() => {\n      const preference = this.corePreferences['window.menuBarVisibility'];\n      this.showMenuBar(menuBar, preference);\n    });\n    menuBar.disposed.connect(() => {\n      preferenceListener.dispose();\n      keybindingListener.dispose();\n    });\n    return menuBar;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  createContextMenu(path: MenuPath, args?: any[]): MenuWidget {\n    const menuModel = this.menuProvider.getMenu(path);\n    const menuCommandRegistry = this.createMenuCommandRegistry(menuModel, args).snapshot();\n    const contextMenu = this.createMenuWidget(menuModel, {commands: menuCommandRegistry});\n    return contextMenu;\n  }\n\n  createMenuWidget(menu: CompositeMenuNode, options: MenuWidget.IOptions & { commands: MenuCommandRegistry }): DynamicMenuWidget {\n    return new DynamicMenuWidget(menu, options, this.services);\n  }\n\n  protected showMenuBar(menuBar: DynamicMenuBarWidget, preference: string | undefined): void {\n    if (preference && ['classic', 'visible'].includes(preference)) {\n      menuBar.clearMenus();\n      this.fillMenuBar(menuBar);\n    } else {\n      menuBar.clearMenus();\n    }\n  }\n\n  protected fillMenuBar(menuBar: MenuBarWidget): void {\n    const menuModel = this.menuProvider.getMenu(MAIN_MENU_BAR);\n    const menuCommandRegistry = this.createMenuCommandRegistry(menuModel);\n    for (const menu of menuModel.children) {\n      if (menu instanceof CompositeMenuNode) {\n        const menuWidget = this.createMenuWidget(menu, {commands: menuCommandRegistry});\n        menuBar.addMenu(menuWidget);\n      }\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected createMenuCommandRegistry(menu: CompositeMenuNode, args: any[] = []): MenuCommandRegistry {\n    const menuCommandRegistry = new MenuCommandRegistry(this.services);\n    this.registerMenu(menuCommandRegistry, menu, args);\n    return menuCommandRegistry;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected registerMenu(menuCommandRegistry: MenuCommandRegistry, menu: CompositeMenuNode, args: any[]): void {\n    for (const child of menu.children) {\n      if (child instanceof ActionMenuNode) {\n        menuCommandRegistry.registerActionMenu(child, args);\n        if (child.altNode) {\n          menuCommandRegistry.registerActionMenu(child.altNode, args);\n        }\n      } else if (child instanceof CompositeMenuNode) {\n        this.registerMenu(menuCommandRegistry, child, args);\n      } else {\n        this.handleDefault(menuCommandRegistry, child, args);\n      }\n    }\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected handleDefault(menuCommandRegistry: MenuCommandRegistry, menuNode: MenuNode, args: any[]): void {\n    // NOOP\n  }\n\n}\n\nexport class DynamicMenuBarWidget extends MenuBarWidget {\n\n  /**\n   * We want to restore the focus after the menu closes.\n   */\n  protected previousFocusedElement: HTMLElement | undefined;\n\n  constructor() {\n    super();\n    // HACK we need to hook in on private method _openChildMenu. Don't do this at home!\n    DynamicMenuBarWidget.prototype['_openChildMenu'] = () => {\n      if (this.activeMenu instanceof DynamicMenuWidget) {\n        // `childMenu` is `null` if we open the menu. For example, menu is not shown and you click on `Edit`.\n        // However, the `childMenu` is set, when `Edit` was already open and you move the mouse over `Select`.\n        // We want to save the focus object for the former case only.\n        if (!this.childMenu) {\n          const {activeElement} = document;\n          if (activeElement instanceof HTMLElement) {\n            this.previousFocusedElement = activeElement;\n          }\n        }\n        this.activeMenu.aboutToShow({previousFocusedElement: this.previousFocusedElement});\n      }\n      super['_openChildMenu']();\n    };\n  }\n\n  async activateMenu(label: string, ...labels: string[]): Promise<MenuWidget> {\n    const menu = this.menus.find(m => m.title.label === label);\n    if (!menu) {\n      throw new Error(`could not find '${label}' menu`);\n    }\n    this.activeMenu = menu;\n    this.openActiveMenu();\n    await waitForRevealed(menu);\n\n    const menuPath = [label];\n\n    let current = menu;\n    for (const itemLabel of labels) {\n      const item = current.items.find(i => i.label === itemLabel);\n      if (!item || !item.submenu) {\n        throw new Error(`could not find '${label}' submenu in ${menuPath.map(l => \"'\" + l + \"'\").join(' -> ')} menu`);\n      }\n      current.activeItem = item;\n      current.triggerActiveItem();\n      current = item.submenu;\n      await waitForRevealed(current);\n    }\n    return current;\n  }\n\n  async triggerMenuItem(label: string, ...labels: string[]): Promise<MenuWidget.IItem> {\n    if (!labels.length) {\n      throw new Error('menu item label is not specified');\n    }\n    const menuPath = [label, ...labels.slice(0, labels.length - 1)];\n    const menu = await this.activateMenu(menuPath[0], ...menuPath.slice(1));\n    const item = menu.items.find(i => i.label === labels[labels.length - 1]);\n    if (!item) {\n      throw new Error(`could not find '${label}' item in ${menuPath.map(l => \"'\" + l + \"'\").join(' -> ')} menu`);\n    }\n    menu.activeItem = item;\n    menu.triggerActiveItem();\n    return item;\n  }\n\n}\n\nexport class MenuServices {\n  readonly commandRegistry: CommandRegistry;\n  readonly keybindingRegistry: KeybindingRegistry;\n  readonly contextKeyService: ContextKeyService;\n  readonly context: ContextMenuContext;\n  readonly menuWidgetFactory: MenuWidgetFactory;\n}\n\nexport interface MenuWidgetFactory {\n  createMenuWidget(menu: CompositeMenuNode, options: MenuWidget.IOptions & { commands: MenuCommandRegistry }): MenuWidget;\n}\n\n/**\n * A menu widget that would recompute its items on update.\n */\nexport class DynamicMenuWidget extends MenuWidget {\n\n  /**\n   * We want to restore the focus after the menu closes.\n   */\n  protected previousFocusedElement: HTMLElement | undefined;\n\n  constructor(\n      protected menu: CompositeMenuNode,\n      protected options: MenuWidget.IOptions & { commands: MenuCommandRegistry },\n      protected services: MenuServices\n  ) {\n    super(options);\n    if (menu.label) {\n      this.title.label = menu.label;\n    }\n    if (menu.iconClass) {\n      this.title.iconClass = menu.iconClass;\n    }\n    this.updateSubMenus(this, this.menu, this.options.commands);\n  }\n\n  // Hint: this is not called from the context menu use-case, but is not required.\n  // For the context menu the command registry state is calculated by the factory before `open`.\n  public aboutToShow({previousFocusedElement}: { previousFocusedElement: HTMLElement | undefined }): void {\n    this.preserveFocusedElement(previousFocusedElement);\n    this.clearItems();\n    this.runWithPreservedFocusContext(() => {\n      this.options.commands.snapshot();\n      this.updateSubMenus(this, this.menu, this.options.commands);\n    });\n  }\n\n  public open(x: number, y: number, options?: MenuWidget.IOpenOptions): void {\n    const cb = () => {\n      this.restoreFocusedElement();\n      this.aboutToClose.disconnect(cb);\n    };\n    this.aboutToClose.connect(cb);\n    super.open(x, y, options);\n  }\n\n  protected handleDefault(menuNode: MenuNode): MenuWidget.IItemOptions[] {\n    return [];\n  }\n\n  protected preserveFocusedElement(previousFocusedElement: Element | null = document.activeElement): boolean {\n    if (!this.previousFocusedElement && previousFocusedElement instanceof HTMLElement) {\n      this.previousFocusedElement = previousFocusedElement;\n      return true;\n    }\n    return false;\n  }\n\n  protected restoreFocusedElement(): boolean {\n    if (this.previousFocusedElement) {\n      this.previousFocusedElement.focus({preventScroll: true});\n      this.previousFocusedElement = undefined;\n      return true;\n    }\n    return false;\n  }\n\n  protected runWithPreservedFocusContext(what: () => void): void {\n    let focusToRestore: HTMLElement | undefined = undefined;\n    const {activeElement} = document;\n    if (this.previousFocusedElement && activeElement instanceof HTMLElement && this.previousFocusedElement !== activeElement) {\n      focusToRestore = activeElement;\n      this.previousFocusedElement.focus({preventScroll: true});\n    }\n    try {\n      what();\n    } finally {\n      if (focusToRestore) {\n        focusToRestore.focus({preventScroll: true});\n      }\n    }\n  }\n\n  private updateSubMenus(parent: MenuWidget, menu: CompositeMenuNode, commands: MenuCommandRegistry): void {\n    const items = this.buildSubMenus([], menu, commands);\n    for (const item of items) {\n      parent.addItem(item);\n    }\n  }\n\n  private buildSubMenus(items: MenuWidget.IItemOptions[], menu: CompositeMenuNode, commands: MenuCommandRegistry): MenuWidget.IItemOptions[] {\n    for (const item of menu.children) {\n      if (item instanceof CompositeMenuNode) {\n        if (item.children.length) { // do not render empty nodes\n          if (item.isSubmenu) { // submenu node\n            const submenu = this.services.menuWidgetFactory.createMenuWidget(item, this.options);\n            if (!submenu.items.length) {\n              continue;\n            }\n            items.push({\n              type: 'submenu',\n              submenu,\n            });\n          } else { // group node\n            const submenu = this.buildSubMenus([], item, commands);\n            if (!submenu.length) {\n              continue;\n            }\n            if (items.length) { // do not put a separator above the first group\n              items.push({\n                type: 'separator'\n              });\n            }\n            items.push(...submenu); // render children\n          }\n        }\n      } else if (item instanceof ActionMenuNode) {\n        const {context, contextKeyService} = this.services;\n        const node = item.altNode && context.altPressed ? item.altNode : item;\n        const {when} = node.action;\n        if (!(commands.isVisible(node.action.commandId) && (!when || contextKeyService.match(when)))) {\n          continue;\n        }\n        items.push({\n          command: node.action.commandId,\n          type: 'command'\n        });\n      } else {\n        items.push(...this.handleDefault(item));\n      }\n    }\n    return items;\n  }\n\n}\n\n@injectable()\nexport class BrowserMenuBarContribution implements FrontendApplicationContribution {\n\n  @inject(ApplicationShell)\n  protected readonly shell: ApplicationShell;\n\n\n  constructor(\n      @inject(BrowserMainMenuFactory) protected readonly factory: BrowserMainMenuFactory\n  ) {\n  }\n\n  get menuBar(): MenuBarWidget | undefined {\n    return this.shell.topPanel.widgets.find(w => w instanceof MenuBarWidget) as MenuBarWidget | undefined;\n  }\n\n  onStart(app: FrontendApplication): void {\n    this.appendMenu(app.shell);\n  }\n\n  protected appendMenu(shell: ApplicationShell): void {\n    const logo = this.createLogo();\n    shell.addWidget(logo, {area: 'top'});\n    const menu = this.factory.createMenuBar();\n    shell.addWidget(menu, {area: 'top'});\n    menu.setHidden(['compact', 'hidden'].includes(''));\n  }\n\n  protected createLogo(): Widget {\n    const logo = new Widget();\n    logo.id = 'tart:icon';\n    logo.addClass('tart-icon');\n    return logo;\n  }\n}\n\n/**\n * Stores Tart-specific action menu nodes instead of PhosphorJS commands with their handlers.\n */\nexport class MenuCommandRegistry extends PhosphorCommandRegistry {\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected actions = new Map<string, [ActionMenuNode, any[]]>();\n  protected toDispose = new DisposableCollection();\n\n  constructor(protected services: MenuServices) {\n    super();\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  registerActionMenu(menu: ActionMenuNode, args: any[]): void {\n    const {commandId} = menu.action;\n    const {commandRegistry} = this.services;\n    const command = commandRegistry.getCommand(commandId);\n    if (!command) {\n      return;\n    }\n    const {id} = command;\n    if (this.actions.has(id)) {\n      return;\n    }\n    this.actions.set(id, [menu, args]);\n  }\n\n  snapshot(): this {\n    this.toDispose.dispose();\n    for (const [menu, args] of this.actions.values()) {\n      this.toDispose.push(this.registerCommand(menu, args));\n    }\n    return this;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  protected registerCommand(menu: ActionMenuNode, args: any[]): Disposable {\n    const {commandRegistry, keybindingRegistry} = this.services;\n    const command = commandRegistry.getCommand(menu.action.commandId);\n    if (!command) {\n      return Disposable.NULL;\n    }\n    const {id} = command;\n    if (this.hasCommand(id)) {\n      // several menu items can be registered for the same command in different contexts\n      return Disposable.NULL;\n    }\n\n    // We freeze the `isEnabled`, `isVisible`, and `isToggled` states so they won't change.\n    const enabled = commandRegistry.isEnabled(id, ...args);\n    const visible = commandRegistry.isVisible(id, ...args);\n    const toggled = commandRegistry.isToggled(id, ...args);\n    const unregisterCommand = this.addCommand(id, {\n      execute: () => commandRegistry.executeCommand(id, ...args),\n      label: menu.label,\n      icon: menu.icon,\n      isEnabled: () => enabled,\n      isVisible: () => visible,\n      isToggled: () => toggled\n    });\n\n    const bindings = keybindingRegistry.getKeybindingsForCommand(id);\n    // Only consider the first keybinding.\n    if (bindings.length) {\n      const binding = bindings[0];\n      const keys = keybindingRegistry.acceleratorFor(binding);\n      this.addKeyBinding({\n        command: id,\n        keys,\n        selector: '.p-Widget' // We have the PhosphorJS dependency anyway.\n      });\n    }\n    return Disposable.create(() => unregisterCommand.dispose());\n  }\n\n}\n"]}
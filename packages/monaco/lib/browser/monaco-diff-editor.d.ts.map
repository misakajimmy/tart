{"version":3,"sources":["browser/monaco-diff-editor.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;kFAckF;;AAElF,OAAO,GAAG,MAAM,2BAA2B,CAAC;AAC5C,OAAO,EAAC,UAAU,EAAC,MAAM,uBAAuB,CAAC;AACjD,OAAO,EAAC,qBAAqB,EAAE,aAAa,EAAE,SAAS,EAAC,MAAM,cAAc,CAAC;AAC7E,OAAO,EAAC,iBAAiB,EAAC,MAAM,uBAAuB,CAAC;AACxD,OAAO,EAAC,YAAY,EAAE,oBAAoB,EAAC,MAAM,iBAAiB,CAAC;AACnE,OAAO,EAAC,0BAA0B,EAAC,MAAM,iCAAiC,CAAC;AAE3E,OAAO,qBAAqB,GAAG,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC;AACnE,OAAO,8BAA8B,GAAG,MAAM,CAAC,MAAM,CAAC,8BAA8B,CAAC;AACrF,OAAO,qBAAqB,GAAG,MAAM,CAAC,MAAM,CAAC,qBAAqB,CAAC;AACnE,OAAO,uBAAuB,GAAG,MAAM,CAAC,MAAM,CAAC,uBAAuB,CAAC;AAEvE,yBAAiB,gBAAgB,CAAC;IAC9B,UAAiB,QAAS,SAAQ,YAAY,CAAC,cAAc,EAAE,8BAA8B,EAAE,qBAAqB;KACnH;CACJ;AAED,qBAAa,gBAAiB,SAAQ,YAAY;IAE1C,QAAQ,CAAC,GAAG,EAAE,GAAG;IACjB,QAAQ,CAAC,IAAI,EAAE,WAAW;IAC1B,QAAQ,CAAC,aAAa,EAAE,iBAAiB;IACzC,QAAQ,CAAC,aAAa,EAAE,iBAAiB;IAEzC,SAAS,CAAC,QAAQ,CAAC,oBAAoB,EAAE,0BAA0B;gBAL1D,GAAG,EAAE,GAAG,EACR,IAAI,EAAE,WAAW,EACjB,aAAa,EAAE,iBAAiB,EAChC,aAAa,EAAE,iBAAiB,EACzC,QAAQ,EAAE,oBAAoB,EACX,oBAAoB,EAAE,0BAA0B,EACnE,OAAO,CAAC,EAAE,gBAAgB,CAAC,QAAQ,EACnC,QAAQ,CAAC,EAAE,uBAAuB;IAUtC,SAAS,CAAC,WAAW,EAAE,qBAAqB,CAAC;IAE7C,IAAI,UAAU,IAAI,qBAAqB,CAEtC;IAED,SAAS,CAAC,cAAc,EAAE,aAAa,CAAC;IAExC,IAAI,aAAa,IAAI,aAAa,CAEjC;IAED,iBAAiB,CAAC,EAAE,EAAE,MAAM,GAAG,OAAO;IAKtC,gBAAgB,CAAC,MAAM,EAAE,qBAAqB,GAAG,MAAM,EAAE;IAKzD,cAAc,IAAI,GAAG;IAIrB,eAAe,CAAC,WAAW,EAAE,GAAG,GAAG,GAAG;IAKtC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,EAAE,8BAA8B,EAAE,QAAQ,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,uBAAuB,GAAG,UAAU;IASxH,SAAS,CAAC,MAAM,CAAC,SAAS,EAAE,SAAS,GAAG,IAAI,GAAG,IAAI;CAOtD","file":"../../src/browser/monaco-diff-editor.d.ts","sourcesContent":["/********************************************************************************\r\n * Copyright (C) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport URI from '@tart/core/lib/common/uri';\r\nimport {Disposable} from '@tart/core/lib/common';\r\nimport {DeltaDecorationParams, DiffNavigator, Dimension} from '@tart/editor';\r\nimport {MonacoEditorModel} from './monaco-editor-model';\r\nimport {MonacoEditor, MonacoEditorServices} from './monaco-editor';\r\nimport {MonacoDiffNavigatorFactory} from './monaco-diff-navigator-factory';\r\nimport {DiffUris} from '@tart/core/lib/browser/diff-uris';\r\nimport IStandaloneDiffEditor = monaco.editor.IStandaloneDiffEditor;\r\nimport IDiffEditorConstructionOptions = monaco.editor.IDiffEditorConstructionOptions;\r\nimport IDiffNavigatorOptions = monaco.editor.IDiffNavigatorOptions;\r\nimport IEditorOverrideServices = monaco.editor.IEditorOverrideServices;\r\n\r\nexport namespace MonacoDiffEditor {\r\n    export interface IOptions extends MonacoEditor.ICommonOptions, IDiffEditorConstructionOptions, IDiffNavigatorOptions {\r\n    }\r\n}\r\n\r\nexport class MonacoDiffEditor extends MonacoEditor {\r\n    constructor(\r\n        readonly uri: URI,\r\n        readonly node: HTMLElement,\r\n        readonly originalModel: MonacoEditorModel,\r\n        readonly modifiedModel: MonacoEditorModel,\r\n        services: MonacoEditorServices,\r\n        protected readonly diffNavigatorFactory: MonacoDiffNavigatorFactory,\r\n        options?: MonacoDiffEditor.IOptions,\r\n        override?: IEditorOverrideServices,\r\n    ) {\r\n        super(uri, modifiedModel, node, services, options, override);\r\n        this.documents.add(originalModel);\r\n        const original = originalModel.textEditorModel;\r\n        const modified = modifiedModel.textEditorModel;\r\n        this._diffNavigator = diffNavigatorFactory.createdDiffNavigator(this._diffEditor, options);\r\n        this._diffEditor.setModel({original, modified});\r\n    }\r\n\r\n    protected _diffEditor: IStandaloneDiffEditor;\r\n\r\n    get diffEditor(): IStandaloneDiffEditor {\r\n        return this._diffEditor;\r\n    }\r\n\r\n    protected _diffNavigator: DiffNavigator;\r\n\r\n    get diffNavigator(): DiffNavigator {\r\n        return this._diffNavigator;\r\n    }\r\n\r\n    isActionSupported(id: string): boolean {\r\n        const action = this._diffEditor.getSupportedActions().find(a => a.id === id);\r\n        return !!action && action.isSupported() && super.isActionSupported(id);\r\n    }\r\n\r\n    deltaDecorations(params: DeltaDecorationParams): string[] {\r\n        console.warn('`deltaDecorations` should be called on either the original, or the modified editor.');\r\n        return [];\r\n    }\r\n\r\n    getResourceUri(): URI {\r\n        return new URI(this.originalModel.uri);\r\n    }\r\n\r\n    createMoveToUri(resourceUri: URI): URI {\r\n        const [left, right] = DiffUris.decode(this.uri);\r\n        return DiffUris.encode(left.withPath(resourceUri.path), right.withPath(resourceUri.path));\r\n    }\r\n\r\n    protected create(options?: IDiffEditorConstructionOptions, override?: monaco.editor.IEditorOverrideServices): Disposable {\r\n        this._diffEditor = monaco.editor.createDiffEditor(this.node, <IDiffEditorConstructionOptions>{\r\n            ...options,\r\n            fixedOverflowWidgets: true\r\n        }, override);\r\n        this.editor = this._diffEditor.getModifiedEditor();\r\n        return this._diffEditor;\r\n    }\r\n\r\n    protected resize(dimension: Dimension | null): void {\r\n        if (this.node) {\r\n            const layoutSize = this.computeLayoutSize(this.node, dimension);\r\n            this._diffEditor.layout(layoutSize);\r\n        }\r\n    }\r\n\r\n}\r\n"]}
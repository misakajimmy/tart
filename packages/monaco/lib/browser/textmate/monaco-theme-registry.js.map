{"version":3,"sources":["browser/textmate/monaco-theme-registry.ts"],"names":[],"mappings":"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","file":"../../../src/browser/textmate/monaco-theme-registry.js","sourcesContent":["import {injectable} from 'inversify';\r\nimport {IRawTheme, IRawThemeSetting, Registry} from 'vscode-textmate';\r\nimport darkTheme from '../../assets/data/monaco-themes/vscode/dark_wm.json';\r\nimport darkDefaults from '../../assets/data/monaco-themes/vscode/dark_defaults.json';\r\nimport darkVs from '../../assets/data/monaco-themes/vscode/dark_vs.json';\r\nimport darkPlus from '../../assets/data/monaco-themes/vscode/dark_plus.json';\r\n\r\nimport lightTheme from '../../assets/data/monaco-themes/vscode/light_wm.json';\r\nimport lightDefaults from '../../assets/data/monaco-themes/vscode/light_defaults.json';\r\nimport lightVs from '../../assets/data/monaco-themes/vscode/light_vs.json';\r\nimport lightPlus from '../../assets/data/monaco-themes/vscode/light_plus.json';\r\n\r\nimport hcTheme from '../../assets/data/monaco-themes/vscode/hc_wm.json';\r\nimport hcBlackDefault from '../../assets/data/monaco-themes/vscode/hc_black_defaults.json';\r\nimport hcBlack from '../../assets/data/monaco-themes/vscode/hc_black.json';\r\n\r\nexport interface ThemeMix extends IRawTheme, monaco.editor.IStandaloneThemeData {\r\n}\r\n\r\nexport interface MixStandaloneTheme extends monaco.services.IStandaloneTheme {\r\n    themeData: ThemeMix\r\n}\r\n\r\n@injectable()\r\nexport class MonacoThemeRegistry {\r\n\r\n    getThemeData(): ThemeMix;\r\n    getThemeData(name: string): ThemeMix | undefined;\r\n    getThemeData(name?: string): ThemeMix | undefined {\r\n        const theme = this.doGetTheme(name);\r\n        return theme && theme.themeData;\r\n    }\r\n\r\n    getTheme(): MixStandaloneTheme;\r\n    getTheme(name: string): MixStandaloneTheme | undefined;\r\n    getTheme(name?: string): MixStandaloneTheme | undefined {\r\n        return this.doGetTheme(name);\r\n    }\r\n\r\n    setTheme(name: string, data: ThemeMix): void {\r\n        // monaco auto refreshes a theme with new data\r\n        monaco.editor.defineTheme(name, data);\r\n    }\r\n\r\n    /**\r\n     * Register VS Code compatible themes\r\n     */\r\n    register(json: any, includes?: { [includePath: string]: any }, givenName?: string, monacoBase?: monaco.editor.BuiltinTheme): ThemeMix {\r\n        const name = givenName || json.name!;\r\n        const result: ThemeMix = {\r\n            name,\r\n            base: monacoBase || 'vs',\r\n            inherit: true,\r\n            colors: {},\r\n            rules: [],\r\n            settings: []\r\n        };\r\n        if (typeof json.include !== 'undefined') {\r\n            if (!includes || !includes[json.include]) {\r\n                console.error(`Couldn't resolve includes theme ${json.include}.`);\r\n            } else {\r\n                const parentTheme = this.register(includes[json.include], includes);\r\n                Object.assign(result.colors, parentTheme.colors);\r\n                result.rules.push(...parentTheme.rules);\r\n                result.settings.push(...parentTheme.settings);\r\n            }\r\n        }\r\n        const tokenColors: Array<IRawThemeSetting> = json.tokenColors;\r\n        if (Array.isArray(tokenColors)) {\r\n            for (const tokenColor of tokenColors) {\r\n                if (tokenColor.scope && tokenColor.settings) {\r\n                    result.settings.push({\r\n                        scope: tokenColor.scope,\r\n                        settings: {\r\n                            foreground: this.normalizeColor(tokenColor.settings.foreground),\r\n                            background: this.normalizeColor(tokenColor.settings.background),\r\n                            fontStyle: tokenColor.settings.fontStyle\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        if (json.colors) {\r\n            Object.assign(result.colors, json.colors);\r\n            result.encodedTokensColors = Object.keys(result.colors).map(key => result.colors[key]);\r\n        }\r\n        if (monacoBase && givenName) {\r\n            for (const setting of result.settings) {\r\n                this.transform(setting, rule => result.rules.push(rule));\r\n            }\r\n\r\n            // the default rule (scope empty) is always the first rule. Ignore all other default rules.\r\n            const defaultTheme = monaco.services.StaticServices.standaloneThemeService.get()._knownThemes.get(result.base)!;\r\n            const foreground = result.colors['editor.foreground'] || defaultTheme.getColor('editor.foreground');\r\n            const background = result.colors['editor.background'] || defaultTheme.getColor('editor.background');\r\n            result.settings.unshift({\r\n                settings: {\r\n                    foreground: this.normalizeColor(foreground),\r\n                    background: this.normalizeColor(background)\r\n                }\r\n            });\r\n\r\n            const reg = new Registry();\r\n            reg.setTheme(result);\r\n            result.encodedTokensColors = reg.getColorMap();\r\n            // index 0 has to be set to null as it is 'undefined' by default, but monaco code expects it to be null\r\n            // eslint-disable-next-line no-null/no-null\r\n            result.encodedTokensColors[0] = null!;\r\n            this.setTheme(givenName, result);\r\n        }\r\n        return result;\r\n    }\r\n\r\n    protected doGetTheme(name: string | undefined): MixStandaloneTheme | undefined {\r\n        const standaloneThemeService = monaco.services.StaticServices.standaloneThemeService.get();\r\n        const theme = !name ? standaloneThemeService.getColorTheme() : standaloneThemeService._knownThemes.get(name);\r\n        return theme as MixStandaloneTheme | undefined;\r\n    }\r\n\r\n    protected transform(tokenColor: any, acceptor: (rule: monaco.editor.ITokenThemeRule) => void): void {\r\n        if (typeof tokenColor.scope === 'undefined') {\r\n            tokenColor.scope = [''];\r\n        } else if (typeof tokenColor.scope === 'string') {\r\n            tokenColor.scope = tokenColor.scope.split(',').map((scope: string) => scope.trim());\r\n        }\r\n\r\n        for (const scope of tokenColor.scope) {\r\n            acceptor({\r\n                ...tokenColor.settings, token: scope\r\n            });\r\n        }\r\n    }\r\n\r\n    protected normalizeColor(color: string | monaco.color.Color | undefined): string | undefined {\r\n        if (!color) {\r\n            return undefined;\r\n        }\r\n        const normalized = String(color).replace(/^\\#/, '').slice(0, 6);\r\n        if (normalized.length < 6 || !(normalized).match(/^[0-9A-Fa-f]{6}$/)) {\r\n            // ignoring not normalized colors to avoid breaking token color indexes between monaco and vscode-textmate\r\n            console.error(`Color '${normalized}' is NOT normalized, it must have 6 positions.`);\r\n            return undefined;\r\n        }\r\n        return '#' + normalized;\r\n    }\r\n}\r\n\r\nexport namespace MonacoThemeRegistry {\r\n    export const SINGLETON = new MonacoThemeRegistry();\r\n\r\n    export const DARK_DEFAULT_THEME: string = SINGLETON.register(darkTheme, {\r\n        './dark_defaults.json': darkDefaults,\r\n        './dark_vs.json': darkVs,\r\n        './dark_plus.json': darkPlus\r\n    }, 'dark-wm', 'vs-dark').name!;\r\n    export const LIGHT_DEFAULT_THEME: string = SINGLETON.register(lightTheme, {\r\n        './light_defaults.json': lightDefaults,\r\n        './light_vs.json': lightVs,\r\n        './light_plus.json': lightPlus,\r\n    }, 'light-wm', 'vs').name!;\r\n    export const HC_DEFAULT_THEME: string = SINGLETON.register(hcTheme, {\r\n        './hc_black_defaults.json': hcBlackDefault,\r\n        './hc_black.json': hcBlack\r\n    }, 'hc-wm', 'hc-black').name!;\r\n}\r\n"]}
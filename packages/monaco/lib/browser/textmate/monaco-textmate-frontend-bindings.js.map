{"version":3,"sources":["browser/textmate/monaco-textmate-frontend-bindings.ts"],"names":[],"mappings":"AACA,OAAO,EAAC,qBAAqB,EAAE,cAAc,EAAC,MAAM,2BAA2B,CAAC;AAChF,OAAO,EAAC,+BAA+B,EAAC,MAAM,YAAY,CAAC;AAC3D,OAAO,EAAC,wBAAwB,EAAC,MAAM,uBAAuB,CAAC;AAC/D,OAAO,EAAC,qCAAqC,EAAC,MAAM,yBAAyB,CAAC;AAC9E,OAAO,EAAC,gBAAgB,EAAC,MAAM,qBAAqB,CAAC;AAErD,OAAO,EAAC,oBAAoB,EAAC,MAAM,gCAAgC,CAAC;AACpE,OAAO,IAAI,MAAM,0BAA0B,CAAC;AAC5C,OAAO,EAAC,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAC,MAAM,SAAS,CAAC;AAC1D,OAAO,EAAC,mBAAmB,EAAC,MAAM,yBAAyB,CAAC;AAE5D,MAAM,OAAO,UAAU;IACrB,iBAAiB,CAAC,OAAiB;QACjC,OAAO,IAAI,WAAW,CAAC,OAAO,CAAC,CAAC;IAClC,CAAC;IAED,gBAAgB,CAAC,OAAe;QAC9B,OAAO,IAAI,UAAU,CAAC,OAAO,CAAC,CAAC;IACjC,CAAC;CACF;AAED,eAAe,CAAC,IAAqB,EAAE,MAAyB,EAAE,OAA2B,EAAE,MAAyB,EAAE,EAAE;IAC1H,IAAI,CAAC,cAAc,CAAC,CAAC,cAAc,CAAC,iBAAiB,CAAC,CAAC,gBAAgB,EAAE,CAAC;IAC1E,IAAI,CAAC,qBAAqB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACxD,IAAI,CAAC,+BAA+B,CAAC,CAAC,SAAS,CAAC,qBAAqB,CAAC,CAAC;IACvE,wBAAwB,CAAC,IAAI,EAAE,qCAAqC,CAAC,CAAC;IACtE,IAAI,CAAC,gBAAgB,CAAC,CAAC,MAAM,EAAE,CAAC,gBAAgB,EAAE,CAAC;IACnD,IAAI,CAAC,mBAAmB,CAAC,CAAC,cAAc,CAAC,GAAG,EAAE,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,gBAAgB,EAAE,CAAC;AACnG,CAAC,CAAC;AAEF,MAAM,CAAC,KAAK,UAAU,iBAAiB,CAAC,GAAuB;IAC7D,OAAO,gBAAgB,EAAE,CAAC;AAC5B,CAAC;AAED,MAAM,CAAC,KAAK,UAAU,gBAAgB;IACpC,IAAI,CAAC,oBAAoB,EAAE;QACzB,MAAM,IAAI,KAAK,CAAC,oBAAoB,CAAC,CAAC;KACvC;IACD,MAAM,QAAQ,CAAC,IAAI,CAAC,CAAC;IACrB,OAAO,IAAI,UAAU,EAAE,CAAC;AAC1B,CAAC","file":"../../../src/browser/textmate/monaco-textmate-frontend-bindings.js","sourcesContent":["import {interfaces} from 'inversify';\r\nimport {MonacoTextmateService, OnigasmPromise} from './monaco-textmate-service';\r\nimport {FrontendApplicationContribution} from '@tart/core';\r\nimport {bindContributionProvider} from '@tart/core/lib/common';\r\nimport {LanguageGrammarDefinitionContribution} from './textmate-contribution';\r\nimport {TextmateRegistry} from './textmate-registry';\r\nimport {IOnigLib} from 'vscode-textmate';\r\nimport {isBasicWasmSupported} from '@tart/core/lib/browser/browser';\r\nimport wasm from 'onigasm/lib/onigasm.wasm';\r\nimport {loadWASM, OnigScanner, OnigString} from 'onigasm';\r\nimport {MonacoThemeRegistry} from './monaco-theme-registry';\r\n\r\nexport class OnigasmLib implements IOnigLib {\r\n  createOnigScanner(sources: string[]): OnigScanner {\r\n    return new OnigScanner(sources);\r\n  }\r\n\r\n  createOnigString(sources: string): OnigString {\r\n    return new OnigString(sources);\r\n  }\r\n}\r\n\r\nexport default (bind: interfaces.Bind, unbind: interfaces.Unbind, isBound: interfaces.IsBound, rebind: interfaces.Rebind) => {\r\n  bind(OnigasmPromise).toDynamicValue(dynamicOnigasmLib).inSingletonScope();\r\n  bind(MonacoTextmateService).toSelf().inSingletonScope();\r\n  bind(FrontendApplicationContribution).toService(MonacoTextmateService);\r\n  bindContributionProvider(bind, LanguageGrammarDefinitionContribution);\r\n  bind(TextmateRegistry).toSelf().inSingletonScope();\r\n  bind(MonacoThemeRegistry).toDynamicValue(() => MonacoThemeRegistry.SINGLETON).inSingletonScope();\r\n};\r\n\r\nexport async function dynamicOnigasmLib(ctx: interfaces.Context): Promise<IOnigLib> {\r\n  return createOnigasmLib();\r\n}\r\n\r\nexport async function createOnigasmLib(): Promise<IOnigLib> {\r\n  if (!isBasicWasmSupported) {\r\n    throw new Error('wasm not supported');\r\n  }\r\n  await loadWASM(wasm);\r\n  return new OnigasmLib();\r\n}\r\n"]}
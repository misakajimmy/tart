{"version":3,"sources":["browser/monaco-quick-access-registry.ts"],"names":[],"mappings":"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","file":"../../src/browser/monaco-quick-access-registry.js","sourcesContent":["import {inject, injectable} from 'inversify';\r\nimport {KeybindingRegistry, QuickAccessProviderDescriptor, QuickAccessRegistry} from '@tart/core';\r\nimport {CancellationToken, Disposable} from '@tart/core/lib/common';\r\nimport {QuickPickItem, QuickPickSeparator} from '@tart/core/lib/common/quick-pick-service';\r\nimport {MonacoQuickPickItem} from './monaco-quick-input-service';\r\n\r\nabstract class MonacoPickerAccessProvider extends monaco.quickInput.PickerQuickAccessProvider<QuickPickItem> {\r\n    constructor(prefix: string, options?: monaco.quickInput.IPickerQuickAccessProviderOptions<QuickPickItem>) {\r\n        super(prefix, options);\r\n    }\r\n\r\n    abstract getDescriptor(): QuickAccessProviderDescriptor;\r\n}\r\n\r\nclass WmQuickAccessDescriptor implements monaco.quickInput.IQuickAccessProviderDescriptor {\r\n    constructor(\r\n        public readonly wmDescriptor: QuickAccessProviderDescriptor,\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        readonly ctor: { new(...services: any /* TS BrandedService but no clue how to type this properly */[]): monaco.quickInput.IQuickAccessProvider },\r\n        readonly prefix: string,\r\n        readonly helpEntries: monaco.quickInput.IQuickAccessProviderHelp[],\r\n        readonly placeholder?: string) {\r\n    }\r\n}\r\n\r\n@injectable()\r\nexport class MonacoQuickAccessRegistry implements QuickAccessRegistry {\r\n  @inject(KeybindingRegistry)\r\n  protected readonly keybindingRegistry: KeybindingRegistry;\r\n\r\n  private get monacoRegistry(): monaco.quickInput.IQuickAccessRegistry {\r\n    return monaco.platform.Registry.as<monaco.quickInput.IQuickAccessRegistry>('workbench.contributions.quickaccess');\r\n  }\r\n\r\n  registerQuickAccessProvider(descriptor: QuickAccessProviderDescriptor): Disposable {\r\n    const toMonacoPick = (item: QuickPickItem): monaco.quickInput.Pick<monaco.quickInput.IAnythingQuickPickItem> => {\r\n      if (QuickPickSeparator.is(item)) {\r\n        return item;\r\n      } else {\r\n        return new MonacoQuickPickItem(item, this.keybindingRegistry);\r\n      }\r\n    };\r\n\r\n    const inner =\r\n        class extends MonacoPickerAccessProvider {\r\n          constructor() {\r\n            super(descriptor.prefix);\r\n          }\r\n\r\n          getDescriptor(): QuickAccessProviderDescriptor {\r\n            return descriptor;\r\n          }\r\n\r\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n          getPicks(filter: string, disposables: any, token: CancellationToken): monaco.quickInput.Picks<QuickPickItem> | Promise<monaco.quickInput.Picks<QuickPickItem>> {\r\n            const result = descriptor.getInstance().getPicks(filter, token);\r\n            if (result instanceof Promise) {\r\n              return result.then(picks => picks.map(toMonacoPick));\r\n            } else {\r\n              return result.map(toMonacoPick);\r\n            }\r\n          }\r\n        };\r\n\r\n    return this.monacoRegistry.registerQuickAccessProvider(new WmQuickAccessDescriptor(\r\n        descriptor,\r\n        inner,\r\n        descriptor.prefix,\r\n        descriptor.helpEntries,\r\n        descriptor.placeholder\r\n    ));\r\n  }\r\n\r\n  getQuickAccessProviders(): QuickAccessProviderDescriptor[] {\r\n    return this.monacoRegistry.getQuickAccessProviders()\r\n        .filter(provider => provider instanceof WmQuickAccessDescriptor)\r\n        .map(provider => (provider as WmQuickAccessDescriptor).wmDescriptor);\r\n  }\r\n\r\n  getQuickAccessProvider(prefix: string): QuickAccessProviderDescriptor | undefined {\r\n    const monacoDescriptor = this.monacoRegistry.getQuickAccessProvider(prefix);\r\n    return monacoDescriptor ? (monacoDescriptor as WmQuickAccessDescriptor).wmDescriptor : undefined;\r\n  }\r\n\r\n  clear(): void {\r\n    this.monacoRegistry.clear();\r\n  }\r\n}\r\n"]}
{"version":3,"sources":["browser/monaco-diff-editor.ts"],"names":[],"mappings":"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","file":"../../src/browser/monaco-diff-editor.js","sourcesContent":["/********************************************************************************\r\n * Copyright (C) 2018 TypeFox and others.\r\n *\r\n * This program and the accompanying materials are made available under the\r\n * terms of the Eclipse Public License v. 2.0 which is available at\r\n * http://www.eclipse.org/legal/epl-2.0.\r\n *\r\n * This Source Code may also be made available under the following Secondary\r\n * Licenses when the conditions for such availability set forth in the Eclipse\r\n * Public License v. 2.0 are satisfied: GNU General Public License, version 2\r\n * with the GNU Classpath Exception which is available at\r\n * https://www.gnu.org/software/classpath/license.html.\r\n *\r\n * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0\r\n ********************************************************************************/\r\n\r\nimport URI from '@tart/core/lib/common/uri';\r\nimport {Disposable} from '@tart/core/lib/common';\r\nimport {DeltaDecorationParams, DiffNavigator, Dimension} from '@tart/editor';\r\nimport {MonacoEditorModel} from './monaco-editor-model';\r\nimport {MonacoEditor, MonacoEditorServices} from './monaco-editor';\r\nimport {MonacoDiffNavigatorFactory} from './monaco-diff-navigator-factory';\r\nimport {DiffUris} from '@tart/core/lib/browser/diff-uris';\r\nimport IStandaloneDiffEditor = monaco.editor.IStandaloneDiffEditor;\r\nimport IDiffEditorConstructionOptions = monaco.editor.IDiffEditorConstructionOptions;\r\nimport IDiffNavigatorOptions = monaco.editor.IDiffNavigatorOptions;\r\nimport IEditorOverrideServices = monaco.editor.IEditorOverrideServices;\r\n\r\nexport namespace MonacoDiffEditor {\r\n    export interface IOptions extends MonacoEditor.ICommonOptions, IDiffEditorConstructionOptions, IDiffNavigatorOptions {\r\n    }\r\n}\r\n\r\nexport class MonacoDiffEditor extends MonacoEditor {\r\n    constructor(\r\n        readonly uri: URI,\r\n        readonly node: HTMLElement,\r\n        readonly originalModel: MonacoEditorModel,\r\n        readonly modifiedModel: MonacoEditorModel,\r\n        services: MonacoEditorServices,\r\n        protected readonly diffNavigatorFactory: MonacoDiffNavigatorFactory,\r\n        options?: MonacoDiffEditor.IOptions,\r\n        override?: IEditorOverrideServices,\r\n    ) {\r\n        super(uri, modifiedModel, node, services, options, override);\r\n        this.documents.add(originalModel);\r\n        const original = originalModel.textEditorModel;\r\n        const modified = modifiedModel.textEditorModel;\r\n        this._diffNavigator = diffNavigatorFactory.createdDiffNavigator(this._diffEditor, options);\r\n        this._diffEditor.setModel({original, modified});\r\n    }\r\n\r\n    protected _diffEditor: IStandaloneDiffEditor;\r\n\r\n    get diffEditor(): IStandaloneDiffEditor {\r\n        return this._diffEditor;\r\n    }\r\n\r\n    protected _diffNavigator: DiffNavigator;\r\n\r\n    get diffNavigator(): DiffNavigator {\r\n        return this._diffNavigator;\r\n    }\r\n\r\n    isActionSupported(id: string): boolean {\r\n        const action = this._diffEditor.getSupportedActions().find(a => a.id === id);\r\n        return !!action && action.isSupported() && super.isActionSupported(id);\r\n    }\r\n\r\n    deltaDecorations(params: DeltaDecorationParams): string[] {\r\n        console.warn('`deltaDecorations` should be called on either the original, or the modified editor.');\r\n        return [];\r\n    }\r\n\r\n    getResourceUri(): URI {\r\n        return new URI(this.originalModel.uri);\r\n    }\r\n\r\n    createMoveToUri(resourceUri: URI): URI {\r\n        const [left, right] = DiffUris.decode(this.uri);\r\n        return DiffUris.encode(left.withPath(resourceUri.path), right.withPath(resourceUri.path));\r\n    }\r\n\r\n    protected create(options?: IDiffEditorConstructionOptions, override?: monaco.editor.IEditorOverrideServices): Disposable {\r\n        this._diffEditor = monaco.editor.createDiffEditor(this.node, <IDiffEditorConstructionOptions>{\r\n            ...options,\r\n            fixedOverflowWidgets: true\r\n        }, override);\r\n        this.editor = this._diffEditor.getModifiedEditor();\r\n        return this._diffEditor;\r\n    }\r\n\r\n    protected resize(dimension: Dimension | null): void {\r\n        if (this.node) {\r\n            const layoutSize = this.computeLayoutSize(this.node, dimension);\r\n            this._diffEditor.layout(layoutSize);\r\n        }\r\n    }\r\n\r\n}\r\n"]}
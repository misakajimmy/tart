{"version":3,"sources":["browser/monaco-editor-model.ts"],"names":[],"mappings":"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","file":"../../src/browser/monaco-editor-model.js","sourcesContent":["import {TextDocumentContentChangeEvent, TextDocumentSaveReason} from 'vscode-languageserver-protocol';\r\nimport {\r\n  CancellationToken,\r\n  CancellationTokenSource,\r\n  Disposable,\r\n  DisposableCollection,\r\n  Emitter,\r\n  Event,\r\n  Resource,\r\n  ResourceError,\r\n  ResourceVersion\r\n} from '@tart/core/lib/common';\r\nimport {Position, Range} from 'vscode-languageserver-types';\r\nimport {Saveable, SaveOptions} from '@tart/core/lib/browser/saveable';\r\nimport {MonacoToProtocolConverter} from './monaco-to-protocol-converter';\r\nimport {ProtocolToMonacoConverter} from './protocol-to-monaco-converter';\r\nimport {EditorPreferences} from '@tart/editor/lib/browser/editor-preference';\r\nimport {EncodingMode, FindMatch, FindMatchesOptions, TextEditorDocument} from '@tart/editor/lib/browser/editor';\r\n\r\nexport {\r\n  TextDocumentSaveReason\r\n};\r\n\r\ntype ITextEditorModel = monaco.editor.ITextEditorModel;\r\n\r\nexport interface WillSaveMonacoModelEvent {\r\n  readonly model: MonacoEditorModel;\r\n  readonly reason: TextDocumentSaveReason;\r\n  readonly options?: SaveOptions;\r\n\r\n  waitUntil(thenable: Thenable<monaco.editor.IIdentifiedSingleEditOperation[]>): void;\r\n}\r\n\r\nexport interface MonacoModelContentChangedEvent {\r\n  readonly model: MonacoEditorModel;\r\n  readonly contentChanges: TextDocumentContentChangeEvent[];\r\n}\r\n\r\nexport class MonacoEditorModel implements ITextEditorModel, TextEditorDocument {\r\n\r\n  autoSave: 'on' | 'off' = 'on';\r\n  autoSaveDelay: number = 500;\r\n  suppressOpenEditorWhenDirty = false;\r\n  lineNumbersMinChars = 3;\r\n\r\n  /* @deprecated there is no general save timeout, each participant should introduce a sensible timeout  */\r\n  readonly onWillSaveLoopTimeOut = 1500;\r\n  protected bufferSavedVersionId: number;\r\n\r\n  protected model: monaco.editor.IModel;\r\n  protected readonly resolveModel: Promise<void>;\r\n\r\n  protected readonly toDispose = new DisposableCollection();\r\n  protected readonly toDisposeOnAutoSave = new DisposableCollection();\r\n\r\n  protected readonly onDidChangeContentEmitter = new Emitter<MonacoModelContentChangedEvent>();\r\n  readonly onDidChangeContent = this.onDidChangeContentEmitter.event;\r\n\r\n  protected readonly onDidSaveModelEmitter = new Emitter<monaco.editor.IModel>();\r\n  readonly onDidSaveModel = this.onDidSaveModelEmitter.event;\r\n\r\n  protected readonly onWillSaveModelEmitter = new Emitter<WillSaveMonacoModelEvent>();\r\n  readonly onWillSaveModel = this.onWillSaveModelEmitter.event;\r\n\r\n  protected readonly onDidChangeValidEmitter = new Emitter<void>();\r\n  readonly onDidChangeValid = this.onDidChangeValidEmitter.event;\r\n\r\n  protected readonly onDidChangeEncodingEmitter = new Emitter<string>();\r\n  readonly onDidChangeEncoding = this.onDidChangeEncodingEmitter.event;\r\n  protected resourceVersion: ResourceVersion | undefined;\r\n  protected readonly onDirtyChangedEmitter = new Emitter<void>();\r\n  protected pendingOperation = Promise.resolve();\r\n  protected syncCancellationTokenSource = new CancellationTokenSource();\r\n  protected ignoreDirtyEdits = false;\r\n  protected saveCancellationTokenSource = new CancellationTokenSource();\r\n  protected ignoreContentChanges = false;\r\n  protected readonly contentChanges: TextDocumentContentChangeEvent[] = [];\r\n  private preferredEncoding: string | undefined;\r\n  private contentEncoding: string | undefined;\r\n\r\n  constructor(\r\n      protected readonly resource: Resource,\r\n      protected readonly m2p: MonacoToProtocolConverter,\r\n      protected readonly p2m: ProtocolToMonacoConverter,\r\n      protected readonly editorPreferences?: EditorPreferences\r\n  ) {\r\n    // this.toDispose.push(resource);\r\n    this.toDispose.push(this.toDisposeOnAutoSave);\r\n    this.toDispose.push(this.onDidChangeContentEmitter);\r\n    this.toDispose.push(this.onDidSaveModelEmitter);\r\n    this.toDispose.push(this.onWillSaveModelEmitter);\r\n    this.toDispose.push(this.onDirtyChangedEmitter);\r\n    this.toDispose.push(this.onDidChangeValidEmitter);\r\n    this.toDispose.push(Disposable.create(() => this.cancelSave()));\r\n    this.toDispose.push(Disposable.create(() => this.cancelSync()));\r\n    this.resolveModel = this.readContents().then(\r\n        content => this.initialize(content || '')\r\n    );\r\n  }\r\n\r\n  /**\r\n   * Use `valid` to access it.\r\n   * Use `setValid` to mutate it.\r\n   */\r\n  protected _valid = false;\r\n\r\n  /**\r\n   * Whether it is possible to load content from the underlying resource.\r\n   */\r\n  get valid(): boolean {\r\n    return this._valid;\r\n  }\r\n\r\n  protected _dirty = false;\r\n  get dirty(): boolean {\r\n    return this._dirty;\r\n  }\r\n\r\n  get onDirtyChanged(): Event<void> {\r\n    return this.onDirtyChangedEmitter.event;\r\n  }\r\n\r\n  get uri(): string {\r\n    return '';\r\n    // return this.resource.uri.toString();\r\n  }\r\n\r\n  protected _languageId: string | undefined;\r\n\r\n  get languageId(): string {\r\n    return this._languageId !== undefined ? this._languageId : this.model.getModeId();\r\n  }\r\n\r\n  get version(): number {\r\n    return this.model.getVersionId();\r\n  }\r\n\r\n  get lineCount(): number {\r\n    return this.model.getLineCount();\r\n  }\r\n\r\n  get readOnly(): boolean {\r\n    return this.resource.saveContents === undefined;\r\n  }\r\n\r\n  get onDispose(): monaco.IEvent<void> {\r\n    return this.toDispose.onDispose;\r\n  }\r\n\r\n  get textEditorModel(): monaco.editor.IModel {\r\n    return this.model;\r\n  }\r\n\r\n  dispose(): void {\r\n    this.toDispose.dispose();\r\n  }\r\n\r\n  setEncoding(encoding: string, mode: EncodingMode): Promise<void> {\r\n    if (mode === EncodingMode.Decode && this.dirty) {\r\n      return Promise.resolve();\r\n    }\r\n    if (!this.setPreferredEncoding(encoding)) {\r\n      return Promise.resolve();\r\n    }\r\n    if (mode === EncodingMode.Decode) {\r\n      return this.sync();\r\n    }\r\n    return this.scheduleSave(TextDocumentSaveReason.Manual, this.cancelSave(), true);\r\n  }\r\n\r\n  getEncoding(): string | undefined {\r\n    return this.preferredEncoding || this.contentEncoding;\r\n  }\r\n\r\n  /**\r\n   * It's a hack to dispatch close notification with an old language id, don't use it.\r\n   */\r\n  setLanguageId(languageId: string | undefined): void {\r\n    this._languageId = languageId;\r\n  }\r\n\r\n  /**\r\n   * Return selected text by Range or all text by default\r\n   */\r\n  getText(range?: Range): string {\r\n    if (!range) {\r\n      return this.model.getValue();\r\n    } else {\r\n      return this.model.getValueInRange(this.p2m.asRange(range));\r\n    }\r\n  }\r\n\r\n  positionAt(offset: number): Position {\r\n    const {lineNumber, column} = this.model.getPositionAt(offset);\r\n    return this.m2p.asPosition(lineNumber, column);\r\n  }\r\n\r\n  offsetAt(position: Position): number {\r\n    return this.model.getOffsetAt(this.p2m.asPosition(position));\r\n  }\r\n\r\n  /**\r\n   * Retrieves a line in a text document expressed as a one-based position.\r\n   */\r\n  getLineContent(lineNumber: number): string {\r\n    return this.model.getLineContent(lineNumber);\r\n  }\r\n\r\n  getLineMaxColumn(lineNumber: number): number {\r\n    return this.model.getLineMaxColumn(lineNumber);\r\n  }\r\n\r\n  /**\r\n   * Find all matches in an editor for the given options.\r\n   * @param options the options for finding matches.\r\n   *\r\n   * @returns the list of matches.\r\n   */\r\n  findMatches(options: FindMatchesOptions): FindMatch[] {\r\n    const wordSeparators = '`~!@#$%^&*()-=+[{]}\\\\|;:\\'\",.<>/?';\r\n    const results: monaco.editor.FindMatch[] = this.model.findMatches(\r\n        options.searchString,\r\n        false,\r\n        options.isRegex,\r\n        options.matchCase,\r\n        // eslint-disable-next-line no-null/no-null\r\n        options.matchWholeWord ? wordSeparators : null,\r\n        true,\r\n        options.limitResultCount\r\n    );\r\n    const extractedMatches: FindMatch[] = [];\r\n    results.forEach(r => {\r\n      if (r.matches) {\r\n        extractedMatches.push({\r\n          matches: r.matches,\r\n          range: Range.create(r.range.startLineNumber, r.range.startColumn, r.range.endLineNumber, r.range.endColumn)\r\n        });\r\n      }\r\n    });\r\n    return extractedMatches;\r\n  }\r\n\r\n  async load(): Promise<MonacoEditorModel> {\r\n    await this.resolveModel;\r\n    return this;\r\n  }\r\n\r\n  save(options?: SaveOptions): Promise<void> {\r\n    return this.scheduleSave(TextDocumentSaveReason.Manual, undefined, undefined, options);\r\n  }\r\n\r\n  async sync(): Promise<void> {\r\n    const token = this.cancelSync();\r\n    return this.run(() => this.doSync(token));\r\n  }\r\n\r\n  async revert(options?: Saveable.RevertOptions): Promise<void> {\r\n    //this.trace(log => log('MonacoEditorModel.revert - enter'));\r\n    this.cancelSave();\r\n    const soft = options && options.soft;\r\n    if (soft !== true) {\r\n      const dirty = this._dirty;\r\n      this._dirty = false;\r\n      try {\r\n        await this.sync();\r\n      } finally {\r\n        this._dirty = dirty;\r\n      }\r\n    }\r\n    this.setDirty(false);\r\n    //this.trace('MonacoEditorModel.revert - exit');\r\n  }\r\n\r\n  createSnapshot(): object {\r\n    return {\r\n      value: this.getText()\r\n    };\r\n  }\r\n\r\n  applySnapshot(snapshot: { value: string }): void {\r\n    this.model.setValue(snapshot.value);\r\n  }\r\n\r\n  protected setPreferredEncoding(encoding: string): boolean {\r\n    if (encoding === this.preferredEncoding || (!this.preferredEncoding && encoding === this.contentEncoding)) {\r\n      return false;\r\n    }\r\n    this.preferredEncoding = encoding;\r\n    this.onDidChangeEncodingEmitter.fire(encoding);\r\n    return true;\r\n  }\r\n\r\n  protected updateContentEncoding(): void {\r\n    const contentEncoding = this.resource.encoding;\r\n    if (!contentEncoding || this.contentEncoding === contentEncoding) {\r\n      return;\r\n    }\r\n    this.contentEncoding = contentEncoding;\r\n    if (!this.preferredEncoding) {\r\n      this.onDidChangeEncodingEmitter.fire(contentEncoding);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * #### Important\r\n   * Only this method can create an instance of `monaco.editor.IModel`,\r\n   * there should not be other calls to `monaco.editor.createModel`.\r\n   */\r\n  protected initialize(value: string | monaco.editor.ITextBufferFactory): void {\r\n    if (!this.toDispose.disposed) {\r\n      const uri = monaco.Uri.parse(this.resource.uri.toString());\r\n      let firstLine;\r\n      if (typeof value === 'string') {\r\n        firstLine = value;\r\n        const firstLF = value.indexOf('\\n');\r\n        if (firstLF !== -1) {\r\n          firstLine = value.substring(0, firstLF);\r\n        }\r\n      } else {\r\n        firstLine = value.getFirstLineText(1000);\r\n      }\r\n      const languageSelection = monaco.services.StaticServices.modeService.get().createByFilepathOrFirstLine(uri, firstLine);\r\n      this.model = monaco.services.StaticServices.modelService.get().createModel(value, languageSelection, uri);\r\n      this.resourceVersion = this.resource.version;\r\n      this.updateSavedVersionId();\r\n      this.toDispose.push(this.model);\r\n      this.toDispose.push(this.model.onDidChangeContent(event => this.fireDidChangeContent(event)));\r\n      if (this.resource.onDidChangeContents) {\r\n        this.toDispose.push(this.resource.onDidChangeContents(() => this.sync()));\r\n      }\r\n    }\r\n  }\r\n\r\n  protected setValid(valid: boolean): void {\r\n    if (valid === this._valid) {\r\n      return;\r\n    }\r\n    this._valid = valid;\r\n    this.onDidChangeValidEmitter.fire(undefined);\r\n  }\r\n\r\n  protected setDirty(dirty: boolean): void {\r\n    if (dirty === this._dirty) {\r\n      return;\r\n    }\r\n    this._dirty = dirty;\r\n    if (dirty === false) {\r\n      this.updateSavedVersionId();\r\n    }\r\n    this.onDirtyChangedEmitter.fire(undefined);\r\n  }\r\n\r\n  protected async run(operation: () => Promise<void>): Promise<void> {\r\n    if (this.toDispose.disposed) {\r\n      return;\r\n    }\r\n    return this.pendingOperation = this.pendingOperation.then(async () => {\r\n      try {\r\n        await operation();\r\n      } catch (e) {\r\n        console.error(e);\r\n      }\r\n    });\r\n  }\r\n\r\n  protected cancelSync(): CancellationToken {\r\n    //this.trace(log => log('MonacoEditorModel.cancelSync'));\r\n    this.syncCancellationTokenSource.cancel();\r\n    this.syncCancellationTokenSource = new CancellationTokenSource();\r\n    return this.syncCancellationTokenSource.token;\r\n  }\r\n\r\n  protected async doSync(token: CancellationToken): Promise<void> {\r\n    //this.trace(log => log('MonacoEditorModel.doSync - enter'));\r\n    if (token.isCancellationRequested) {\r\n      //this.trace(log => log('MonacoEditorModel.doSync - exit - cancelled'));\r\n      return;\r\n    }\r\n\r\n    const value = await this.readContents();\r\n    if (value === undefined) {\r\n      //this.trace(log => log('MonacoEditorModel.doSync - exit - resource not found'));\r\n      return;\r\n    }\r\n    if (token.isCancellationRequested) {\r\n      //this.trace(log => log('MonacoEditorModel.doSync - exit - cancelled while looking for a resource'));\r\n      return;\r\n    }\r\n    if (this._dirty) {\r\n      //this.trace(log => log('MonacoEditorModel.doSync - exit - pending dirty changes'));\r\n      return;\r\n    }\r\n\r\n    this.resourceVersion = this.resource.version;\r\n    this.updateModel(() => monaco.services.StaticServices.modelService.get().updateModel(this.model, value), {\r\n      ignoreDirty: true,\r\n      ignoreContentChanges: true\r\n    });\r\n    //this.trace(log => log('MonacoEditorModel.doSync - exit'));\r\n  }\r\n\r\n  protected async readContents(): Promise<string | monaco.editor.ITextBufferFactory | undefined> {\r\n    try {\r\n      const options = {encoding: this.getEncoding()};\r\n      const content = await (this.resource.readStream ? this.resource.readStream(options) : this.resource.readContents(options));\r\n      let value;\r\n      if (typeof content === 'string') {\r\n        value = content;\r\n      } else {\r\n        value = monaco.textModel.createTextBufferFactoryFromStream(content);\r\n      }\r\n      this.updateContentEncoding();\r\n      this.setValid(true);\r\n      return value;\r\n    } catch (e) {\r\n      this.setValid(false);\r\n      if (ResourceError.NotFound.is(e)) {\r\n        return undefined;\r\n      }\r\n      throw e;\r\n    }\r\n  }\r\n\r\n  protected markAsDirty(): void {\r\n    //this.trace(log => log('MonacoEditorModel.markAsDirty - enter'));\r\n    if (this.ignoreDirtyEdits) {\r\n      //this.trace(log => log('MonacoEditorModel.markAsDirty - exit - ignoring dirty changes enabled'));\r\n      return;\r\n    }\r\n    this.cancelSync();\r\n    this.setDirty(true);\r\n    this.doAutoSave();\r\n    //this.trace(log => log('MonacoEditorModel.markAsDirty - exit'));\r\n  }\r\n\r\n  protected doAutoSave(): void {\r\n    if (this.autoSave === 'on') {\r\n      const token = this.cancelSave();\r\n      this.toDisposeOnAutoSave.dispose();\r\n      const handle = window.setTimeout(() => {\r\n        this.scheduleSave(TextDocumentSaveReason.AfterDelay, token);\r\n      }, this.autoSaveDelay);\r\n      this.toDisposeOnAutoSave.push(Disposable.create(() =>\r\n          window.clearTimeout(handle))\r\n      );\r\n    }\r\n  }\r\n\r\n  protected cancelSave(): CancellationToken {\r\n    //this.trace(log => log('MonacoEditorModel.cancelSave'));\r\n    this.saveCancellationTokenSource.cancel();\r\n    this.saveCancellationTokenSource = new CancellationTokenSource();\r\n    return this.saveCancellationTokenSource.token;\r\n  }\r\n\r\n  protected scheduleSave(reason: TextDocumentSaveReason, token: CancellationToken = this.cancelSave(), overwriteEncoding?: boolean, options?: SaveOptions): Promise<void> {\r\n    return this.run(() => this.doSave(reason, token, overwriteEncoding, options));\r\n  }\r\n\r\n  protected pushContentChanges(contentChanges: TextDocumentContentChangeEvent[]): void {\r\n    if (!this.ignoreContentChanges) {\r\n      this.contentChanges.push(...contentChanges);\r\n    }\r\n  }\r\n\r\n  protected fireDidChangeContent(event: monaco.editor.IModelContentChangedEvent): void {\r\n    //this.trace(log => log(`MonacoEditorModel.fireDidChangeContent - enter - ${JSON.stringify(event, undefined, 2)}`));\r\n    if (this.model.getAlternativeVersionId() === this.bufferSavedVersionId) {\r\n      this.setDirty(false);\r\n    } else {\r\n      this.markAsDirty();\r\n    }\r\n\r\n    const changeContentEvent = this.asContentChangedEvent(event);\r\n    this.onDidChangeContentEmitter.fire(changeContentEvent);\r\n    this.pushContentChanges(changeContentEvent.contentChanges);\r\n    //this.trace(log => log('MonacoEditorModel.fireDidChangeContent - exit'));\r\n  }\r\n\r\n  protected asContentChangedEvent(event: monaco.editor.IModelContentChangedEvent): MonacoModelContentChangedEvent {\r\n    const contentChanges = event.changes.map(change => this.asTextDocumentContentChangeEvent(change));\r\n    return {model: this, contentChanges};\r\n  }\r\n\r\n  protected asTextDocumentContentChangeEvent(change: monaco.editor.IModelContentChange): TextDocumentContentChangeEvent {\r\n    const range = this.m2p.asRange(change.range);\r\n    const rangeLength = change.rangeLength;\r\n    const text = change.text;\r\n    return {range, rangeLength, text};\r\n  }\r\n\r\n  protected applyEdits(\r\n      operations: monaco.editor.IIdentifiedSingleEditOperation[],\r\n      options?: Partial<MonacoEditorModel.ApplyEditsOptions>\r\n  ): void {\r\n    return this.updateModel(() => this.model.applyEdits(operations), options);\r\n  }\r\n\r\n  protected updateModel<T>(doUpdate: () => T, options?: Partial<MonacoEditorModel.ApplyEditsOptions>): T {\r\n    const resolvedOptions: MonacoEditorModel.ApplyEditsOptions = {\r\n      ignoreDirty: false,\r\n      ignoreContentChanges: false,\r\n      ...options\r\n    };\r\n    const {ignoreDirtyEdits, ignoreContentChanges} = this;\r\n    this.ignoreDirtyEdits = resolvedOptions.ignoreDirty;\r\n    this.ignoreContentChanges = resolvedOptions.ignoreContentChanges;\r\n    try {\r\n      return doUpdate();\r\n    } finally {\r\n      this.ignoreDirtyEdits = ignoreDirtyEdits;\r\n      this.ignoreContentChanges = ignoreContentChanges;\r\n    }\r\n  }\r\n\r\n  protected async doSave(reason: TextDocumentSaveReason, token: CancellationToken, overwriteEncoding?: boolean, options?: SaveOptions): Promise<void> {\r\n    if (token.isCancellationRequested || !this.resource.saveContents) {\r\n      return;\r\n    }\r\n\r\n    await this.fireWillSaveModel(reason, token, options);\r\n    if (token.isCancellationRequested) {\r\n      return;\r\n    }\r\n\r\n    const changes = [...this.contentChanges];\r\n    if (changes.length === 0 && !overwriteEncoding && reason !== TextDocumentSaveReason.Manual) {\r\n      return;\r\n    }\r\n\r\n    const contentLength = this.model.getValueLength();\r\n    const content = this.model.createSnapshot() || this.model.getValue();\r\n    try {\r\n      const encoding = this.getEncoding();\r\n      const version = this.resourceVersion;\r\n      await Resource.save(this.resource, {\r\n        changes,\r\n        content,\r\n        contentLength,\r\n        options: {encoding, overwriteEncoding, version}\r\n      }, token);\r\n      this.contentChanges.splice(0, changes.length);\r\n      this.resourceVersion = this.resource.version;\r\n      this.updateContentEncoding();\r\n      this.setValid(true);\r\n\r\n      if (token.isCancellationRequested) {\r\n        return;\r\n      }\r\n\r\n      this.setDirty(false);\r\n      this.fireDidSaveModel();\r\n    } catch (e) {\r\n      if (!ResourceError.OutOfSync.is(e)) {\r\n        throw e;\r\n      }\r\n    }\r\n  }\r\n\r\n  protected async fireWillSaveModel(reason: TextDocumentSaveReason, token: CancellationToken, options?: SaveOptions): Promise<void> {\r\n    type EditContributor = Thenable<monaco.editor.IIdentifiedSingleEditOperation[]>;\r\n\r\n    const firing = this.onWillSaveModelEmitter.sequence(async listener => {\r\n      if (token.isCancellationRequested) {\r\n        return false;\r\n      }\r\n      const waitables: EditContributor[] = [];\r\n      const {version} = this;\r\n\r\n      const event = {\r\n        model: this, reason, options,\r\n        waitUntil: (thenable: EditContributor) => {\r\n          if (Object.isFrozen(waitables)) {\r\n            throw new Error('waitUntil cannot be called asynchronously.');\r\n          }\r\n          waitables.push(thenable);\r\n        }\r\n      };\r\n\r\n      // Fire.\r\n      try {\r\n        listener(event);\r\n      } catch (err) {\r\n        console.error(err);\r\n        return true;\r\n      }\r\n\r\n      // Asynchronous calls to `waitUntil` should fail.\r\n      Object.freeze(waitables);\r\n\r\n      // Wait for all promises.\r\n      const edits = await Promise.all(waitables).then(allOperations =>\r\n          ([] as monaco.editor.IIdentifiedSingleEditOperation[]).concat(...allOperations)\r\n      );\r\n      if (token.isCancellationRequested) {\r\n        return false;\r\n      }\r\n\r\n      // In a perfect world, we should only apply edits if document is clean.\r\n      if (version !== this.version) {\r\n        console.error('onWillSave listeners should provide edits, not directly alter the document.');\r\n      }\r\n\r\n      // Finally apply edits provided by this listener before firing the next.\r\n      if (edits && edits.length > 0) {\r\n        this.applyEdits(edits, {\r\n          ignoreDirty: true,\r\n        });\r\n      }\r\n\r\n      return true;\r\n    });\r\n\r\n    try {\r\n      await firing;\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  protected fireDidSaveModel(): void {\r\n    this.onDidSaveModelEmitter.fire(this.model);\r\n  }\r\n\r\n  protected trace(): void {\r\n    console.log(this.resource.uri.toString(true));\r\n  }\r\n\r\n  private updateSavedVersionId(): void {\r\n    this.bufferSavedVersionId = this.model.getAlternativeVersionId();\r\n  }\r\n\r\n}\r\n\r\nexport namespace MonacoEditorModel {\r\n  export interface ApplyEditsOptions {\r\n    ignoreDirty: boolean\r\n    ignoreContentChanges: boolean\r\n  }\r\n}\r\n"]}
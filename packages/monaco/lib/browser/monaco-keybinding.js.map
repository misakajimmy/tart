{"version":3,"sources":["browser/monaco-keybinding.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,MAAM,EAAE,UAAU,EAAC,MAAM,WAAW,CAAC;AAE7C,OAAO,EAAC,wBAAwB,EAAC,MAAM,8BAA8B,CAAC;AACtE,OAAO,EAAC,qBAAqB,EAAC,MAAM,2BAA2B,CAAC;AAGhE,IAAa,4BAA4B,GAAzC,MAAa,4BAA4B;IAKrC,mBAAmB,CAAC,QAA4B;QAC5C,MAAM,kBAAkB,GAAG,MAAM,CAAC,WAAW,CAAC,mBAAmB,CAAC,qBAAqB,EAAE,CAAC;QAC1F,KAAK,MAAM,IAAI,IAAI,kBAAkB,EAAE;YACnC,MAAM,OAAO,GAAG,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrD,IAAI,OAAO,EAAE;gBACT,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,CAAC;gBAChD,IAAI,UAAU,CAAC;gBACf,UAAU,GAAG,wBAAwB,CAAC,YAAY,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;gBACpE,QAAQ,CAAC,kBAAkB,CAAC,EAAC,OAAO,EAAE,UAAU,EAAE,IAAI,EAAC,CAAC,CAAC;aAC5D;SACJ;IACL,CAAC;CACJ,CAAA;AAdG;IADC,MAAM,CAAC,qBAAqB,CAAC;8DACqB;AAH1C,4BAA4B;IADxC,UAAU,EAAE;GACA,4BAA4B,CAiBxC;SAjBY,4BAA4B","file":"../../src/browser/monaco-keybinding.js","sourcesContent":["import {inject, injectable} from 'inversify';\r\nimport {KeybindingContribution, KeybindingRegistry} from '@tart/core';\r\nimport {MonacoResolvedKeybinding} from './monaco-resolved-keybinding';\r\nimport {MonacoCommandRegistry} from './monaco-command-registry';\r\n\r\n@injectable()\r\nexport class MonacoKeybindingContribution implements KeybindingContribution {\r\n\r\n    @inject(MonacoCommandRegistry)\r\n    protected readonly commands: MonacoCommandRegistry;\r\n\r\n    registerKeybindings(registry: KeybindingRegistry): void {\r\n        const defaultKeybindings = monaco.keybindings.KeybindingsRegistry.getDefaultKeybindings();\r\n        for (const item of defaultKeybindings) {\r\n            const command = this.commands.validate(item.command);\r\n            if (command) {\r\n                const when = item.when && item.when.serialize();\r\n                let keybinding;\r\n                keybinding = MonacoResolvedKeybinding.toKeybinding(item.keybinding);\r\n                registry.registerKeybinding({command, keybinding, when});\r\n            }\r\n        }\r\n    }\r\n}\r\n"]}
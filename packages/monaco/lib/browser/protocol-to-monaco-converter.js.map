{"version":3,"sources":["browser/protocol-to-monaco-converter.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAC,MAAM,WAAW,CAAC;AAYrC,IAAa,yBAAyB,GAAtC,MAAa,yBAAyB;IAOlC,OAAO,CAAC,KAA0C;QAC9C,IAAI,KAAK,KAAK,SAAS,EAAE;YACrB,OAAO,SAAS,CAAC;SACpB;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC3C,MAAM,GAAG,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACvC,IAAI,KAAK,YAAY,MAAM,CAAC,QAAQ,IAAI,GAAG,YAAY,MAAM,CAAC,QAAQ,EAAE;YACpE,OAAO,IAAI,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,UAAU,EAAE,KAAK,CAAC,MAAM,EAAE,GAAG,CAAC,UAAU,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;SACvF;QACD,MAAM,eAAe,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,UAAU,CAAC;QAChG,MAAM,WAAW,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC;QACpF,MAAM,aAAa,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,UAAU,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC;QACxF,MAAM,SAAS,GAAG,CAAC,GAAG,IAAI,GAAG,CAAC,MAAM,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC;QAC5E,OAAO,EAAC,eAAe,EAAE,WAAW,EAAE,aAAa,EAAE,SAAS,EAAC,CAAC;IACpE,CAAC;IAOD,UAAU,CAAC,QAAuC;QAC9C,IAAI,QAAQ,KAAK,SAAS,EAAE;YACxB,OAAO,SAAS,CAAC;SACpB;QACD,MAAM,EAAC,IAAI,EAAE,SAAS,EAAC,GAAG,QAAQ,CAAC;QACnC,MAAM,UAAU,GAAG,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,GAAG,CAAC,CAAC;QAC7D,MAAM,MAAM,GAAG,SAAS,KAAK,SAAS,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,SAAS,GAAG,CAAC,CAAC;QACnE,IAAI,UAAU,KAAK,SAAS,IAAI,MAAM,KAAK,SAAS,EAAE;YAClD,OAAO,IAAI,MAAM,CAAC,QAAQ,CAAC,UAAU,EAAE,MAAM,CAAC,CAAC;SAClD;QACD,OAAO,EAAC,UAAU,EAAE,MAAM,EAAC,CAAC;IAChC,CAAC;IAKD,UAAU,CAAC,IAA0B;QACjC,IAAI,CAAC,IAAI,EAAE;YACP,OAAO,SAAS,CAAC;SACpB;QACD,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvC,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC;QACxC,OAAO;YACH,GAAG,EAAE,KAAK;SACb,CAAC;IACN,CAAC;IAKD,UAAU,CAAC,IAA0B;QACjC,IAAI,CAAC,IAAI,EAAE;YACP,OAAO,SAAS,CAAC;SACpB;QACD,MAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,CAAE,CAAC;QACxC,OAAO;YACH,KAAK;YACL,IAAI,EAAE,IAAI,CAAC,OAAO;SACrB,CAAC;IACN,CAAC;IAKD,WAAW,CAAC,KAA6B;QACrC,IAAI,CAAC,KAAK,EAAE;YACR,OAAO,SAAS,CAAC;SACpB;QACD,OAAO,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC;IACpD,CAAC;IAED,UAAU,CAAC,QAAiB;QACxB,IAAI,QAAQ,KAAK,CAAC,EAAE;YAChB,OAAO,MAAM,CAAC,cAAc,CAAC,KAAK,CAAC;SACtC;QACD,IAAI,QAAQ,KAAK,CAAC,EAAE;YAChB,OAAO,MAAM,CAAC,cAAc,CAAC,OAAO,CAAC;SACxC;QACD,IAAI,QAAQ,KAAK,CAAC,EAAE;YAChB,OAAO,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC;SACrC;QACD,OAAO,MAAM,CAAC,cAAc,CAAC,IAAI,CAAC;IACtC,CAAC;IAKD,aAAa,CAAC,WAAqC;QAC/C,IAAI,CAAC,WAAW,EAAE;YACd,OAAO,SAAS,CAAC;SACpB;QACD,OAAO,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,CAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;IACxE,CAAC;IAED,YAAY,CAAC,UAAsB;QAC/B,OAAO;YACH,IAAI,EAAE,OAAO,UAAU,CAAC,IAAI,KAAK,QAAQ,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,UAAU,CAAC,IAAI;YACxF,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC;YAC9C,OAAO,EAAE,UAAU,CAAC,OAAO;YAC3B,MAAM,EAAE,UAAU,CAAC,MAAM;YACzB,eAAe,EAAE,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC;YAChD,WAAW,EAAE,UAAU,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC;YACjD,aAAa,EAAE,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC;YAC5C,SAAS,EAAE,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC;YAC7C,kBAAkB,EAAE,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC,kBAAkB,CAAC;YAC7E,IAAI,EAAE,UAAU,CAAC,IAAI;SACxB,CAAC;IACN,CAAC;IAED,qBAAqB,CAAC,kBAAmD;QACrE,IAAI,CAAC,kBAAkB,EAAE;YACrB,OAAO,SAAS,CAAC;SACpB;QACD,OAAO,kBAAkB,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE,CAAC,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,CAAC,CAAC;IAC3E,CAAC;IAED,oBAAoB,CAAC,kBAAgD;QACjE,OAAO;YACH,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,CAAC;YAC3D,eAAe,EAAE,kBAAkB,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,GAAG,CAAC;YACjE,WAAW,EAAE,kBAAkB,CAAC,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,SAAS,GAAG,CAAC;YAClE,aAAa,EAAE,kBAAkB,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,GAAG,CAAC;YAC7D,SAAS,EAAE,kBAAkB,CAAC,QAAQ,CAAC,KAAK,CAAC,GAAG,CAAC,SAAS,GAAG,CAAC;YAC9D,OAAO,EAAE,kBAAkB,CAAC,OAAO;SACtC,CAAC;IACN,CAAC;CAEJ,CAAA;AAvIY,yBAAyB;IADrC,UAAU,EAAE;GACA,yBAAyB,CAuIrC;SAvIY,yBAAyB","file":"../../src/browser/protocol-to-monaco-converter.js","sourcesContent":["import {injectable} from 'inversify';\r\nimport {RecursivePartial} from '@tart/core/lib/common';\r\nimport {\r\n    Diagnostic,\r\n    DiagnosticRelatedInformation,\r\n    Location,\r\n    Position,\r\n    Range,\r\n    TextEdit\r\n} from 'vscode-languageserver-types';\r\n\r\n@injectable()\r\nexport class ProtocolToMonacoConverter {\r\n\r\n    asRange(range: undefined): undefined;\r\n    asRange(range: Range): monaco.Range;\r\n    asRange(range: Range | undefined): monaco.Range | undefined;\r\n    asRange(range: RecursivePartial<Range>): Partial<monaco.IRange>;\r\n    asRange(range: RecursivePartial<Range> | undefined): monaco.Range | Partial<monaco.IRange> | undefined;\r\n    asRange(range: RecursivePartial<Range> | undefined): monaco.Range | Partial<monaco.IRange> | undefined {\r\n        if (range === undefined) {\r\n            return undefined;\r\n        }\r\n        const start = this.asPosition(range.start);\r\n        const end = this.asPosition(range.end);\r\n        if (start instanceof monaco.Position && end instanceof monaco.Position) {\r\n            return new monaco.Range(start.lineNumber, start.column, end.lineNumber, end.column);\r\n        }\r\n        const startLineNumber = !start || start.lineNumber === undefined ? undefined : start.lineNumber;\r\n        const startColumn = !start || start.column === undefined ? undefined : start.column;\r\n        const endLineNumber = !end || end.lineNumber === undefined ? undefined : end.lineNumber;\r\n        const endColumn = !end || end.column === undefined ? undefined : end.column;\r\n        return {startLineNumber, startColumn, endLineNumber, endColumn};\r\n    }\r\n\r\n    asPosition(position: undefined): undefined;\r\n    asPosition(position: Position): monaco.Position;\r\n    asPosition(position: Position | undefined): monaco.Position | undefined;\r\n    asPosition(position: Partial<Position>): Partial<monaco.IPosition>;\r\n    asPosition(position: Partial<Position> | undefined): monaco.Position | Partial<monaco.IPosition> | undefined;\r\n    asPosition(position: Partial<Position> | undefined): monaco.Position | Partial<monaco.IPosition> | undefined {\r\n        if (position === undefined) {\r\n            return undefined;\r\n        }\r\n        const {line, character} = position;\r\n        const lineNumber = line === undefined ? undefined : line + 1;\r\n        const column = character === undefined ? undefined : character + 1;\r\n        if (lineNumber !== undefined && column !== undefined) {\r\n            return new monaco.Position(lineNumber, column);\r\n        }\r\n        return {lineNumber, column};\r\n    }\r\n\r\n    asLocation(item: Location): monaco.languages.Location;\r\n    asLocation(item: undefined): undefined;\r\n    asLocation(item: Location | undefined): monaco.languages.Location | undefined;\r\n    asLocation(item: Location | undefined): monaco.languages.Location | undefined {\r\n        if (!item) {\r\n            return undefined;\r\n        }\r\n        const uri = monaco.Uri.parse(item.uri);\r\n        const range = this.asRange(item.range)!;\r\n        return {\r\n            uri, range\r\n        };\r\n    }\r\n\r\n    asTextEdit(edit: TextEdit): monaco.languages.TextEdit;\r\n    asTextEdit(edit: undefined): undefined;\r\n    asTextEdit(edit: TextEdit | undefined): undefined;\r\n    asTextEdit(edit: TextEdit | undefined): monaco.languages.TextEdit | undefined {\r\n        if (!edit) {\r\n            return undefined;\r\n        }\r\n        const range = this.asRange(edit.range)!;\r\n        return {\r\n            range,\r\n            text: edit.newText\r\n        };\r\n    }\r\n\r\n    asTextEdits(items: TextEdit[]): monaco.languages.TextEdit[];\r\n    asTextEdits(items: undefined): undefined;\r\n    asTextEdits(items: TextEdit[] | undefined): monaco.languages.TextEdit[] | undefined;\r\n    asTextEdits(items: TextEdit[] | undefined): monaco.languages.TextEdit[] | undefined {\r\n        if (!items) {\r\n            return undefined;\r\n        }\r\n        return items.map(item => this.asTextEdit(item));\r\n    }\r\n\r\n    asSeverity(severity?: number): monaco.MarkerSeverity {\r\n        if (severity === 1) {\r\n            return monaco.MarkerSeverity.Error;\r\n        }\r\n        if (severity === 2) {\r\n            return monaco.MarkerSeverity.Warning;\r\n        }\r\n        if (severity === 3) {\r\n            return monaco.MarkerSeverity.Info;\r\n        }\r\n        return monaco.MarkerSeverity.Hint;\r\n    }\r\n\r\n    asDiagnostics(diagnostics: undefined): undefined;\r\n    asDiagnostics(diagnostics: Diagnostic[]): monaco.editor.IMarkerData[];\r\n    asDiagnostics(diagnostics: Diagnostic[] | undefined): monaco.editor.IMarkerData[] | undefined;\r\n    asDiagnostics(diagnostics: Diagnostic[] | undefined): monaco.editor.IMarkerData[] | undefined {\r\n        if (!diagnostics) {\r\n            return undefined;\r\n        }\r\n        return diagnostics.map(diagnostic => this.asDiagnostic(diagnostic));\r\n    }\r\n\r\n    asDiagnostic(diagnostic: Diagnostic): monaco.editor.IMarkerData {\r\n        return {\r\n            code: typeof diagnostic.code === 'number' ? diagnostic.code.toString() : diagnostic.code,\r\n            severity: this.asSeverity(diagnostic.severity),\r\n            message: diagnostic.message,\r\n            source: diagnostic.source,\r\n            startLineNumber: diagnostic.range.start.line + 1,\r\n            startColumn: diagnostic.range.start.character + 1,\r\n            endLineNumber: diagnostic.range.end.line + 1,\r\n            endColumn: diagnostic.range.end.character + 1,\r\n            relatedInformation: this.asRelatedInformations(diagnostic.relatedInformation),\r\n            tags: diagnostic.tags\r\n        };\r\n    }\r\n\r\n    asRelatedInformations(relatedInformation?: DiagnosticRelatedInformation[]): monaco.editor.IRelatedInformation[] | undefined {\r\n        if (!relatedInformation) {\r\n            return undefined;\r\n        }\r\n        return relatedInformation.map(item => this.asRelatedInformation(item));\r\n    }\r\n\r\n    asRelatedInformation(relatedInformation: DiagnosticRelatedInformation): monaco.editor.IRelatedInformation {\r\n        return {\r\n            resource: monaco.Uri.parse(relatedInformation.location.uri),\r\n            startLineNumber: relatedInformation.location.range.start.line + 1,\r\n            startColumn: relatedInformation.location.range.start.character + 1,\r\n            endLineNumber: relatedInformation.location.range.end.line + 1,\r\n            endColumn: relatedInformation.location.range.end.character + 1,\r\n            message: relatedInformation.message\r\n        };\r\n    }\r\n\r\n}\r\n"]}
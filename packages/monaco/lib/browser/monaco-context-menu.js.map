{"version":3,"sources":["browser/monaco-context-menu.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAC,MAAM,EAAE,UAAU,EAAC,MAAM,WAAW,CAAC;AAE7C,OAAO,EAAC,mBAAmB,EAAE,QAAQ,EAAC,MAAM,wBAAwB,CAAC;AACrE,OAAO,EAAC,IAAI,EAAC,MAAM,iBAAiB,CAAC;AACrC,OAAO,EAAC,eAAe,EAAC,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAC,mBAAmB,EAAC,MAAM,kBAAkB,CAAC;AAKrD,IAAa,wBAAwB,GAArC,MAAa,wBAAwB;IAEjC,YAA4D,mBAAwC;QAAxC,wBAAmB,GAAnB,mBAAmB,CAAqB;IACpG,CAAC;IAED,eAAe,CAAC,QAA8B;QAC1C,MAAM,MAAM,GAAG,QAAQ,CAAC,QAAQ,CAAC,SAAS,EAAE,CAAC,CAAC;QAC9C,MAAM,OAAO,GAAG,QAAQ,CAAC,UAAU,EAAE,CAAC;QAEtC,iEAAiE;QACjE,kEAAkE;QAClE,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,OAAO,CAAC,CAAC,CAAC,YAAY,MAAM,CAAC,OAAO,CAAC,cAAc,EAAE;YAC3E,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC;gBAC5B,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE;gBACzB,MAAM;gBACN,MAAM,EAAE,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;aACvC,CAAC,CAAC;SACN;aAAM;YACH,MAAM,QAAQ,GAAG,IAAI,eAAe,EAAE,CAAC;YACvC,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC;gBAClB,QAAQ;aACX,CAAC,CAAC;YAEH,KAAK,MAAM,MAAM,IAAI,OAAO,EAAE;gBAC1B,MAAM,SAAS,GAAG,WAAW,GAAG,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;gBACxD,QAAQ,CAAC,UAAU,CAAC,SAAS,EAAE;oBAC3B,KAAK,EAAE,MAAM,CAAC,KAAK;oBACnB,SAAS,EAAE,MAAM,CAAC,KAAK;oBACvB,SAAS,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO;oBAC/B,SAAS,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,OAAO;oBAC/B,OAAO,EAAE,GAAG,EAAE,CAAC,MAAM,CAAC,GAAG,EAAE;iBAC9B,CAAC,CAAC;gBACH,IAAI,CAAC,OAAO,CAAC;oBACT,IAAI,EAAE,SAAS;oBACf,OAAO,EAAE,SAAS;iBACrB,CAAC,CAAC;aACN;YACD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;YACxD,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,EAAE,MAAM,CAAC,CAAC,CAAC,CAAC;SACjC;IACL,CAAC;IAES,QAAQ;QACd,OAAO,mBAAmB,CAAC;IAC/B,CAAC;CAEJ,CAAA;AA9CY,wBAAwB;IADpC,UAAU,EAAE;IAGI,WAAA,MAAM,CAAC,mBAAmB,CAAC,CAAA;GAF/B,wBAAwB,CA8CpC;SA9CY,wBAAwB","file":"../../src/browser/monaco-context-menu.js","sourcesContent":["import {inject, injectable} from 'inversify';\r\nimport {MenuPath} from '@tart/core/lib/common/menu';\r\nimport {ContextMenuRenderer, toAnchor} from '@tart/core/lib/browser';\r\nimport {Menu} from '@lumino/widgets';\r\nimport {CommandRegistry} from '@lumino/commands';\r\nimport {EDITOR_CONTEXT_MENU} from '@tart/editor/lib';\r\nimport IContextMenuService = monaco.editor.IContextMenuService;\r\nimport IContextMenuDelegate = monaco.editor.IContextMenuDelegate;\r\n\r\n@injectable()\r\nexport class MonacoContextMenuService implements IContextMenuService {\r\n\r\n    constructor(@inject(ContextMenuRenderer) protected readonly contextMenuRenderer: ContextMenuRenderer) {\r\n    }\r\n\r\n    showContextMenu(delegate: IContextMenuDelegate): void {\r\n        const anchor = toAnchor(delegate.getAnchor());\r\n        const actions = delegate.getActions();\r\n\r\n        // Actions for editor context menu come as 'MenuItemAction' items\r\n        // In case of 'Quick Fix' actions come as 'CodeActionAction' items\r\n        if (actions.length > 0 && actions[0] instanceof monaco.actions.MenuItemAction) {\r\n            this.contextMenuRenderer.render({\r\n                menuPath: this.menuPath(),\r\n                anchor,\r\n                onHide: () => delegate.onHide(false)\r\n            });\r\n        } else {\r\n            const commands = new CommandRegistry();\r\n            const menu = new Menu({\r\n                commands\r\n            });\r\n\r\n            for (const action of actions) {\r\n                const commandId = 'quickfix_' + actions.indexOf(action);\r\n                commands.addCommand(commandId, {\r\n                    label: action.label,\r\n                    className: action.class,\r\n                    isToggled: () => action.checked,\r\n                    isEnabled: () => action.enabled,\r\n                    execute: () => action.run()\r\n                });\r\n                menu.addItem({\r\n                    type: 'command',\r\n                    command: commandId\r\n                });\r\n            }\r\n            menu.aboutToClose.connect(() => delegate.onHide(false));\r\n            menu.open(anchor.x, anchor.y);\r\n        }\r\n    }\r\n\r\n    protected menuPath(): MenuPath {\r\n        return EDITOR_CONTEXT_MENU;\r\n    }\r\n\r\n}\r\n"]}
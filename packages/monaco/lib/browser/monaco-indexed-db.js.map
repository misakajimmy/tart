{"version":3,"sources":["browser/monaco-indexed-db.ts"],"names":[],"mappings":"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","file":"../../src/browser/monaco-indexed-db.js","sourcesContent":["import * as idb from 'idb';\r\nimport {Disposable, DisposableCollection} from '@tart/core/lib/common';\r\nimport {BuiltinThemeProvider, Theme, ThemeService, ThemeServiceSymbol} from '@tart/core/lib/browser/theming';\r\n\r\ntype ThemeMix = import('./textmate/monaco-theme-registry').ThemeMix;\r\n\r\n// type ThemeMix = import('./textmate/monaco-theme-registry').ThemeMix;\r\n\r\nlet _monacoDB: Promise<idb.IDBPDatabase> | undefined;\r\nif ('indexedDB' in window) {\r\n    _monacoDB = idb.openDB('wm-monaco', 1, {\r\n        upgrade: db => {\r\n            if (!db.objectStoreNames.contains('themes')) {\r\n                db.createObjectStore('themes', {keyPath: 'id'});\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\nexport const monacoDB = _monacoDB;\r\n\r\nexport interface MonacoThemeState {\r\n    id: string,\r\n    label: string,\r\n    description?: string,\r\n    uiTheme: monaco.editor.BuiltinTheme,\r\n    data: ThemeMix\r\n}\r\n\r\nexport namespace MonacoThemeState {\r\n    export function is(state: Object | undefined): state is MonacoThemeState {\r\n        return !!state && typeof state === 'object' && 'id' in state && 'label' in state && 'uiTheme' in state && 'data' in state;\r\n    }\r\n}\r\n\r\nexport async function getThemes(): Promise<MonacoThemeState[]> {\r\n    if (!monacoDB) {\r\n        return [];\r\n    }\r\n    const db = await monacoDB;\r\n    const result = await db.transaction('themes', 'readonly').objectStore('themes').getAll();\r\n    return result.filter(MonacoThemeState.is);\r\n}\r\n\r\nexport function putTheme(state: MonacoThemeState): Disposable {\r\n    const toDispose = new DisposableCollection(Disposable.create(() => { /* mark as not disposed */\r\n    }));\r\n    doPutTheme(state, toDispose);\r\n    return toDispose;\r\n}\r\n\r\nasync function doPutTheme(state: MonacoThemeState, toDispose: DisposableCollection): Promise<void> {\r\n    if (!monacoDB) {\r\n        return;\r\n    }\r\n    const db = await monacoDB;\r\n    if (toDispose.disposed) {\r\n        return;\r\n    }\r\n    const id = state.id;\r\n    await db.transaction('themes', 'readwrite').objectStore('themes').put(state);\r\n    if (toDispose.disposed) {\r\n        await deleteTheme(id);\r\n        return;\r\n    }\r\n    toDispose.push(Disposable.create(() => deleteTheme(id)));\r\n}\r\n\r\nexport async function deleteTheme(id: string): Promise<void> {\r\n    if (!monacoDB) {\r\n        return;\r\n    }\r\n    const db = await monacoDB;\r\n    await db.transaction('themes', 'readwrite').objectStore('themes').delete(id);\r\n}\r\n\r\nexport function stateToTheme(state: MonacoThemeState): Theme {\r\n    const {id, label, description, uiTheme, data} = state;\r\n    const type = uiTheme === 'vs' ? 'light' : uiTheme === 'vs-dark' ? 'dark' : 'hc';\r\n    const builtInTheme = uiTheme === 'vs' ? BuiltinThemeProvider.lightCss : BuiltinThemeProvider.darkCss;\r\n    return {\r\n        type,\r\n        id,\r\n        label,\r\n        description,\r\n        editorTheme: data.name!,\r\n        activate(): void {\r\n            builtInTheme.use();\r\n        },\r\n        deactivate(): void {\r\n            builtInTheme.unuse();\r\n        }\r\n    };\r\n}\r\n\r\nasync function getThemeFromDB(id: string): Promise<Theme | undefined> {\r\n    const matchingState = (await getThemes()).find(theme => theme.id === id);\r\n    return matchingState && stateToTheme(matchingState);\r\n}\r\n\r\nexport class ThemeServiceWithDB extends ThemeService {\r\n    static get(): ThemeService {\r\n        const global = window as any; // eslint-disable-line @typescript-eslint/no-explicit-any\r\n        if (!global[ThemeServiceSymbol]) {\r\n            const themeService = new ThemeServiceWithDB();\r\n            themeService.register(...BuiltinThemeProvider.themes);\r\n            themeService.startupTheme();\r\n            global[ThemeServiceSymbol] = themeService;\r\n        }\r\n        return global[ThemeServiceSymbol];\r\n    }\r\n\r\n    loadUserTheme(): void {\r\n        this.loadUserThemeWithDB();\r\n    }\r\n\r\n    protected async loadUserThemeWithDB(): Promise<void> {\r\n        const themeId = window.localStorage.getItem('theme') || this.defaultTheme.id;\r\n        const theme = this.themes[themeId] ?? await getThemeFromDB(themeId) ?? this.defaultTheme;\r\n        this.setCurrentTheme(theme.id);\r\n    }\r\n}\r\n\r\nThemeService.get = ThemeServiceWithDB.get;\r\n"]}
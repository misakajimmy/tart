{"version":3,"sources":["browser/monaco-command-service.ts"],"names":[],"mappings":"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","file":"../../src/browser/monaco-command-service.js","sourcesContent":["import {inject, injectable} from 'inversify';\r\nimport {CommandRegistry} from '@tart/core/lib/common/command';\r\nimport {Disposable, DisposableCollection, Emitter} from '@tart/core/lib/common';\r\nimport ICommandEvent = monaco.commands.ICommandEvent;\r\nimport ICommandService = monaco.commands.ICommandService;\r\n\r\nexport const MonacoCommandServiceFactory = Symbol('MonacoCommandServiceFactory');\r\n\r\nexport interface MonacoCommandServiceFactory {\r\n    (): MonacoCommandService;\r\n}\r\n\r\n@injectable()\r\nexport class MonacoCommandService implements ICommandService, Disposable {\r\n\r\n    protected readonly onWillExecuteCommandEmitter = new Emitter<ICommandEvent>();\r\n    protected readonly onDidExecuteCommandEmitter = new Emitter<ICommandEvent>();\r\n    protected readonly toDispose = new DisposableCollection(\r\n        this.onWillExecuteCommandEmitter,\r\n        this.onDidExecuteCommandEmitter\r\n    );\r\n\r\n    protected delegate: monaco.services.StandaloneCommandService | undefined;\r\n    protected readonly delegateListeners = new DisposableCollection();\r\n\r\n    constructor(\r\n        @inject(CommandRegistry) protected readonly commandRegistry: CommandRegistry\r\n    ) {\r\n        this.toDispose.push(this.commandRegistry.onWillExecuteCommand(e => this.onWillExecuteCommandEmitter.fire(e)));\r\n        this.toDispose.push(this.commandRegistry.onDidExecuteCommand(e => this.onDidExecuteCommandEmitter.fire(e)));\r\n    }\r\n\r\n    get onWillExecuteCommand(): monaco.IEvent<ICommandEvent> {\r\n        return this.onWillExecuteCommandEmitter.event;\r\n    }\r\n\r\n    get onDidExecuteCommand(): monaco.IEvent<ICommandEvent> {\r\n        return this.onDidExecuteCommandEmitter.event;\r\n    }\r\n\r\n    dispose(): void {\r\n        this.toDispose.dispose();\r\n    }\r\n\r\n    setDelegate(delegate: monaco.services.StandaloneCommandService | undefined): void {\r\n        if (this.toDispose.disposed) {\r\n            return;\r\n        }\r\n        this.delegateListeners.dispose();\r\n        this.toDispose.push(this.delegateListeners);\r\n        this.delegate = delegate;\r\n        if (this.delegate) {\r\n            this.delegateListeners.push(this.delegate['_onWillExecuteCommand'].event(event =>\r\n                this.onWillExecuteCommandEmitter.fire(event)\r\n            ));\r\n            this.delegateListeners.push(this.delegate['_onDidExecuteCommand'].event(event =>\r\n                this.onDidExecuteCommandEmitter.fire(event)\r\n            ));\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    async executeCommand(commandId: any, ...args: any[]): Promise<any> {\r\n        try {\r\n            await this.commandRegistry.executeCommand(commandId, ...args);\r\n        } catch (e) {\r\n            if (e.code === 'NO_ACTIVE_HANDLER') {\r\n                return this.executeMonacoCommand(commandId, ...args);\r\n            }\r\n            throw e;\r\n        }\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    async executeMonacoCommand(commandId: any, ...args: any[]): Promise<any> {\r\n        if (this.delegate) {\r\n            return this.delegate.executeCommand(commandId, ...args);\r\n        }\r\n        throw new Error(`command '${commandId}' not found`);\r\n    }\r\n\r\n}\r\n"]}
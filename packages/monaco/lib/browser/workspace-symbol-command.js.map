{"version":3,"sources":["browser/workspace-symbol-command.ts"],"names":[],"mappings":"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","file":"../../src/browser/workspace-symbol-command.js","sourcesContent":["import {inject, injectable} from 'inversify';\r\nimport {\r\n    KeybindingContribution,\r\n    KeybindingRegistry,\r\n    LabelProvider,\r\n    OpenerService,\r\n    QuickAccessContribution,\r\n    QuickAccessProvider,\r\n    QuickAccessRegistry\r\n} from '@tart/core';\r\nimport {\r\n    CancellationToken,\r\n    Command,\r\n    CommandContribution,\r\n    CommandHandler,\r\n    CommandRegistry,\r\n    MenuContribution,\r\n    MenuModelRegistry,\r\n    SelectionService\r\n} from '@tart/core/lib/common';\r\nimport {\r\n    findMatches,\r\n    QuickInputService,\r\n    QuickPickItem,\r\n    QuickPicks\r\n} from '@tart/core/lib/common/quick-pick-service';\r\nimport {nls} from '@tart/core/lib/common/nls';\r\nimport {WorkspaceSymbolParams} from 'vscode-languageserver-protocol';\r\nimport URI from '@tart/core/lib/common/uri';\r\nimport {Position, Range, SymbolInformation} from 'vscode-languageserver-types';\r\nimport {MonacoLanguages, WorkspaceSymbolProvider} from './monaco-languages';\r\n\r\n@injectable()\r\nexport class WorkspaceSymbolCommand implements QuickAccessProvider, CommandContribution, KeybindingContribution, MenuContribution, CommandHandler, QuickAccessContribution {\r\n    public static readonly PREFIX = '#';\r\n    @inject(MonacoLanguages) protected readonly languages: MonacoLanguages;\r\n    @inject(OpenerService) protected readonly openerService: OpenerService;\r\n    @inject(QuickInputService) protected quickInputService: QuickInputService;\r\n    @inject(QuickAccessRegistry) protected quickAccessRegistry: QuickAccessRegistry;\r\n    @inject(SelectionService) protected selectionService: SelectionService;\r\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\r\n    private command = Command.toDefaultLocalizedCommand({\r\n        id: 'languages.json.workspace.symbol',\r\n        label: 'Go to Symbol in Workspace...'\r\n    });\r\n\r\n    isEnabled(): boolean {\r\n        return this.languages.workspaceSymbolProviders !== undefined;\r\n    }\r\n\r\n    execute(): void {\r\n        this.quickInputService.open(WorkspaceSymbolCommand.PREFIX);\r\n    }\r\n\r\n    registerCommands(commands: CommandRegistry): void {\r\n        commands.registerCommand(this.command, this);\r\n    }\r\n\r\n    registerMenus(menus: MenuModelRegistry): void {\r\n        // menus.registerMenuAction(EditorMainMenu.WORKSPACE_GROUP, {\r\n        //     commandId: this.command.id,\r\n        //     order: '2'\r\n        // });\r\n    }\r\n\r\n    registerKeybindings(keybindings: KeybindingRegistry): void {\r\n        keybindings.registerKeybinding({\r\n            command: this.command.id,\r\n            keybinding: this.isElectron() ? 'ctrlcmd+t' : 'ctrlcmd+o',\r\n        });\r\n    }\r\n\r\n    registerQuickAccessProvider(): void {\r\n        this.quickAccessRegistry.registerQuickAccessProvider({\r\n            getInstance: () => this,\r\n            prefix: WorkspaceSymbolCommand.PREFIX,\r\n            placeholder: '',\r\n            helpEntries: [{description: nls.localizeByDefault('Go to Symbol in Workspace'), needsEditor: false}]\r\n        });\r\n    }\r\n\r\n    async getPicks(filter: string, token: CancellationToken): Promise<QuickPicks> {\r\n        const items: QuickPicks = [];\r\n        if (this.languages.workspaceSymbolProviders) {\r\n            const param: WorkspaceSymbolParams = {\r\n                query: filter\r\n            };\r\n\r\n            const workspaceProviderPromises = [];\r\n            for (const provider of this.languages.workspaceSymbolProviders) {\r\n                workspaceProviderPromises.push((async () => {\r\n                    const symbols = await provider.provideWorkspaceSymbols(param, token);\r\n                    if (symbols && !token.isCancellationRequested) {\r\n                        for (const symbol of symbols) {\r\n                            items.push(this.createItem(symbol, provider, filter, token));\r\n                        }\r\n                    }\r\n                    return symbols;\r\n                })());\r\n            }\r\n            await Promise.all(workspaceProviderPromises.map(p => p.then(sym => sym, _ => undefined)))\r\n                .then(symbols => {\r\n                    const filteredSymbols = symbols.filter(el => el && el.length !== 0);\r\n                    if (filteredSymbols.length === 0) {\r\n                        items.push({\r\n                            label: filter.length === 0\r\n                                ? nls.localize('wm/monaco/typeToSearchForSymbols', 'Type to search for symbols')\r\n                                : nls.localize('wm/monaco/noSymbolsMatching', 'No symbols matching'),\r\n                        });\r\n                    }\r\n                }).catch();\r\n        }\r\n        return items;\r\n    }\r\n\r\n    protected createItem(sym: SymbolInformation, provider: WorkspaceSymbolProvider, filter: string, token: CancellationToken): QuickPickItem {\r\n        const uri = new URI(sym.location.uri);\r\n        const iconClasses = this.toCssClassName(sym.kind);\r\n        let parent = sym.containerName;\r\n        if (parent) {\r\n            parent += ' - ';\r\n        }\r\n        const description = (parent || '') + this.labelProvider.getName(uri);\r\n        return ({\r\n            label: sym.name,\r\n            description,\r\n            ariaLabel: uri.toString(),\r\n            iconClasses,\r\n            highlights: {\r\n                label: findMatches(sym.name, filter),\r\n                description: findMatches(description, filter)\r\n            },\r\n            execute: () => {\r\n                if (provider.resolveWorkspaceSymbol) {\r\n                    provider.resolveWorkspaceSymbol(sym, token).then(resolvedSymbol => {\r\n                        if (resolvedSymbol) {\r\n                            this.openURL(uri, resolvedSymbol.location.range.start, resolvedSymbol.location.range.end);\r\n                        } else {\r\n                            // the symbol didn't resolve -> use given symbol\r\n                            this.openURL(uri, sym.location.range.start, sym.location.range.end);\r\n                        }\r\n                    });\r\n                } else {\r\n                    // resolveWorkspaceSymbol wasn't specified\r\n                    this.openURL(uri, sym.location.range.start, sym.location.range.end);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    protected toCssClassName(symbolKind: SymbolKind, inline?: boolean): string[] | undefined {\r\n        const kind = SymbolKind[symbolKind];\r\n        if (!kind) {\r\n            return undefined;\r\n        }\r\n        return [`codicon ${inline ? 'inline' : 'block'} codicon-symbol-${kind.toLowerCase() || 'property'}`];\r\n    }\r\n\r\n    private isElectron(): boolean {\r\n        return false;\r\n    }\r\n\r\n    private openURL(uri: URI, start: Position, end: Position): void {\r\n        this.openerService.getOpener(uri).then(opener => opener.open(uri, {\r\n            selection: Range.create(start, end)\r\n        }));\r\n    }\r\n}\r\n\r\nenum SymbolKind {\r\n    File = 1,\r\n    Module = 2,\r\n    Namespace = 3,\r\n    Package = 4,\r\n    Class = 5,\r\n    Method = 6,\r\n    Property = 7,\r\n    Field = 8,\r\n    Constructor = 9,\r\n    Enum = 10,\r\n    Interface = 11,\r\n    Function = 12,\r\n    Variable = 13,\r\n    Constant = 14,\r\n    String = 15,\r\n    Number = 16,\r\n    Boolean = 17,\r\n    Array = 18,\r\n    Object = 19,\r\n    Key = 20,\r\n    Null = 21,\r\n    EnumMember = 22,\r\n    Struct = 23,\r\n    Event = 24,\r\n    Operator = 25,\r\n    TypeParameter = 26\r\n}\r\n"]}
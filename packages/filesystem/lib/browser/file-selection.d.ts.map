{"version":3,"sources":["browser/file-selection.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,QAAQ,EAAC,MAAM,iBAAiB,CAAC;AACzC,OAAO,EAAC,uBAAuB,EAAE,gBAAgB,EAAC,MAAM,uBAAuB,CAAC;AAEhF,MAAM,WAAW,aAAa;IAC1B,QAAQ,EAAE,QAAQ,CAAA;CACrB;AAED,yBAAiB,aAAa,CAAC;IAC3B,SAAgB,EAAE,CAAC,GAAG,EAAE,MAAM,GAAG,SAAS,GAAG,GAAG,IAAI,aAAa,CAEhE;IAED,MAAa,cAAe,SAAQ,uBAAuB,CAAC,aAAa,CAAC;QAGlE,SAAS,CAAC,QAAQ,CAAC,gBAAgB,EAAE,gBAAgB;QACrD,SAAS,CAAC,QAAQ,CAAC,OAAO,EAAE,uBAAuB,CAAC,OAAO,CAAC,aAAa,CAAC;oBADvD,gBAAgB,EAAE,gBAAgB,EAClC,OAAO,EAAE,uBAAuB,CAAC,OAAO,CAAC,aAAa,CAAC;KASjF;CAEJ","file":"../../src/browser/file-selection.d.ts","sourcesContent":["import {FileStat} from '../common/files';\r\nimport {SelectionCommandHandler, SelectionService} from '@tart/core/lib/common';\r\n\r\nexport interface FileSelection {\r\n    fileStat: FileStat\r\n}\r\n\r\nexport namespace FileSelection {\r\n    export function is(arg: Object | undefined): arg is FileSelection {\r\n        return typeof arg === 'object' && ('fileStat' in arg) && FileStat.is(arg['fileStat']);\r\n    }\r\n\r\n    export class CommandHandler extends SelectionCommandHandler<FileSelection> {\r\n\r\n        constructor(\r\n            protected readonly selectionService: SelectionService,\r\n            protected readonly options: SelectionCommandHandler.Options<FileSelection>\r\n        ) {\r\n            super(\r\n                selectionService,\r\n                arg => FileSelection.is(arg) ? arg : undefined,\r\n                options\r\n            );\r\n        }\r\n\r\n    }\r\n\r\n}\r\n"]}
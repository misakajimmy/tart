{"version":3,"sources":["browser/file-tree/filesystem-utils.ts"],"names":[],"mappings":"AAAA,OAAO,GAAG,MAAM,2BAA2B,CAAC;AAC5C,OAAO,EAAC,QAAQ,EAAC,MAAM,oBAAoB,CAAC;AAE5C,yBAAiB,eAAe,CAAC;IAE7B;;;;;;;OAOG;IACH,SAAgB,yBAAyB,CAAC,SAAS,EAAE,GAAG,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,GAAG,GAAE,MAAW,GAAG,GAAG,CAU/G;CACJ","file":"../../../src/browser/file-tree/filesystem-utils.d.ts","sourcesContent":["import URI from '@tart/core/lib/common/uri';\r\nimport {FileStat} from '../../common/files';\r\n\r\nexport namespace FileSystemUtils {\r\n\r\n    /**\r\n     * Generate unique URI for a given parent which does not collide\r\n     *\r\n     * @param parentUri the `URI` of the parent\r\n     * @param parent the `FileStat` of the parent\r\n     * @param name the resource name\r\n     * @param ext the resource extension\r\n     */\r\n    export function generateUniqueResourceURI(parentUri: URI, parent: FileStat, name: string, ext: string = ''): URI {\r\n        const children = !parent.children ? [] : parent.children!.map(child => child.resource);\r\n\r\n        let index = 1;\r\n        let base = name + ext;\r\n        while (children.some(child => child.path.base === base)) {\r\n            index = index + 1;\r\n            base = name + '_' + index + ext;\r\n        }\r\n        return parentUri.resolve(base);\r\n    }\r\n}\r\n"]}
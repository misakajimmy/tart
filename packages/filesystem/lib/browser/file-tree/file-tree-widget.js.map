{"version":3,"sources":["browser/file-tree/file-tree-widget.tsx"],"names":[],"mappings":"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","file":"../../../src/browser/file-tree/file-tree-widget.js","sourcesContent":["import {inject, injectable} from 'inversify';\r\nimport React from 'react';\r\nimport {\r\n    CompositeTreeNode,\r\n    ContextMenuRenderer,\r\n    NodeProps,\r\n    TreeNode,\r\n    TreeProps,\r\n    TreeViewWelcomeWidget\r\n} from '@tart/core';\r\nimport {Disposable, DisposableCollection, isCancelled, UriSelection} from '@tart/core/lib/common';\r\nimport {IconThemeService} from '@tart/core/lib/browser/icon-theme-service';\r\nimport {FileTreeModel} from './file-tree-model';\r\nimport {DirNode, FileStatNode, FileStatNodeData} from './file-tree';\r\nimport {FileStat, FileType} from '../../common/files';\r\nimport URI from '@tart/core/lib/common/uri';\r\nimport {FileUploadService} from '../file-upload-service';\r\n\r\nexport const FILE_TREE_CLASS = 'tart-FileTree';\r\nexport const FILE_STAT_NODE_CLASS = 'tart-FileStatNode';\r\nexport const DIR_NODE_CLASS = 'tart-DirNode';\r\nexport const FILE_STAT_ICON_CLASS = 'tart-FileStatIcon';\r\n\r\n\r\n@injectable()\r\nexport class FileTreeWidget extends TreeViewWelcomeWidget {\r\n\r\n    protected readonly toCancelNodeExpansion = new DisposableCollection();\r\n\r\n    @inject(IconThemeService)\r\n    protected readonly iconThemeService: IconThemeService;\r\n\r\n    @inject(FileUploadService)\r\n    protected readonly uploadService: FileUploadService;\r\n\r\n    constructor(\r\n        @inject(TreeProps) readonly props: TreeProps,\r\n        @inject(FileTreeModel) readonly model: FileTreeModel,\r\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer\r\n    ) {\r\n        super(props, model, contextMenuRenderer);\r\n        this.addClass(FILE_TREE_CLASS);\r\n        this.toDispose.push(this.toCancelNodeExpansion);\r\n    }\r\n\r\n    protected get hidesExplorerArrows(): boolean {\r\n        const theme = this.iconThemeService.getDefinition(this.iconThemeService.current);\r\n        return !!theme && !!theme.hidesExplorerArrows;\r\n    }\r\n\r\n    protected createNodeClassNames(node: TreeNode, props: NodeProps): string[] {\r\n        const classNames = super.createNodeClassNames(node, props);\r\n        if (FileStatNode.is(node)) {\r\n            classNames.push(FILE_STAT_NODE_CLASS);\r\n        }\r\n        if (DirNode.is(node)) {\r\n            classNames.push(DIR_NODE_CLASS);\r\n        }\r\n        return classNames;\r\n    }\r\n\r\n    protected renderIcon(node: TreeNode, props: NodeProps): React.ReactNode {\r\n        const icon = this.toNodeIcon(node);\r\n        if (icon) {\r\n            return <div className={icon + ' file-icon'}></div>;\r\n        }\r\n        // eslint-disable-next-line no-null/no-null\r\n        return null;\r\n    }\r\n\r\n    protected createContainerAttributes(): React.HTMLAttributes<HTMLElement> {\r\n        const attrs = super.createContainerAttributes();\r\n        return {\r\n            ...attrs,\r\n            onDragEnter: event => this.handleDragEnterEvent(this.model.root, event),\r\n            onDragOver: event => this.handleDragOverEvent(this.model.root, event),\r\n            onDragLeave: event => this.handleDragLeaveEvent(this.model.root, event),\r\n            onDrop: event => this.handleDropEvent(this.model.root, event)\r\n        };\r\n    }\r\n\r\n    protected createNodeAttributes(node: TreeNode, props: NodeProps): React.Attributes & React.HTMLAttributes<HTMLElement> {\r\n        const elementAttrs = super.createNodeAttributes(node, props);\r\n        return {\r\n            ...elementAttrs,\r\n            draggable: FileStatNode.is(node),\r\n            onDragStart: event => this.handleDragStartEvent(node, event),\r\n            onDragEnter: event => this.handleDragEnterEvent(node, event),\r\n            onDragOver: event => this.handleDragOverEvent(node, event),\r\n            onDragLeave: event => this.handleDragLeaveEvent(node, event),\r\n            onDrop: event => this.handleDropEvent(node, event),\r\n            title: this.getNodeTooltip(node)\r\n        };\r\n    }\r\n\r\n    protected getNodeTooltip(node: TreeNode): string | undefined {\r\n        const uri = UriSelection.getUri(node);\r\n        return uri ? uri.path.toString() : undefined;\r\n    }\r\n\r\n    protected handleDragStartEvent(node: TreeNode, event: React.DragEvent): void {\r\n        event.stopPropagation();\r\n        let selectedNodes;\r\n        if (this.model.selectedNodes.find(selected => TreeNode.equals(selected, node))) {\r\n            selectedNodes = [...this.model.selectedNodes];\r\n        } else {\r\n            selectedNodes = [node];\r\n        }\r\n        this.setSelectedTreeNodesAsData(event.dataTransfer, node, selectedNodes);\r\n        if (event.dataTransfer) {\r\n            let label: string;\r\n            if (selectedNodes.length === 1) {\r\n                label = this.toNodeName(node);\r\n            } else {\r\n                label = String(selectedNodes.length);\r\n            }\r\n            const dragImage = document.createElement('div');\r\n            dragImage.className = 'tart-file-tree-drag-image';\r\n            dragImage.textContent = label;\r\n            document.body.appendChild(dragImage);\r\n            event.dataTransfer.setDragImage(dragImage, -10, -10);\r\n            setTimeout(() => document.body.removeChild(dragImage), 0);\r\n        }\r\n    }\r\n\r\n    protected handleDragEnterEvent(node: TreeNode | undefined, event: React.DragEvent): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.toCancelNodeExpansion.dispose();\r\n        const containing = DirNode.getContainingDir(node);\r\n        if (!!containing && !containing.selected) {\r\n            this.model.selectNode(containing);\r\n        }\r\n    }\r\n\r\n    protected handleDragOverEvent(node: TreeNode | undefined, event: React.DragEvent): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        if (!this.toCancelNodeExpansion.disposed) {\r\n            return;\r\n        }\r\n        const timer = setTimeout(() => {\r\n            const containing = DirNode.getContainingDir(node);\r\n            if (!!containing && !containing.expanded) {\r\n                this.model.expandNode(containing);\r\n            }\r\n        }, 500);\r\n        this.toCancelNodeExpansion.push(Disposable.create(() => clearTimeout(timer)));\r\n    }\r\n\r\n    protected handleDragLeaveEvent(node: TreeNode | undefined, event: React.DragEvent): void {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.toCancelNodeExpansion.dispose();\r\n    }\r\n\r\n    protected async handleDropEvent(node: TreeNode | undefined, event: React.DragEvent): Promise<void> {\r\n        try {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            event.dataTransfer.dropEffect = 'copy'; // Explicitly show this is a copy.\r\n            const containing = this.getDropTargetDirNode(node);\r\n            if (containing) {\r\n                const resources = this.getSelectedTreeNodesFromData(event.dataTransfer);\r\n                if (resources.length > 0) {\r\n                    for (const treeNode of resources) {\r\n                        await this.model.move(treeNode, containing);\r\n                    }\r\n                } else {\r\n                    await this.uploadService.upload(containing.uri, {source: event.dataTransfer});\r\n                }\r\n            }\r\n        } catch (e) {\r\n            if (!isCancelled(e)) {\r\n                console.error(e);\r\n            }\r\n        }\r\n    }\r\n\r\n    protected getDropTargetDirNode(node: TreeNode | undefined): DirNode | undefined {\r\n        if (CompositeTreeNode.is(node) && node.id === 'WorkspaceNodeId') {\r\n            if (node.children.length === 1) {\r\n                return DirNode.getContainingDir(node.children[0]);\r\n            } else if (node.children.length > 1) {\r\n                // move file to the last root folder in multi-root scenario\r\n                return DirNode.getContainingDir(node.children[node.children.length - 1]);\r\n            }\r\n        }\r\n        return DirNode.getContainingDir(node);\r\n    }\r\n\r\n    protected setTreeNodeAsData(data: DataTransfer, node: TreeNode): void {\r\n        data.setData('tree-node', node.id);\r\n    }\r\n\r\n    protected setSelectedTreeNodesAsData(data: DataTransfer, sourceNode: TreeNode, relatedNodes: TreeNode[]): void {\r\n        this.setTreeNodeAsData(data, sourceNode);\r\n        data.setData('selected-tree-nodes', JSON.stringify(relatedNodes.map(node => node.id)));\r\n    }\r\n\r\n    protected getTreeNodeFromData(data: DataTransfer): TreeNode | undefined {\r\n        const id = data.getData('tree-node');\r\n        return this.model.getNode(id);\r\n    }\r\n\r\n    protected getSelectedTreeNodesFromData(data: DataTransfer): TreeNode[] {\r\n        const resources = data.getData('selected-tree-nodes');\r\n        if (!resources) {\r\n            return [];\r\n        }\r\n        const ids: string[] = JSON.parse(resources);\r\n        return ids.map(id => this.model.getNode(id)).filter(node => node !== undefined) as TreeNode[];\r\n    }\r\n\r\n    protected renderExpansionToggle(node: TreeNode, props: NodeProps): React.ReactNode {\r\n        if (this.hidesExplorerArrows) {\r\n            // eslint-disable-next-line no-null/no-null\r\n            return null;\r\n        }\r\n        return super.renderExpansionToggle(node, props);\r\n    }\r\n\r\n    protected getPaddingLeft(node: TreeNode, props: NodeProps): number {\r\n        if (this.hidesExplorerArrows) {\r\n            // additional left padding instead of top-level expansion toggle\r\n            return super.getPaddingLeft(node, props) + this.props.leftPadding;\r\n        }\r\n        return super.getPaddingLeft(node, props);\r\n    }\r\n\r\n    protected needsExpansionTogglePadding(node: TreeNode): boolean {\r\n        const theme = this.iconThemeService.getDefinition(this.iconThemeService.current);\r\n        if (theme && (theme.hidesExplorerArrows || (theme.hasFileIcons && !theme.hasFolderIcons))) {\r\n            return false;\r\n        }\r\n        return super.needsExpansionTogglePadding(node);\r\n    }\r\n\r\n    protected deflateForStorage(node: TreeNode): object {\r\n        const deflated = super.deflateForStorage(node);\r\n        if (FileStatNode.is(node) && FileStatNodeData.is(deflated)) {\r\n            deflated.uri = node.uri.toString();\r\n            delete deflated['fileStat'];\r\n            deflated.stat = FileStat.toStat(node.fileStat);\r\n        }\r\n        return deflated;\r\n    }\r\n\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    protected inflateFromStorage(node: any, parent?: TreeNode): TreeNode {\r\n        if (FileStatNodeData.is(node)) {\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            const fileStatNode: FileStatNode = node as any;\r\n            const resource = new URI(node.uri);\r\n            fileStatNode.uri = resource;\r\n            let stat: typeof node['stat'];\r\n            // in order to support deprecated FileStat\r\n            if (node.fileStat) {\r\n                stat = {\r\n                    type: node.fileStat.isDirectory ? FileType.Directory : FileType.File,\r\n                    mtime: node.fileStat.lastModification,\r\n                    size: node.fileStat.size\r\n                };\r\n                delete node['fileStat'];\r\n            } else if (node.stat) {\r\n                stat = node.stat;\r\n                delete node['stat'];\r\n            }\r\n            if (stat) {\r\n                fileStatNode.fileStat = FileStat.fromStat(resource, stat);\r\n            }\r\n        }\r\n        const inflated = super.inflateFromStorage(node, parent);\r\n        if (DirNode.is(inflated)) {\r\n            inflated.fileStat.children = [];\r\n            for (const child of inflated.children) {\r\n                if (FileStatNode.is(child)) {\r\n                    inflated.fileStat.children.push(child.fileStat);\r\n                }\r\n            }\r\n        }\r\n        return inflated;\r\n    }\r\n\r\n}\r\n"]}
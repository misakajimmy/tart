{"version":3,"sources":["browser/file-tree/file-tree.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAA4D,QAAQ,EAAW,MAAM,YAAY,CAAC;AACzG,OAAO,EAAC,cAAc,EAAwB,MAAM,uBAAuB,CAAC;AAG5E,OAAO,EAAC,kBAAkB,EAAgD,MAAM,oBAAoB,CAAC;AACrG,OAAO,EAAC,MAAM,EAAE,UAAU,EAAC,MAAM,WAAW,CAAC;AAE7C,OAAO,EAAC,WAAW,EAAC,MAAM,iBAAiB,CAAC;AAG5C,IAAa,QAAQ,GAArB,MAAa,QAAS,SAAQ,QAAQ;IAQlC,KAAK,CAAC,eAAe,CAAC,MAAyB;QAC3C,IAAI,YAAY,CAAC,EAAE,CAAC,MAAM,CAAC,EAAE;YACzB,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;YACpD,IAAI,QAAQ,EAAE;gBACV,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;aACzC;YACD,OAAO,EAAE,CAAC;SACb;QACD,OAAO,KAAK,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IAES,KAAK,CAAC,eAAe,CAAC,IAAkB;QAC9C,IAAI;YACA,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YAC1D,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,OAAO,QAAQ,CAAC;SACnB;QAAC,OAAO,CAAC,EAAE;YACR,IAAI,CAAC,CAAC,CAAC,YAAY,kBAAkB,IAAI,CAAC,CAAC,mBAAmB,+CAAuC,CAAC,EAAE;gBACpG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;aAC1C;YACD,OAAO,SAAS,CAAC;SACpB;IACL,CAAC;IAES,KAAK,CAAC,OAAO,CAAC,QAAkB,EAAE,MAAyB;QACjE,IAAI,CAAC,QAAQ,CAAC,QAAQ,EAAE;YACpB,OAAO,EAAE,CAAC;SACb;QACD,MAAM,MAAM,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,CAAC,KAAK,EAAC,KAAK,EAAC,EAAE,CACjE,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,MAAM,CAAC,CAC7B,CAAC,CAAC;QACH,OAAO,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;IACxC,CAAC;IAES,MAAM,CAAC,QAAkB,EAAE,MAAyB;QAC1D,MAAM,GAAG,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC9B,MAAM,EAAE,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;QACtC,MAAM,IAAI,GAAG,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;QAC9B,IAAI,QAAQ,CAAC,WAAW,EAAE;YACtB,IAAI,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,OAAO,IAAI,CAAC;aACf;YACD,OAAgB;gBACZ,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM;gBACzB,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,KAAK;gBACf,QAAQ,EAAE,EAAE;aACf,CAAC;SACL;QACD,IAAI,QAAQ,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YACnB,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;YACzB,OAAO,IAAI,CAAC;SACf;QACD,OAAiB;YACb,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE,MAAM;YACzB,QAAQ,EAAE,KAAK;SAClB,CAAC;IACN,CAAC;IAES,QAAQ,CAAC,GAAQ,EAAE,MAAyB;QAClD,OAAO,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;IAC/B,CAAC;CACJ,CAAA;AApEG;IADC,MAAM,CAAC,WAAW,CAAC;6CACwB;AAG5C;IADC,MAAM,CAAC,cAAc,CAAC;kDAC6B;AAN3C,QAAQ;IADpB,UAAU,EAAE;GACA,QAAQ,CAuEpB;SAvEY,QAAQ;AA4ErB,MAAM,KAAW,YAAY,CAW5B;AAXD,WAAiB,YAAY;IACzB,SAAgB,EAAE,CAAC,IAAwB;QACvC,OAAO,CAAC,CAAC,IAAI,IAAI,UAAU,IAAI,IAAI,CAAC;IACxC,CAAC;IAFe,eAAE,KAEjB,CAAA;IAED,SAAgB,MAAM,CAAC,IAA0B;QAC7C,IAAI,EAAE,CAAC,IAAI,CAAC,EAAE;YACV,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,QAAQ,EAAE,CAAC;SAC5C;QACD,OAAO,SAAS,CAAC;IACrB,CAAC;IALe,mBAAM,SAKrB,CAAA;AACL,CAAC,EAXgB,YAAY,KAAZ,YAAY,QAW5B;AAOD,MAAM,KAAW,gBAAgB,CAIhC;AAJD,WAAiB,gBAAgB;IAC7B,SAAgB,EAAE,CAAC,IAAwB;QACvC,OAAO,CAAC,CAAC,IAAI,IAAI,KAAK,IAAI,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,IAAI,MAAM,IAAI,IAAI,CAAC,CAAC;IAC7E,CAAC;IAFe,mBAAE,KAEjB,CAAA;AACL,CAAC,EAJgB,gBAAgB,KAAhB,gBAAgB,QAIhC;AAGD,MAAM,KAAW,QAAQ,CAIxB;AAJD,WAAiB,QAAQ;IACrB,SAAgB,EAAE,CAAC,IAAwB;QACvC,OAAO,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;IAC/D,CAAC;IAFe,WAAE,KAEjB,CAAA;AACL,CAAC,EAJgB,QAAQ,KAAR,QAAQ,QAIxB;AAGD,MAAM,KAAW,OAAO,CAgDvB;AAhDD,WAAiB,OAAO;IACpB,SAAgB,EAAE,CAAC,IAAwB;QACvC,OAAO,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,QAAQ,CAAC,WAAW,CAAC;IAC9D,CAAC;IAFe,UAAE,KAEjB,CAAA;IAED,SAAgB,OAAO,CAAC,IAAc,EAAE,KAAe;QACnD,OAAO,OAAO,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,IAAI,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;IACtE,CAAC;IAFe,eAAO,UAEtB,CAAA;IAED,SAAgB,UAAU,CAAC,IAAc,EAAE,KAAe;QACtD,IAAI,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,EAAE;YACvB,IAAI,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;gBACxB,OAAO,IAAI,CAAC,GAAG,CAAC,WAAW,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC;aACpE;YACD,OAAO,CAAC,CAAC;SACZ;QACD,IAAI,YAAY,CAAC,EAAE,CAAC,KAAK,CAAC,EAAE;YACxB,OAAO,CAAC,CAAC,CAAC;SACb;QACD,OAAO,CAAC,CAAC;IACb,CAAC;IAXe,kBAAU,aAWzB,CAAA;IAED,SAAgB,UAAU,CAAC,IAAc,EAAE,KAAe;QACtD,MAAM,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACnC,MAAM,CAAC,GAAG,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACpC,OAAO,CAAC,GAAG,CAAC,CAAC;IACjB,CAAC;IAJe,kBAAU,aAIzB,CAAA;IAED,SAAgB,UAAU,CAAC,QAAkB;QACzC,MAAM,GAAG,GAAG,QAAQ,CAAC,QAAQ,CAAC;QAC9B,MAAM,EAAE,GAAG,GAAG,CAAC,QAAQ,EAAE,CAAC;QAC1B,OAAO;YACH,EAAE,EAAE,GAAG,EAAE,QAAQ;YACjB,OAAO,EAAE,IAAI;YACb,MAAM,EAAE,SAAS;YACjB,QAAQ,EAAE,EAAE;YACZ,QAAQ,EAAE,IAAI;YACd,QAAQ,EAAE,KAAK;SAClB,CAAC;IACN,CAAC;IAXe,kBAAU,aAWzB,CAAA;IAED,SAAgB,gBAAgB,CAAC,IAA0B;QACvD,IAAI,UAAU,GAAG,IAAI,CAAC;QACtB,OAAO,CAAC,CAAC,UAAU,IAAI,CAAC,EAAE,CAAC,UAAU,CAAC,EAAE;YACpC,UAAU,GAAG,UAAU,CAAC,MAAM,CAAC;SAClC;QACD,OAAO,UAAqB,CAAC;IACjC,CAAC;IANe,wBAAgB,mBAM/B,CAAA;AACL,CAAC,EAhDgB,OAAO,KAAP,OAAO,QAgDvB","file":"../../../src/browser/file-tree/file-tree.js","sourcesContent":["import {CompositeTreeNode, ExpandableTreeNode, SelectableTreeNode, TreeImpl, TreeNode} from '@tart/core';\r\nimport {MessageService, Mutable, UriSelection} from '@tart/core/lib/common';\r\nimport {FileSelection} from '../file-selection';\r\nimport {FileStat as DeprecatedFileStat} from '../../common/filesystem';\r\nimport {FileOperationError, FileOperationResult, FileStat, FileType, Stat} from '../../common/files';\r\nimport {inject, injectable} from 'inversify';\r\nimport URI from '@tart/core/lib/common/uri';\r\nimport {FileService} from '../file-service';\r\n\r\n@injectable()\r\nexport class FileTree extends TreeImpl {\r\n\r\n    @inject(FileService)\r\n    protected readonly fileService: FileService;\r\n\r\n    @inject(MessageService)\r\n    protected readonly messagingService: MessageService;\r\n\r\n    async resolveChildren(parent: CompositeTreeNode): Promise<TreeNode[]> {\r\n        if (FileStatNode.is(parent)) {\r\n            const fileStat = await this.resolveFileStat(parent);\r\n            if (fileStat) {\r\n                return this.toNodes(fileStat, parent);\r\n            }\r\n            return [];\r\n        }\r\n        return super.resolveChildren(parent);\r\n    }\r\n\r\n    protected async resolveFileStat(node: FileStatNode): Promise<FileStat | undefined> {\r\n        try {\r\n            const fileStat = await this.fileService.resolve(node.uri);\r\n            node.fileStat = fileStat;\r\n            return fileStat;\r\n        } catch (e) {\r\n            if (!(e instanceof FileOperationError && e.fileOperationResult === FileOperationResult.FILE_NOT_FOUND)) {\r\n                this.messagingService.error(e.message);\r\n            }\r\n            return undefined;\r\n        }\r\n    }\r\n\r\n    protected async toNodes(fileStat: FileStat, parent: CompositeTreeNode): Promise<TreeNode[]> {\r\n        if (!fileStat.children) {\r\n            return [];\r\n        }\r\n        const result = await Promise.all(fileStat.children.map(async child =>\r\n            this.toNode(child, parent)\r\n        ));\r\n        return result.sort(DirNode.compare);\r\n    }\r\n\r\n    protected toNode(fileStat: FileStat, parent: CompositeTreeNode): FileNode | DirNode {\r\n        const uri = fileStat.resource;\r\n        const id = this.toNodeId(uri, parent);\r\n        const node = this.getNode(id);\r\n        if (fileStat.isDirectory) {\r\n            if (DirNode.is(node)) {\r\n                node.fileStat = fileStat;\r\n                return node;\r\n            }\r\n            return <DirNode>{\r\n                id, uri, fileStat, parent,\r\n                expanded: false,\r\n                selected: false,\r\n                children: []\r\n            };\r\n        }\r\n        if (FileNode.is(node)) {\r\n            node.fileStat = fileStat;\r\n            return node;\r\n        }\r\n        return <FileNode>{\r\n            id, uri, fileStat, parent,\r\n            selected: false\r\n        };\r\n    }\r\n\r\n    protected toNodeId(uri: URI, parent: CompositeTreeNode): string {\r\n        return uri.path.toString();\r\n    }\r\n}\r\n\r\nexport interface FileStatNode extends SelectableTreeNode, Mutable<UriSelection>, FileSelection {\r\n}\r\n\r\nexport namespace FileStatNode {\r\n    export function is(node: object | undefined): node is FileStatNode {\r\n        return !!node && 'fileStat' in node;\r\n    }\r\n\r\n    export function getUri(node: TreeNode | undefined): string | undefined {\r\n        if (is(node)) {\r\n            return node.fileStat.resource.toString();\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n\r\nexport type FileStatNodeData = Omit<FileStatNode, 'uri' | 'fileStat'> & {\r\n    uri: string\r\n    stat?: Stat | { type: FileType } & Partial<Stat>\r\n    fileStat?: DeprecatedFileStat\r\n};\r\nexport namespace FileStatNodeData {\r\n    export function is(node: object | undefined): node is FileStatNodeData {\r\n        return !!node && 'uri' in node && ('fileStat' in node || 'stat' in node);\r\n    }\r\n}\r\n\r\nexport type FileNode = FileStatNode;\r\nexport namespace FileNode {\r\n    export function is(node: Object | undefined): node is FileNode {\r\n        return FileStatNode.is(node) && !node.fileStat.isDirectory;\r\n    }\r\n}\r\n\r\nexport type DirNode = FileStatNode & ExpandableTreeNode;\r\nexport namespace DirNode {\r\n    export function is(node: Object | undefined): node is DirNode {\r\n        return FileStatNode.is(node) && node.fileStat.isDirectory;\r\n    }\r\n\r\n    export function compare(node: TreeNode, node2: TreeNode): number {\r\n        return DirNode.dirCompare(node, node2) || uriCompare(node, node2);\r\n    }\r\n\r\n    export function uriCompare(node: TreeNode, node2: TreeNode): number {\r\n        if (FileStatNode.is(node)) {\r\n            if (FileStatNode.is(node2)) {\r\n                return node.uri.displayName.localeCompare(node2.uri.displayName);\r\n            }\r\n            return 1;\r\n        }\r\n        if (FileStatNode.is(node2)) {\r\n            return -1;\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    export function dirCompare(node: TreeNode, node2: TreeNode): number {\r\n        const a = DirNode.is(node) ? 1 : 0;\r\n        const b = DirNode.is(node2) ? 1 : 0;\r\n        return b - a;\r\n    }\r\n\r\n    export function createRoot(fileStat: FileStat): DirNode {\r\n        const uri = fileStat.resource;\r\n        const id = uri.toString();\r\n        return {\r\n            id, uri, fileStat,\r\n            visible: true,\r\n            parent: undefined,\r\n            children: [],\r\n            expanded: true,\r\n            selected: false\r\n        };\r\n    }\r\n\r\n    export function getContainingDir(node: TreeNode | undefined): DirNode | undefined {\r\n        let containing = node;\r\n        while (!!containing && !is(containing)) {\r\n            containing = containing.parent;\r\n        }\r\n        return containing as DirNode;\r\n    }\r\n}\r\n"]}
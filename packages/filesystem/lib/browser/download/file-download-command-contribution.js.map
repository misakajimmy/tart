{"version":3,"sources":["browser/download/file-download-command-contribution.ts"],"names":[],"mappings":"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","file":"../../../src/browser/download/file-download-command-contribution.js","sourcesContent":["import {inject, injectable} from 'inversify';\r\nimport {\r\n    Command,\r\n    CommandContribution,\r\n    CommandRegistry,\r\n    SelectionService,\r\n    UriAwareCommandHandler\r\n} from '@tart/core/lib/common';\r\nimport {CommonCommands} from '@tart/core';\r\nimport URI from '@tart/core/lib/common/uri';\r\nimport {FileService} from '../file-service';\r\nimport FileSaver from 'file-saver';\r\nimport JSZip from 'jszip';\r\nimport {nls} from \"@tart/core/lib/common/nls\";\r\n\r\n@injectable()\r\nexport class FileDownloadCommandContribution implements CommandContribution {\r\n\r\n    @inject(FileService)\r\n    protected readonly fileService: FileService;\r\n\r\n    @inject(SelectionService)\r\n    protected readonly selectionService: SelectionService;\r\n\r\n    registerCommands(registry: CommandRegistry): void {\r\n        registry.registerCommand(\r\n            FileDownloadCommands.DOWNLOAD,\r\n            UriAwareCommandHandler.MultiSelect(this.selectionService, {\r\n                execute: uris => this.executeDownload(uris),\r\n                isEnabled: uris => this.isDownloadEnabled(uris),\r\n                isVisible: uris => this.isDownloadVisible(uris),\r\n            })\r\n        );\r\n    }\r\n\r\n    protected async executeDownload(uris: URI[], options?: { copyLink?: boolean }): Promise<void> {\r\n        const downloadFile = async (uri: URI) => {\r\n            this.fileService.readFile(uri).then((data) => {\r\n                const blob = new Blob([data.value.buffer.buffer]);\r\n                FileSaver.saveAs(blob, data.name);\r\n            });\r\n        }\r\n        const downloadFolder = async (uri: URI, zip: JSZip) => {\r\n            const res = await this.fileService.resolve(uri);\r\n            if (res.isFile === true) {\r\n                console.log(res);\r\n                const data = await this.fileService.read(uri);\r\n                zip.file(res.name, data.value);\r\n            } else {\r\n                const folder = zip.folder(res.name);\r\n                for (const child of res.children) {\r\n                    await downloadFolder(child.resource, folder);\r\n                }\r\n            }\r\n        }\r\n        const download = async (uri: URI) => {\r\n            const res = await this.fileService.resolve(uri);\r\n            if (res.isFile === true) {\r\n                await downloadFile(uri);\r\n            } else {\r\n                const zip = new JSZip();\r\n                await downloadFolder(uri, zip);\r\n                console.log('download finish');\r\n                zip.generateAsync({type: \"blob\"}).then((content) => {\r\n                    // see FileSaver.js\r\n                    FileSaver.saveAs(content, \"data.zip\");\r\n                });\r\n            }\r\n        }\r\n\r\n        uris.map(uri => {\r\n            download(uri);\r\n        });\r\n    }\r\n\r\n    protected isDownloadEnabled(uris: URI[]): boolean {\r\n        return uris.length > 0 && uris.every(u => u.scheme === 'file');\r\n    }\r\n\r\n    protected isDownloadVisible(uris: URI[]): boolean {\r\n        return this.isDownloadEnabled(uris);\r\n    }\r\n}\r\n\r\nexport namespace FileDownloadCommands {\r\n    export const DOWNLOAD = Command.toDefaultLocalizedCommand({\r\n        id: 'file.download',\r\n        category: CommonCommands.FILE_CATEGORY,\r\n        label: nls.localize('Download','下载')\r\n    });\r\n\r\n    export const COPY_DOWNLOAD_LINK = Command.toLocalizedCommand({\r\n        id: 'file.copyDownloadLink',\r\n        category: CommonCommands.FILE_CATEGORY,\r\n        label: 'Copy Download Link'\r\n    }, 'tart/filesystem/copyDownloadLink', CommonCommands.FILE_CATEGORY_KEY);\r\n\r\n}\r\n"]}
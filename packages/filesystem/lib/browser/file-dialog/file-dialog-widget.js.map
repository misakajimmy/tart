{"version":3,"sources":["browser/file-dialog/file-dialog-widget.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAC,MAAM,EAAE,UAAU,EAAC,MAAM,WAAW,CAAC;AAC7C,OAAO,EAAC,YAAY,EAAE,cAAc,EAAC,MAAM,cAAc,CAAC;AAC1D,OAAO,EAAC,WAAW,EAAE,cAAc,EAAE,SAAS,EAAC,MAAM,wBAAwB,CAAC;AAC9E,OAAO,EAAC,eAAe,EAAC,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAC,mBAAmB,EAAsB,MAAM,YAAY,CAAC;AAEpE,MAAM,CAAC,MAAM,iBAAiB,GAAG,iBAAiB,CAAC;AACnD,MAAM,CAAC,MAAM,oBAAoB,GAAG,yBAAyB,CAAC;AAG9D,IAAa,gBAAgB,GAA7B,MAAa,gBAAiB,SAAQ,cAAc;IAEhD,YACgC,KAAgB,EACV,KAAsB,EAC3B,mBAAwC;QAErE,KAAK,CAAC,KAAK,EAAE,KAAK,EAAE,mBAAmB,CAAC,CAAC;QAJb,UAAK,GAAL,KAAK,CAAW;QACV,UAAK,GAAL,KAAK,CAAiB;QAOpD,0BAAqB,GAAY,KAAK,CAAC;QAH3C,IAAI,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;IACrC,CAAC;IAID,IAAI,oBAAoB,CAAC,YAAqB;QAC1C,IAAI,CAAC,qBAAqB,GAAG,YAAY,CAAC;QAC1C,IAAI,CAAC,KAAK,CAAC,oBAAoB,GAAG,YAAY,CAAC;IACnD,CAAC;IAES,oBAAoB,CAAC,IAAc,EAAE,KAAgB;QAC3D,8DAA8D;QAC9D,MAAM,IAAI,GAAG,KAAK,CAAC,oBAAoB,CAAC,IAAI,EAAE,KAAK,CAAQ,CAAC;QAC5D,IAAI,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE;YACnC,MAAM,IAAI,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAC/B,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;gBACb,IAAI,CAAC,WAAW,EAAE,OAAO,EAAE,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE;oBAChD,OAAO,IAAI,CAAC,CAAC,CAAC,CAAC;iBAClB;YACL,CAAC,CAAC,CAAC;SACN;QACD,OAAO,IAAI,CAAC;IAChB,CAAC;IAES,oBAAoB,CAAC,IAAc,EAAE,KAAgB;QAC3D,MAAM,UAAU,GAAG,KAAK,CAAC,oBAAoB,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;QAC3D,IAAI,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,EAAE;YACnC,CAAC,cAAc,EAAE,WAAW,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE;gBACzC,MAAM,GAAG,GAAG,UAAU,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACrC,IAAI,GAAG,IAAI,CAAC,EAAE;oBACV,UAAU,CAAC,MAAM,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC;iBAC7B;YACL,CAAC,CAAC,CAAC;YACH,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,CAAC;SACzC;QACD,OAAO,UAAU,CAAC;IACtB,CAAC;IAES,sBAAsB,CAAC,IAAc;QAC3C,OAAO,YAAY,CAAC,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,WAAW,IAAI,IAAI,CAAC,qBAAqB,CAAC;IAC7F,CAAC;CACJ,CAAA;AAjDY,gBAAgB;IAD5B,UAAU,EAAE;IAIJ,WAAA,MAAM,CAAC,SAAS,CAAC,CAAA;IACjB,WAAA,MAAM,CAAC,eAAe,CAAC,CAAA;IACvB,WAAA,MAAM,CAAC,mBAAmB,CAAC,CAAA;GALvB,gBAAgB,CAiD5B;SAjDY,gBAAgB","file":"../../../src/browser/file-dialog/file-dialog-widget.js","sourcesContent":["import {inject, injectable} from 'inversify';\r\nimport {FileStatNode, FileTreeWidget} from '../file-tree';\r\nimport {FOCUS_CLASS, SELECTED_CLASS, TreeProps} from '@tart/core/lib/browser';\r\nimport {FileDialogModel} from './file-dialog-model';\r\nimport {ContextMenuRenderer, NodeProps, TreeNode} from '@tart/core';\r\n\r\nexport const FILE_DIALOG_CLASS = 'tart-FileDialog';\r\nexport const NOT_SELECTABLE_CLASS = 'tart-mod-not-selectable';\r\n\r\n@injectable()\r\nexport class FileDialogWidget extends FileTreeWidget {\r\n\r\n    constructor(\r\n        @inject(TreeProps) readonly props: TreeProps,\r\n        @inject(FileDialogModel) readonly model: FileDialogModel,\r\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer\r\n    ) {\r\n        super(props, model, contextMenuRenderer);\r\n        this.addClass(FILE_DIALOG_CLASS);\r\n    }\r\n\r\n    private _disableFileSelection: boolean = false;\r\n\r\n    set disableFileSelection(isSelectable: boolean) {\r\n        this._disableFileSelection = isSelectable;\r\n        this.model.disableFileSelection = isSelectable;\r\n    }\r\n\r\n    protected createNodeAttributes(node: TreeNode, props: NodeProps): React.Attributes & React.HTMLAttributes<HTMLElement> {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const attr = super.createNodeAttributes(node, props) as any;\r\n        if (this.shouldDisableSelection(node)) {\r\n            const keys = Object.keys(attr);\r\n            keys.forEach(k => {\r\n                if (['className', 'style', 'title'].indexOf(k) < 0) {\r\n                    delete attr[k];\r\n                }\r\n            });\r\n        }\r\n        return attr;\r\n    }\r\n\r\n    protected createNodeClassNames(node: TreeNode, props: NodeProps): string[] {\r\n        const classNames = super.createNodeClassNames(node, props);\r\n        if (this.shouldDisableSelection(node)) {\r\n            [SELECTED_CLASS, FOCUS_CLASS].forEach(name => {\r\n                const ind = classNames.indexOf(name);\r\n                if (ind >= 0) {\r\n                    classNames.splice(ind, 1);\r\n                }\r\n            });\r\n            classNames.push(NOT_SELECTABLE_CLASS);\r\n        }\r\n        return classNames;\r\n    }\r\n\r\n    protected shouldDisableSelection(node: TreeNode): boolean {\r\n        return FileStatNode.is(node) && !node.fileStat.isDirectory && this._disableFileSelection;\r\n    }\r\n}\r\n"]}
{"version":3,"sources":["browser/file-dialog/file-dialog-service.ts"],"names":[],"mappings":"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","file":"../../../src/browser/file-dialog/file-dialog-service.js","sourcesContent":["import {OpenFileDialogFactory, OpenFileDialogProps, SaveFileDialogFactory, SaveFileDialogProps} from './file-dialog';\r\nimport {FileStat} from '../../common/files';\r\nimport URI from '@tart/core/lib/common/uri';\r\nimport {MaybeArray} from '@tart/core/lib/common';\r\nimport {inject, injectable} from 'inversify';\r\nimport {FileService} from '../file-service';\r\nimport {LabelProvider} from '@tart/core/lib/browser';\r\nimport {DirNode} from '../file-tree';\r\n\r\nexport const FileDialogService = Symbol('FileDialogService');\r\n\r\nexport interface FileDialogService {\r\n\r\n    showOpenDialog(props: OpenFileDialogProps & { canSelectMany: true }, folder?: FileStat): Promise<MaybeArray<URI> | undefined>;\r\n\r\n    showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<URI | undefined>;\r\n\r\n    showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<MaybeArray<URI> | undefined>;\r\n\r\n    showSaveDialog(props: SaveFileDialogProps, folder?: FileStat): Promise<URI | undefined>\r\n\r\n}\r\n\r\n@injectable()\r\nexport class DefaultFileDialogService implements FileDialogService {\r\n\r\n    @inject(FileService)\r\n    protected readonly fileService: FileService;\r\n\r\n    @inject(OpenFileDialogFactory) protected readonly openFileDialogFactory: OpenFileDialogFactory;\r\n    @inject(LabelProvider) protected readonly labelProvider: LabelProvider;\r\n    @inject(SaveFileDialogFactory) protected readonly saveFileDialogFactory: SaveFileDialogFactory;\r\n\r\n    async showOpenDialog(props: OpenFileDialogProps & { canSelectMany: true }, folder?: FileStat): Promise<MaybeArray<URI> | undefined>;\r\n    async showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<URI | undefined>;\r\n    async showOpenDialog(props: OpenFileDialogProps, folder?: FileStat): Promise<MaybeArray<URI> | undefined> {\r\n        const title = props.title || 'Open';\r\n        const rootNode = await this.getRootNode(folder);\r\n        if (rootNode) {\r\n            const dialog = this.openFileDialogFactory(Object.assign(props, {title}));\r\n            await dialog.model.navigateTo(rootNode);\r\n            const value = await dialog.open();\r\n            if (value) {\r\n                if (!Array.isArray(value)) {\r\n                    return value.uri;\r\n                }\r\n                return value.map(node => node.uri);\r\n            }\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    async showSaveDialog(props: SaveFileDialogProps, folder?: FileStat): Promise<URI | undefined> {\r\n        const title = props.title || 'Save';\r\n        const rootNode = await this.getRootNode(folder);\r\n        if (rootNode) {\r\n            const dialog = this.saveFileDialogFactory(Object.assign(props, {title}));\r\n            await dialog.model.navigateTo(rootNode);\r\n            return dialog.open();\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    protected async getRootNode(folderToOpen?: FileStat): Promise<DirNode | undefined> {\r\n        const folderExists = folderToOpen && await this.fileService.exists(folderToOpen.resource);\r\n        const folder = folderToOpen && folderExists ? folderToOpen : {\r\n            // resource: new URI(await this.environments.getHomeDirUri()),\r\n            resource: new URI(),\r\n            isDirectory: true\r\n        };\r\n        const folderUri = folder.resource;\r\n        const rootUri = folder.isDirectory ? folderUri : folderUri.parent;\r\n        try {\r\n            const rootStat = await this.fileService.resolve(rootUri);\r\n            return DirNode.createRoot(rootStat);\r\n        } catch {\r\n        }\r\n        return undefined;\r\n    }\r\n}\r\n"]}
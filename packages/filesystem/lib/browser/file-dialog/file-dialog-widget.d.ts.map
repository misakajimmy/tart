{"version":3,"sources":["browser/file-dialog/file-dialog-widget.ts"],"names":[],"mappings":"AACA,OAAO,EAAe,cAAc,EAAC,MAAM,cAAc,CAAC;AAC1D,OAAO,EAA8B,SAAS,EAAC,MAAM,wBAAwB,CAAC;AAC9E,OAAO,EAAC,eAAe,EAAC,MAAM,qBAAqB,CAAC;AACpD,OAAO,EAAC,mBAAmB,EAAE,SAAS,EAAE,QAAQ,EAAC,MAAM,YAAY,CAAC;AAEpE,eAAO,MAAM,iBAAiB,oBAAoB,CAAC;AACnD,eAAO,MAAM,oBAAoB,4BAA4B,CAAC;AAE9D,qBACa,gBAAiB,SAAQ,cAAc;IAGzB,QAAQ,CAAC,KAAK,EAAE,SAAS;IACnB,QAAQ,CAAC,KAAK,EAAE,eAAe;gBAD5B,KAAK,EAAE,SAAS,EACV,KAAK,EAAE,eAAe,EAC3B,mBAAmB,EAAE,mBAAmB;IAMzE,OAAO,CAAC,qBAAqB,CAAkB;IAE/C,IAAI,oBAAoB,CAAC,YAAY,EAAE,OAAO,EAG7C;IAED,SAAS,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,GAAG,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,cAAc,CAAC,WAAW,CAAC;IActH,SAAS,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,GAAG,MAAM,EAAE;IAc1E,SAAS,CAAC,sBAAsB,CAAC,IAAI,EAAE,QAAQ,GAAG,OAAO;CAG5D","file":"../../../src/browser/file-dialog/file-dialog-widget.d.ts","sourcesContent":["import {inject, injectable} from 'inversify';\r\nimport {FileStatNode, FileTreeWidget} from '../file-tree';\r\nimport {FOCUS_CLASS, SELECTED_CLASS, TreeProps} from '@tart/core/lib/browser';\r\nimport {FileDialogModel} from './file-dialog-model';\r\nimport {ContextMenuRenderer, NodeProps, TreeNode} from '@tart/core';\r\n\r\nexport const FILE_DIALOG_CLASS = 'tart-FileDialog';\r\nexport const NOT_SELECTABLE_CLASS = 'tart-mod-not-selectable';\r\n\r\n@injectable()\r\nexport class FileDialogWidget extends FileTreeWidget {\r\n\r\n    constructor(\r\n        @inject(TreeProps) readonly props: TreeProps,\r\n        @inject(FileDialogModel) readonly model: FileDialogModel,\r\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer\r\n    ) {\r\n        super(props, model, contextMenuRenderer);\r\n        this.addClass(FILE_DIALOG_CLASS);\r\n    }\r\n\r\n    private _disableFileSelection: boolean = false;\r\n\r\n    set disableFileSelection(isSelectable: boolean) {\r\n        this._disableFileSelection = isSelectable;\r\n        this.model.disableFileSelection = isSelectable;\r\n    }\r\n\r\n    protected createNodeAttributes(node: TreeNode, props: NodeProps): React.Attributes & React.HTMLAttributes<HTMLElement> {\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        const attr = super.createNodeAttributes(node, props) as any;\r\n        if (this.shouldDisableSelection(node)) {\r\n            const keys = Object.keys(attr);\r\n            keys.forEach(k => {\r\n                if (['className', 'style', 'title'].indexOf(k) < 0) {\r\n                    delete attr[k];\r\n                }\r\n            });\r\n        }\r\n        return attr;\r\n    }\r\n\r\n    protected createNodeClassNames(node: TreeNode, props: NodeProps): string[] {\r\n        const classNames = super.createNodeClassNames(node, props);\r\n        if (this.shouldDisableSelection(node)) {\r\n            [SELECTED_CLASS, FOCUS_CLASS].forEach(name => {\r\n                const ind = classNames.indexOf(name);\r\n                if (ind >= 0) {\r\n                    classNames.splice(ind, 1);\r\n                }\r\n            });\r\n            classNames.push(NOT_SELECTABLE_CLASS);\r\n        }\r\n        return classNames;\r\n    }\r\n\r\n    protected shouldDisableSelection(node: TreeNode): boolean {\r\n        return FileStatNode.is(node) && !node.fileStat.isDirectory && this._disableFileSelection;\r\n    }\r\n}\r\n"]}
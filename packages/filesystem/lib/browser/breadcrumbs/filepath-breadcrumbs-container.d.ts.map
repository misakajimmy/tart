{"version":3,"sources":["browser/breadcrumbs/filepath-breadcrumbs-container.ts"],"names":[],"mappings":"AAAA,OAAO,EAAC,SAAS,EAAsB,UAAU,EAAC,MAAM,WAAW,CAAC;AACpE,OAAO,EACH,mBAAmB,EAEnB,SAAS,EAET,aAAa,EACb,QAAQ,EACR,SAAS,EACZ,MAAM,wBAAwB,CAAC;AAChC,OAAO,EAAwC,aAAa,EAAE,cAAc,EAAC,MAAM,cAAc,CAAC;AAIlG,wBAAgB,kCAAkC,CAAC,MAAM,EAAE,UAAU,CAAC,SAAS,GAAG,SAAS,CAM1F;AAED,wBAAgB,+BAA+B,CAAC,MAAM,EAAE,UAAU,CAAC,SAAS,GAAG,yBAAyB,CAEvG;AAED,qBACa,yBAA0B,SAAQ,cAAc;IAMlC,QAAQ,CAAC,KAAK,EAAE,SAAS;IACrB,QAAQ,CAAC,KAAK,EAAE,aAAa;IAJxD,SAAS,CAAC,QAAQ,CAAC,aAAa,EAAE,aAAa,CAAC;gBAGhB,KAAK,EAAE,SAAS,EACZ,KAAK,EAAE,aAAa,EACvB,mBAAmB,EAAE,mBAAmB;IAMzE,SAAS,CAAC,oBAAoB,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE,SAAS,GAAG,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,cAAc,CAAC,WAAW,CAAC;IAQtH,SAAS,CAAC,gBAAgB,CAAC,IAAI,EAAE,QAAQ,GAAG,SAAS,EAAE,KAAK,EAAE,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,IAAI;CAOrG","file":"../../../src/browser/breadcrumbs/filepath-breadcrumbs-container.d.ts","sourcesContent":["import {Container, inject, injectable, interfaces} from 'inversify';\r\nimport {\r\n    ContextMenuRenderer,\r\n    defaultTreeProps,\r\n    NodeProps,\r\n    open,\r\n    OpenerService,\r\n    TreeNode,\r\n    TreeProps\r\n} from '@tart/core/lib/browser';\r\nimport {createFileTreeContainer, FileStatNode, FileTreeModel, FileTreeWidget} from '../file-tree';\r\n\r\nconst BREADCRUMBS_FILETREE_CLASS = 'tart-FilepathBreadcrumbFileTree';\r\n\r\nexport function createFileTreeBreadcrumbsContainer(parent: interfaces.Container): Container {\r\n    const child = createFileTreeContainer(parent);\r\n    child.unbind(FileTreeWidget);\r\n    child.rebind(TreeProps).toConstantValue({...defaultTreeProps, virtualized: false});\r\n    child.bind(BreadcrumbsFileTreeWidget).toSelf();\r\n    return child;\r\n}\r\n\r\nexport function createFileTreeBreadcrumbsWidget(parent: interfaces.Container): BreadcrumbsFileTreeWidget {\r\n    return createFileTreeBreadcrumbsContainer(parent).get(BreadcrumbsFileTreeWidget);\r\n}\r\n\r\n@injectable()\r\nexport class BreadcrumbsFileTreeWidget extends FileTreeWidget {\r\n\r\n    @inject(OpenerService)\r\n    protected readonly openerService: OpenerService;\r\n\r\n    constructor(\r\n        @inject(TreeProps) readonly props: TreeProps,\r\n        @inject(FileTreeModel) readonly model: FileTreeModel,\r\n        @inject(ContextMenuRenderer) contextMenuRenderer: ContextMenuRenderer\r\n    ) {\r\n        super(props, model, contextMenuRenderer);\r\n        this.addClass(BREADCRUMBS_FILETREE_CLASS);\r\n    }\r\n\r\n    protected createNodeAttributes(node: TreeNode, props: NodeProps): React.Attributes & React.HTMLAttributes<HTMLElement> {\r\n        const elementAttrs = super.createNodeAttributes(node, props);\r\n        return {\r\n            ...elementAttrs,\r\n            draggable: false\r\n        };\r\n    }\r\n\r\n    protected handleClickEvent(node: TreeNode | undefined, event: React.MouseEvent<HTMLElement>): void {\r\n        if (FileStatNode.is(node) && !node.fileStat.isDirectory) {\r\n            open(this.openerService, node.uri, {preview: true});\r\n        } else {\r\n            super.handleClickEvent(node, event);\r\n        }\r\n    }\r\n}\r\n"]}
{"version":3,"sources":["browser/location/loaction-render.tsx"],"names":[],"mappings":"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","file":"../../../src/browser/location/loaction-render.js","sourcesContent":["import * as React from 'react';\r\nimport * as ReactDOM from 'react-dom';\r\nimport {DisposableCollection, Emitter, Path} from '@tart/core/lib/common';\r\nimport {FileService} from '../file-service';\r\nimport URI from '@tart/core/lib/common/uri';\r\nimport {inject, injectable, postConstruct} from 'inversify';\r\nimport {codicon, ReactRenderer} from '@tart/core';\r\nimport {FileDialogModel} from '../file-dialog/file-dialog-model';\r\nimport {LocationService} from './locaion-service';\r\n\r\ninterface AutoSuggestDataEvent {\r\n    parent: string;\r\n    children: string[];\r\n}\r\n\r\nclass ResolvedDirectoryCache {\r\n    protected pendingResolvedDirectories = new Map<string, Promise<void>>();\r\n    protected cachedDirectories = new Map<string, string[]>();\r\n\r\n    protected directoryResolvedEmitter = new Emitter<AutoSuggestDataEvent>();\r\n    readonly onDirectoryDidResolve = this.directoryResolvedEmitter.event;\r\n\r\n    constructor(protected readonly fileService: FileService) {\r\n    }\r\n\r\n    tryResolveChildDirectories(inputAsURI: URI): string[] | undefined {\r\n        const parentDirectory = inputAsURI.path.dir.toString();\r\n        const cachedDirectories = this.cachedDirectories.get(parentDirectory);\r\n        const pendingDirectories = this.pendingResolvedDirectories.get(parentDirectory);\r\n        if (cachedDirectories) {\r\n            return cachedDirectories;\r\n        } else if (!pendingDirectories) {\r\n            this.pendingResolvedDirectories.set(parentDirectory, this.createResolutionPromise(parentDirectory));\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    protected async createResolutionPromise(directoryToResolve: string): Promise<void> {\r\n        return this.fileService.resolve(new URI(directoryToResolve)).then(({children}) => {\r\n            if (children) {\r\n                const childDirectories = children.filter(child => child.isDirectory)\r\n                    .map(directory => `${directory.resource.path}/`);\r\n                this.cachedDirectories.set(directoryToResolve, childDirectories);\r\n                this.directoryResolvedEmitter.fire({parent: directoryToResolve, children: childDirectories});\r\n            }\r\n        }).catch(e => {\r\n            // no-op\r\n        });\r\n    }\r\n}\r\n\r\nexport const LocationListRendererFactory = Symbol('LocationListRendererFactory');\r\n\r\nexport interface LocationListRendererFactory {\r\n    (options: LocationListRendererOptions): LocationListRenderer;\r\n}\r\n\r\nexport const LocationListRendererOptions = Symbol('LocationListRendererOptions');\r\n\r\nexport interface LocationListRendererOptions {\r\n    model: FileDialogModel;\r\n    host?: HTMLElement;\r\n}\r\n\r\n@injectable()\r\nexport class LocationListRenderer extends ReactRenderer {\r\n\r\n    @inject(FileService) protected readonly fileService: FileService;\r\n\r\n    protected directoryCache: ResolvedDirectoryCache;\r\n    protected service: LocationService;\r\n    protected toDisposeOnNewCache = new DisposableCollection();\r\n    protected _drives: URI[] | undefined;\r\n    protected homeDir: string;\r\n    protected lastUniqueTextInputLocation: URI | undefined;\r\n    protected previousAutocompleteMatch: string;\r\n    protected doAttemptAutocomplete = true;\r\n\r\n    constructor(\r\n        @inject(LocationListRendererOptions) readonly options: LocationListRendererOptions\r\n    ) {\r\n        super(options.host);\r\n        this.service = options.model;\r\n        this.doLoadDrives();\r\n    }\r\n\r\n    protected _doShowTextInput = false;\r\n\r\n    get doShowTextInput(): boolean {\r\n        return this._doShowTextInput;\r\n    }\r\n\r\n    set doShowTextInput(doShow: boolean) {\r\n        this._doShowTextInput = doShow;\r\n        if (doShow) {\r\n            this.initResolveDirectoryCache();\r\n        }\r\n    }\r\n\r\n    get locationList(): HTMLSelectElement | undefined {\r\n        const locationList = this.host.getElementsByClassName(LocationListRenderer.Styles.LOCATION_LIST_CLASS)[0];\r\n        if (locationList instanceof HTMLSelectElement) {\r\n            return locationList;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    get locationTextInput(): HTMLInputElement | undefined {\r\n        const locationTextInput = this.host.getElementsByClassName(LocationListRenderer.Styles.LOCATION_TEXT_INPUT_CLASS)[0];\r\n        if (locationTextInput instanceof HTMLInputElement) {\r\n            return locationTextInput;\r\n        }\r\n        return undefined;\r\n    }\r\n\r\n    @postConstruct()\r\n    async init(): Promise<void> {\r\n        // const homeDirWithPrefix = await this.variablesServer.getHomeDirUri();\r\n        // this.homeDir = (new URI(homeDirWithPrefix)).path.toString();\r\n        this.homeDir = (new URI()).path.toString();\r\n    }\r\n\r\n    render(): void {\r\n        ReactDOM.render(this.doRender(), this.host, this.doAfterRender);\r\n    }\r\n\r\n    dispose(): void {\r\n        super.dispose();\r\n        this.toDisposeOnNewCache.dispose();\r\n    }\r\n\r\n    protected initResolveDirectoryCache(): void {\r\n        this.toDisposeOnNewCache.dispose();\r\n        this.directoryCache = new ResolvedDirectoryCache(this.fileService);\r\n        this.toDisposeOnNewCache.push(this.directoryCache.onDirectoryDidResolve(({parent, children}) => {\r\n            if (this.locationTextInput) {\r\n                const expandedPath = Path.untildify(this.locationTextInput.value, this.homeDir);\r\n                const inputParent = (new URI(expandedPath)).path.dir.toString();\r\n                if (inputParent === parent) {\r\n                    this.tryRenderFirstMatch(this.locationTextInput, children);\r\n                }\r\n            }\r\n        }));\r\n    }\r\n\r\n    protected doAfterRender = (): void => {\r\n        const locationList = this.locationList;\r\n        const locationListTextInput = this.locationTextInput;\r\n        if (locationList) {\r\n            const currentLocation = this.service.location;\r\n            locationList.value = currentLocation ? currentLocation.toString() : '';\r\n        } else if (locationListTextInput) {\r\n            locationListTextInput.focus();\r\n        }\r\n    };\r\n\r\n    protected readonly handleLocationChanged = (e: React.ChangeEvent<HTMLSelectElement>) => this.onLocationChanged(e);\r\n\r\n    protected readonly handleTextInputOnChange = (e: React.ChangeEvent<HTMLInputElement>) => this.trySuggestDirectory(e);\r\n\r\n    protected readonly handleTextInputKeyDown = (e: React.KeyboardEvent<HTMLInputElement>) => this.handleControlKeys(e);\r\n\r\n    protected readonly handleIconKeyDown = (e: React.KeyboardEvent<HTMLSpanElement>) => this.toggleInputOnKeyDown(e);\r\n\r\n    protected readonly handleTextInputOnBlur = () => this.toggleToSelectInput();\r\n\r\n    protected readonly handleTextInputMouseDown = (e: React.MouseEvent<HTMLSpanElement>) => this.toggleToTextInputOnMouseDown(e);\r\n\r\n    protected doRender(): React.ReactElement {\r\n        return (\r\n            <>\r\n                {this.renderInputIcon()}\r\n                {this.doShowTextInput\r\n                    ? this.renderTextInput()\r\n                    : this.renderSelectInput()\r\n                }\r\n            </>\r\n        );\r\n    }\r\n\r\n    protected renderInputIcon(): React.ReactNode {\r\n        return (\r\n            <span\r\n                // onMouseDown is used since it will fire before 'onBlur'. This prevents\r\n                // a re-render when textinput is in focus and user clicks toggle icon\r\n                onMouseDown={this.handleTextInputMouseDown}\r\n                onKeyDown={this.handleIconKeyDown}\r\n                className={LocationListRenderer.Styles.LOCATION_INPUT_TOGGLE_CLASS}\r\n                tabIndex={0}\r\n                id={`${this.doShowTextInput ? 'text-input' : 'select-input'}`}\r\n                title={this.doShowTextInput\r\n                    ? LocationListRenderer.Tooltips.TOGGLE_SELECT_INPUT\r\n                    : LocationListRenderer.Tooltips.TOGGLE_TEXT_INPUT}\r\n            >\r\n                <i className={codicon(this.doShowTextInput ? 'folder-opened' : 'edit')}/>\r\n            </span>\r\n        );\r\n    }\r\n\r\n    protected renderTextInput(): React.ReactNode {\r\n        return (\r\n            <input className={'tart-select ' + LocationListRenderer.Styles.LOCATION_TEXT_INPUT_CLASS}\r\n                   defaultValue={this.service.location?.path.toString()}\r\n                   onBlur={this.handleTextInputOnBlur}\r\n                   onChange={this.handleTextInputOnChange}\r\n                   onKeyDown={this.handleTextInputKeyDown}\r\n                   spellCheck={false}\r\n            />\r\n        );\r\n    }\r\n\r\n    protected renderSelectInput(): React.ReactNode {\r\n        const options = this.collectLocations().map(value => this.renderLocation(value));\r\n        return (\r\n            <select className={`tart-select ${LocationListRenderer.Styles.LOCATION_LIST_CLASS}`}\r\n                    onChange={this.handleLocationChanged}>\r\n                {...options}\r\n            </select>\r\n        );\r\n    }\r\n\r\n    protected toggleInputOnKeyDown(e: React.KeyboardEvent<HTMLSpanElement>): void {\r\n        if (e.key === 'Enter') {\r\n            this.doShowTextInput = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    protected toggleToTextInputOnMouseDown(e: React.MouseEvent<HTMLSpanElement>): void {\r\n        if (e.currentTarget.id === 'select-input') {\r\n            e.preventDefault();\r\n            this.doShowTextInput = true;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    protected toggleToSelectInput(): void {\r\n        if (this.doShowTextInput) {\r\n            this.doShowTextInput = false;\r\n            this.render();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Collects the available locations based on the currently selected, and appends the available drives to it.\r\n     */\r\n    protected collectLocations(): LocationListRenderer.Location[] {\r\n        const location = this.service.location;\r\n        const locations: LocationListRenderer.Location[] = (!!location ? location.allLocations : []).map(uri => ({uri}));\r\n        if (this._drives) {\r\n            const drives = this._drives.map(uri => ({uri, isDrive: true}));\r\n            // `URI.allLocations` returns with the URI without the trailing slash unlike `FileUri.create(fsPath)`.\r\n            // to be able to compare file:///path/to/resource with file:///path/to/resource/.\r\n            const toUriString = (uri: URI) => {\r\n                const toString = uri.toString();\r\n                return toString.endsWith('/') ? toString.slice(0, -1) : toString;\r\n            };\r\n            drives.forEach(drive => {\r\n                const index = locations.findIndex(loc => toUriString(loc.uri) === toUriString(drive.uri));\r\n                // Ignore drives which are already discovered as a location based on the current model root URI.\r\n                if (index === -1) {\r\n                    // Make sure, it does not have the trailing slash.\r\n                    locations.push({uri: new URI(toUriString(drive.uri)), isDrive: true});\r\n                } else {\r\n                    // This is necessary for Windows to be able to show `/e:/` as a drive and `c:` as \"non-drive\" in the same way.\r\n                    // `URI.path.toString()` Vs. `URI.displayName` behaves a bit differently on Windows.\r\n                    // https://github.com/eclipse-tart/tart/pull/3038#issuecomment-425944189\r\n                    locations[index].isDrive = true;\r\n                }\r\n            });\r\n        }\r\n        this.doLoadDrives();\r\n        return locations;\r\n    }\r\n\r\n    /**\r\n     * Asynchronously loads the drives (if not yet available) and triggers a UI update on success with the new values.\r\n     */\r\n    protected doLoadDrives(): void {\r\n        if (!this._drives) {\r\n            this.service.drives().then(drives => {\r\n                // If the `drives` are empty, something already went wrong.\r\n                if (drives.length > 0) {\r\n                    this._drives = drives;\r\n                    this.render();\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    protected renderLocation(location: LocationListRenderer.Location): React.ReactNode {\r\n        const {uri, isDrive} = location;\r\n        const value = uri.toString();\r\n        return <option value={value} key={uri.toString()}>{isDrive ? uri.path.toString() : uri.displayName}</option>;\r\n    }\r\n\r\n    protected onLocationChanged(e: React.ChangeEvent<HTMLSelectElement>): void {\r\n        const locationList = this.locationList;\r\n        if (locationList) {\r\n            const value = locationList.value;\r\n            const uri = new URI(value);\r\n            this.trySetNewLocation(uri);\r\n            e.preventDefault();\r\n            e.stopPropagation();\r\n        }\r\n    }\r\n\r\n    protected trySetNewLocation(newLocation: URI): void {\r\n        if (this.lastUniqueTextInputLocation === undefined) {\r\n            this.lastUniqueTextInputLocation = this.service.location;\r\n        }\r\n        // prevent consecutive repeated locations from being added to location history\r\n        if (this.lastUniqueTextInputLocation?.path.toString() !== newLocation.path.toString()) {\r\n            this.lastUniqueTextInputLocation = newLocation;\r\n            this.service.location = newLocation;\r\n        }\r\n    }\r\n\r\n    protected trySuggestDirectory(e: React.ChangeEvent<HTMLInputElement>): void {\r\n        if (this.doAttemptAutocomplete) {\r\n            const inputElement = e.currentTarget;\r\n            const {value} = inputElement;\r\n            if ((value.startsWith('/') || value.startsWith('~/')) && value.slice(-1) !== '/') {\r\n                const expandedPath = Path.untildify(value, this.homeDir);\r\n                const valueAsURI = new URI(expandedPath);\r\n                const autocompleteDirectories = this.directoryCache.tryResolveChildDirectories(valueAsURI);\r\n                if (autocompleteDirectories) {\r\n                    this.tryRenderFirstMatch(inputElement, autocompleteDirectories);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected tryRenderFirstMatch(inputElement: HTMLInputElement, children: string[]): void {\r\n        const {value, selectionStart} = inputElement;\r\n        if (this.locationTextInput) {\r\n            const expandedPath = Path.untildify(value, this.homeDir);\r\n            const firstMatch = children?.find(child => child.includes(expandedPath));\r\n            if (firstMatch) {\r\n                const contractedPath = value.startsWith('~') ? Path.tildify(firstMatch, this.homeDir) : firstMatch;\r\n                this.locationTextInput.value = contractedPath;\r\n                this.locationTextInput.selectionStart = selectionStart;\r\n                this.locationTextInput.selectionEnd = firstMatch.length;\r\n            }\r\n        }\r\n    }\r\n\r\n    protected handleControlKeys(e: React.KeyboardEvent<HTMLInputElement>): void {\r\n        this.doAttemptAutocomplete = e.key !== 'Backspace';\r\n        if (e.key === 'Enter') {\r\n            const locationTextInput = this.locationTextInput;\r\n            if (locationTextInput) {\r\n                // expand '~' if present and remove extra whitespace and any trailing slashes or periods.\r\n                const sanitizedInput = locationTextInput.value.trim().replace(/[\\/\\\\.]*$/, '');\r\n                const untildifiedInput = Path.untildify(sanitizedInput, this.homeDir);\r\n                const uri = new URI(untildifiedInput);\r\n                this.trySetNewLocation(uri);\r\n                this.toggleToSelectInput();\r\n            }\r\n        } else if (e.key === 'Escape') {\r\n            this.toggleToSelectInput();\r\n        } else if (e.key === 'Tab') {\r\n            e.preventDefault();\r\n            const textInput = this.locationTextInput;\r\n            if (textInput) {\r\n                textInput.selectionStart = textInput.value.length;\r\n            }\r\n        }\r\n        e.stopPropagation();\r\n    }\r\n}\r\n\r\nexport namespace LocationListRenderer {\r\n\r\n    export namespace Styles {\r\n        export const LOCATION_LIST_CLASS = 'tart-LocationList';\r\n        export const LOCATION_INPUT_TOGGLE_CLASS = 'tart-LocationInputToggle';\r\n        export const LOCATION_TEXT_INPUT_CLASS = 'tart-LocationTextInput';\r\n    }\r\n\r\n    export namespace Tooltips {\r\n        export const TOGGLE_TEXT_INPUT = 'Switch to text-based input';\r\n        export const TOGGLE_SELECT_INPUT = 'Switch to location list';\r\n    }\r\n\r\n    export interface Location {\r\n        uri: URI;\r\n        isDrive?: boolean;\r\n    }\r\n\r\n}\r\n"]}
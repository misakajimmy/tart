{"version":3,"sources":["browser/virtual-file-service-contribution.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,MAAM,EAAE,UAAU,EAAC,MAAM,WAAW,CAAC;AAG7C,OAAO,EAAC,yBAAyB,EAAC,MAAM,wCAAwC,CAAC;AAGjF,IAAa,8BAA8B,GAA3C,MAAa,8BAA8B;IAKvC,2BAA2B,CAAC,OAAoB;QAC5C,MAAM,WAAW,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAE;YAC9C,OAAO,CAAC,gBAAgB,CAAC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;QACpD,CAAC,CAAC,CAAC;QACH,OAAO,CAAC,gCAAgC,CAAC,KAAK,CAAC,EAAE;YAC7C,IAAI,KAAK,CAAC,MAAM,KAAK,MAAM,EAAE;gBACzB,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;aAChC;QACL,CAAC,CAAC,CAAC;IACP,CAAC;CACJ,CAAA;AAZG;IADC,MAAM,CAAC,yBAAyB,CAAC;gEACqB;AAH9C,8BAA8B;IAD1C,UAAU,EAAE;GACA,8BAA8B,CAe1C;SAfY,8BAA8B","file":"../../src/browser/virtual-file-service-contribution.js","sourcesContent":["import {inject, injectable} from 'inversify';\r\nimport {FileService, FileServiceContribution} from './file-service';\r\nimport {VirtualFileSystemProvider} from '../common/virtual-file-system-provider';\r\nimport {StorageFileSystemProvider} from \"../common/storage-file-system-provider\";\r\n\r\n@injectable()\r\nexport class VirtualFileServiceContribution implements FileServiceContribution {\r\n\r\n    @inject(StorageFileSystemProvider)\r\n    protected readonly provider: StorageFileSystemProvider;\r\n\r\n    registerFileSystemProviders(service: FileService) {\r\n        const registering = this.provider.ready.then(() => {\r\n            service.registerProvider('file', this.provider);\r\n        });\r\n        service.onWillActivateFileSystemProvider(event => {\r\n            if (event.scheme === 'file') {\r\n                event.waitUntil(registering);\r\n            }\r\n        });\r\n    }\r\n}\r\n"]}
{"version":3,"sources":["common/storage-file-system-provider.ts"],"names":[],"mappings":"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","file":"../../src/common/storage-file-system-provider.js","sourcesContent":["import {injectable, postConstruct} from \"inversify\";\r\nimport {\r\n    FileChange,\r\n    FileChangeType,\r\n    FileDeleteOptions,\r\n    FileOpenOptions,\r\n    FileOverwriteOptions,\r\n    FileReadStreamOptions,\r\n    FileSystemProvider,\r\n    FileSystemProviderCapabilities,\r\n    FileType,\r\n    FileUpdateOptions,\r\n    FileUpdateResult,\r\n    FileWriteOptions,\r\n    Stat,\r\n    WatchOptions\r\n} from './files';\r\nimport URI from '@tart/core/lib/common/uri';\r\nimport type {TextDocumentContentChangeEvent} from 'vscode-languageserver-protocol';\r\nimport {newWriteableStream, ReadableStreamEvents} from '@tart/core/lib/common/stream';\r\nimport {CancellationToken, Disposable, DisposableCollection, Emitter, Event} from '@tart/core/lib/common';\r\nimport {Deferred} from \"@tart/core/lib/common/promise-util\";\r\nimport FileSystemAccess from \"./storage/file-system-access\";\r\nimport {BinaryBuffer} from \"@tart/core/lib/common/buffer\";\r\n\r\nconst decoder = new TextDecoder();\r\nconst encoder = new TextEncoder();\r\n\r\n@injectable()\r\nexport class StorageFileSystemProvider implements Required<FileSystemProvider>, Disposable {\r\n\r\n    private readonly onDidChangeCapabilitiesEmitter = new Emitter<void>();\r\n    readonly onDidChangeCapabilities = this.onDidChangeCapabilitiesEmitter.event;\r\n\r\n    readonly onFileWatchError: Event<void>;\r\n    protected readonly readyDeferred = new Deferred<void>();\r\n    readonly ready = this.readyDeferred.promise;\r\n    private readonly onDidChangeFileEmitter = new Emitter<readonly FileChange[]>();\r\n    readonly onDidChangeFile = this.onDidChangeFileEmitter.event;\r\n    protected readonly toDispose = new DisposableCollection(\r\n        this.onDidChangeFileEmitter,\r\n    );\r\n\r\n    private _capabilities: FileSystemProviderCapabilities = 0;\r\n\r\n    get capabilities(): FileSystemProviderCapabilities {\r\n        return this._capabilities;\r\n    }\r\n\r\n    private _fs: FileSystemAccess;\r\n\r\n    access(resource: URI, mode: number | undefined): Promise<void> {\r\n        return Promise.resolve(undefined);\r\n    }\r\n\r\n    close(fd: number): Promise<void> {\r\n        return Promise.resolve(undefined);\r\n    }\r\n\r\n    async copy(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\r\n        const pointer = await this._fs.getPointer(from.path.toString());\r\n        if (FileSystemAccess.IsFile(pointer)) {\r\n            await this.writeFile(to, encoder.encode(await (await pointer['getFile']()).text()), {\r\n                overwrite: true,\r\n                create: true\r\n            });\r\n        } else if (FileSystemAccess.IsDirectory(pointer)) {\r\n\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n\r\n    async delete(resource: URI, opts: FileDeleteOptions): Promise<void> {\r\n        let pointer = await this._fs.getPointer(resource.path.toString());\r\n        if (pointer !== undefined) {\r\n            const parent = await this._fs.parentDir(resource.path.toString());\r\n            await this._fs.delete(parent, resource.path.base);\r\n            this.onDidChangeFileEmitter.fire([{type: FileChangeType.DELETED, resource: resource}]);\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n\r\n    fsPath(resource: URI): Promise<string> {\r\n        return Promise.resolve(\"\");\r\n    }\r\n\r\n    async mkdir(resource: URI): Promise<void> {\r\n        let pointer = await this._fs.getPointer(resource.path.toString());\r\n        if (FileSystemAccess.IsFile(pointer)) {\r\n\r\n        } else if (FileSystemAccess.IsDirectory(pointer)) {\r\n\r\n        } else {\r\n            pointer = await this._fs.parentDir(resource.path.toString());\r\n            if (FileSystemAccess.IsDirectory(pointer)) {\r\n                await this._fs.mkdir(pointer, resource.path.name);\r\n                this.onDidChangeFileEmitter.fire([{type: FileChangeType.ADDED, resource: resource}]);\r\n            }\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n\r\n    open(resource: URI, opts: FileOpenOptions): Promise<number> {\r\n        return Promise.resolve(0);\r\n    }\r\n\r\n    read(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\r\n        return Promise.resolve(0);\r\n    }\r\n\r\n    async readFile(resource: URI): Promise<Uint8Array> {\r\n        const file = await this._fs.getFile(resource.path.toString());\r\n        if (!!file) {\r\n            return new Uint8Array(await file.arrayBuffer());\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n\r\n    async readFileStream(resource: URI, opts: FileReadStreamOptions, token: CancellationToken): Promise<ReadableStreamEvents<Uint8Array>> {\r\n        const stream = newWriteableStream<Uint8Array>(data => BinaryBuffer.concat(data.map(data => BinaryBuffer.wrap(data))).buffer);\r\n        const file = await this._fs.getFile(resource.path.toString());\r\n        const s = file.stream();\r\n        const reader = s['getReader']() as ReadableStreamDefaultReader;\r\n        let res = await reader.read();\r\n        while (!res.done) {\r\n            stream.write(res.value);\r\n            res = await reader.read();\r\n        }\r\n        stream.end();\r\n        return stream;\r\n    }\r\n\r\n    async readdir(resource: URI): Promise<[string, FileType][]> {\r\n        const dir = await this._fs.getDirHandlerFromRoot(resource.path.toString());\r\n        const files = await this._fs.listDir(dir);\r\n        return Promise.resolve(files.map(file => {\r\n            return [file.name, file.kind === 'file' ? FileType.File : FileType.Directory];\r\n        }));\r\n    }\r\n\r\n    async rename(from: URI, to: URI, opts: FileOverwriteOptions): Promise<void> {\r\n        let pointer = await this._fs.getPointer(from.path.toString());\r\n        if (FileSystemAccess.IsFile(pointer)) {\r\n            const dir = await this._fs.parentDir(to.path.toString());\r\n            await this._fs.move(pointer, dir, to.path.base);\r\n            this.onDidChangeFileEmitter.fire([{type: FileChangeType.UPDATED, resource: to}]);\r\n        } else if (FileSystemAccess.IsDirectory(pointer)) {\r\n\r\n        } else {\r\n\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n\r\n    async stat(resource: URI): Promise<Stat> {\r\n        return await this._fs.getStat(resource.path.toString());\r\n    }\r\n\r\n    async updateFile(resource: URI, changes: TextDocumentContentChangeEvent[], opts: FileUpdateOptions): Promise<FileUpdateResult> {\r\n        return Promise.resolve({\r\n            ...(await this._fs.getStat(resource.path.toString())),\r\n            encoding: 'utf8'\r\n        });\r\n    }\r\n\r\n    watch(resource: URI, opts: WatchOptions): Disposable {\r\n        return undefined;\r\n    }\r\n\r\n    write(fd: number, pos: number, data: Uint8Array, offset: number, length: number): Promise<number> {\r\n        return Promise.resolve(0);\r\n    }\r\n\r\n    async writeFile(resource: URI, content: Uint8Array, opts: FileWriteOptions): Promise<void> {\r\n        let pointer = await this._fs.getPointer(resource.path.toString());\r\n\r\n        if (FileSystemAccess.IsFile(pointer)) {\r\n            await this._fs.writeFile(pointer, content.buffer);\r\n        } else if (FileSystemAccess.IsDirectory(pointer)) {\r\n        } else {\r\n            const parent = await this._fs.parentDir(resource.path.toString());\r\n            const file = await this._fs.mkFile(parent, resource.path.base);\r\n            await this._fs.writeFile(file, content.buffer);\r\n            this.onDidChangeFileEmitter.fire([{type: FileChangeType.UPDATED, resource: resource}]);\r\n        }\r\n        return Promise.resolve(undefined);\r\n    }\r\n\r\n    dispose(): void {\r\n    }\r\n\r\n    useLocal(): void {\r\n        this._fs.localRoot();\r\n    }\r\n\r\n    @postConstruct()\r\n    protected init(): void {\r\n        this._capabilities = 16781342;\r\n        this._fs = new FileSystemAccess();\r\n        this._fs.setRoot().then(() => {\r\n            this.readyDeferred.resolve();\r\n        });\r\n        this._fs.setNotifyDidChangeFile(({changes}) => {\r\n            this.onDidChangeFileEmitter.fire(changes.map(event => ({\r\n                resource: new URI(event.resource),\r\n                type: event.type\r\n            })));\r\n        });\r\n    }\r\n}\r\n"]}